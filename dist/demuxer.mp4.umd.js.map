{"version":3,"file":"demuxer.mp4.umd.js","sources":["../src/enum/events.ts","../src/util/event-emitter.ts","../src/types/globals.ts","../src/util/is.ts","../src/util/cache-buffer.ts","../src/util/multi-map.ts","../src/util/event-manager.ts","../src/util/global.ts","../src/util/logger.ts","../src/util/stream.ts","../src/demux-facade.ts","../src/mp4/mp4-inspector.ts","../src/mp4/demux.ts"],"sourcesContent":["/**\r\n * @file= events.js, created at Monday, 23rd December 2019 3=47=23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\nexport enum Events {\r\n    ERROR = 'ERROR',\r\n    INFO = 'INFO',\r\n    DATA = 'DATA',\r\n    DEMUX_DATA = 'DEMUX_DATA',\r\n    DONE = 'DONE'\r\n}\r\n","/**\r\n * @copyright https://github.com/nodejs/node/blob/master/lib/events.js\r\n */\r\n/* eslint-disable */\r\n// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\nvar objectCreate = Object.create || objectCreatePolyfill;\r\nvar objectKeys = Object.keys || objectKeysPolyfill;\r\nvar bind = Function.prototype.bind || functionBindPolyfill;\r\n\r\n// By default Dispatchers will print a warning if more than 10 listeners are\r\n// added to it. This is a useful default which helps finding memory leaks.\r\nlet defaultMaxListeners = 10;\r\n\r\nexport default class EventEmitter {\r\n    static listenerCount(emitter, type) {\r\n        if (typeof emitter.listenerCount === 'function') {\r\n            return emitter.listenerCount(type);\r\n        } else {\r\n            return listenerCount.call(emitter, type);\r\n        }\r\n    }\r\n\r\n    static defaultMaxListeners: number;\r\n\r\n    _maxListeners?: number;\r\n    _eventsCount: number;\r\n    _events: any;\r\n\r\n    constructor() {\r\n        if (!this._events || !Object.prototype.hasOwnProperty.call(this, '_events')) {\r\n            this._events = objectCreate(null);\r\n            this._eventsCount = 0;\r\n        }\r\n\r\n        this._maxListeners = this._maxListeners || undefined;\r\n    }\r\n\r\n    // // Obviously not all Emitters should be limited to 10. This function allows\r\n    // // that to be increased. Set to zero for unlimited.\r\n    // setMaxListeners(n) {\r\n    //     if (typeof n !== 'number' || n < 0 || isNaN(n))\r\n    //         throw new TypeError('\"n\" argument must be a positive number');\r\n    //     this._maxListeners = n;\r\n    //     return this;\r\n    // }\r\n    //\r\n    // getMaxListeners() {\r\n    //     return $getMaxListeners(this);\r\n    // }\r\n\r\n    emit(type: string, ...rest) {\r\n        var er, handler, len, args, i, events;\r\n        var doError = type === 'error';\r\n\r\n        events = this._events;\r\n        if (events) doError = doError && events.error == null;\r\n        else if (!doError) return false;\r\n\r\n        // If there is no 'error' event listener then throw.\r\n        if (doError) {\r\n            if (arguments.length > 1) er = arguments[1];\r\n            if (er instanceof Error) {\r\n                throw er; // Unhandled 'error' event\r\n            } else {\r\n                // At least give some kind of context to the user\r\n                var err = new Error('Unhandled \"error\" event. (' + er + ')');\r\n                err['context'] = er;\r\n                throw err;\r\n            }\r\n        }\r\n\r\n        handler = events[type];\r\n\r\n        if (!handler) return false;\r\n\r\n        var isFn = typeof handler === 'function';\r\n        len = arguments.length;\r\n        switch (len) {\r\n            // fast cases\r\n            case 1:\r\n                emitNone(handler, isFn, this);\r\n                break;\r\n            case 2:\r\n                emitOne(handler, isFn, this, arguments[1]);\r\n                break;\r\n            case 3:\r\n                emitTwo(handler, isFn, this, arguments[1], arguments[2]);\r\n                break;\r\n            case 4:\r\n                emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\r\n                break;\r\n            // slower\r\n            default:\r\n                args = new Array(len - 1);\r\n                for (i = 1; i < len; i++) args[i - 1] = arguments[i];\r\n                emitMany(handler, isFn, this, args);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    on(type: string, listener: Function) {\r\n        return _addListener(this, type, listener);\r\n    }\r\n\r\n    once(type, listener) {\r\n        if (typeof listener !== 'function') throw new TypeError('\"listener\" argument must be a function');\r\n        this.on(type, _onceWrap(this, type, listener));\r\n        return this;\r\n    }\r\n\r\n    off(type, listener) {\r\n        return _removeListener.call(this, type, listener);\r\n    }\r\n\r\n    removeAllListeners(type) {\r\n        var listeners, events, i;\r\n\r\n        events = this._events;\r\n        if (!events) return this;\r\n\r\n        // not listening for off, no need to emit\r\n        if (!events.off) {\r\n            if (arguments.length === 0) {\r\n                this._events = objectCreate(null);\r\n                this._eventsCount = 0;\r\n            } else if (events[type]) {\r\n                if (--this._eventsCount === 0) this._events = objectCreate(null);\r\n                else delete events[type];\r\n            }\r\n            return this;\r\n        }\r\n\r\n        // emit off for all listeners on all events\r\n        if (arguments.length === 0) {\r\n            var keys = objectKeys(events);\r\n            var key;\r\n            for (i = 0; i < keys.length; ++i) {\r\n                key = keys[i];\r\n                if (key === 'off') continue;\r\n                this.removeAllListeners(key);\r\n            }\r\n            this.removeAllListeners('off');\r\n            this._events = objectCreate(null);\r\n            this._eventsCount = 0;\r\n            return this;\r\n        }\r\n\r\n        listeners = events[type];\r\n\r\n        if (typeof listeners === 'function') {\r\n            this.off(type, listeners);\r\n        } else if (listeners) {\r\n            // LIFO order\r\n            for (i = listeners.length - 1; i >= 0; i--) {\r\n                this.off(type, listeners[i]);\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    listeners(type) {\r\n        return _listeners(this, type, true);\r\n    }\r\n\r\n    rawListeners(type) {\r\n        return _listeners(this, type, false);\r\n    }\r\n\r\n    listenerCount() {\r\n        return EventEmitter.listenerCount.apply(this, arguments);\r\n    }\r\n}\r\n\r\nlet hasDefineProperty;\r\ntry {\r\n    var o = {};\r\n    if (Object.defineProperty) Object.defineProperty(o, 'x', { value: 0 });\r\n    hasDefineProperty = o['x'] === 0;\r\n} catch (err) {\r\n    hasDefineProperty = false;\r\n}\r\nif (hasDefineProperty) {\r\n    Object.defineProperty(EventEmitter, 'defaultMaxListeners', {\r\n        enumerable: true,\r\n        get: function () {\r\n            return defaultMaxListeners;\r\n        },\r\n        set: function (arg) {\r\n            // check whether the input is a positive number (whose value is zero or\r\n            // greater and not a NaN).\r\n            if (typeof arg !== 'number' || arg < 0 || arg !== arg)\r\n                throw new TypeError('\"defaultMaxListeners\" must be a positive number');\r\n            defaultMaxListeners = arg;\r\n        }\r\n    });\r\n} else {\r\n    EventEmitter.defaultMaxListeners = defaultMaxListeners;\r\n}\r\n\r\nfunction $getMaxListeners(that) {\r\n    if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;\r\n    return that._maxListeners;\r\n}\r\n\r\n// These standalone emit* functions are used to optimize calling of event\r\n// handlers for fast cases because emit() itself often has a variable number of\r\n// arguments and can be deoptimized because of that. These functions always have\r\n// the same number of arguments and thus do not get deoptimized, so the code\r\n// inside them can execute faster.\r\nfunction emitNone(handler, isFn, self) {\r\n    if (isFn) handler.call(self);\r\n    else {\r\n        var len = handler.length;\r\n        var listeners = arrayClone(handler, len);\r\n        for (var i = 0; i < len; ++i) {\r\n            try {\r\n                listeners[i].call(self);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction emitOne(handler, isFn, self, arg1) {\r\n    if (isFn) handler.call(self, arg1);\r\n    else {\r\n        var len = handler.length;\r\n        var listeners = arrayClone(handler, len);\r\n        for (var i = 0; i < len; ++i) {\r\n            try {\r\n                listeners[i].call(self, arg1);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\r\n    if (isFn) handler.call(self, arg1, arg2);\r\n    else {\r\n        var len = handler.length;\r\n        var listeners = arrayClone(handler, len);\r\n        for (var i = 0; i < len; ++i) {\r\n            try {\r\n                listeners[i].call(self, arg1, arg2);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\r\n    if (isFn) handler.call(self, arg1, arg2, arg3);\r\n    else {\r\n        var len = handler.length;\r\n        var listeners = arrayClone(handler, len);\r\n        for (var i = 0; i < len; ++i) {\r\n            try {\r\n                listeners[i].call(self, arg1, arg2, arg3);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction emitMany(handler, isFn, self, args) {\r\n    if (isFn) handler.apply(self, args);\r\n    else {\r\n        var len = handler.length;\r\n        var listeners = arrayClone(handler, len);\r\n        for (var i = 0; i < len; ++i) {\r\n            try {\r\n                listeners[i].apply(self, args);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction _addListener(target: EventEmitter, type, listener: Function) {\r\n    var m;\r\n    var events;\r\n    var existing;\r\n\r\n    if (typeof listener !== 'function') throw new TypeError('\"listener\" argument must be a function');\r\n\r\n    events = target._events;\r\n    if (!events) {\r\n        events = target._events = objectCreate(null);\r\n        target._eventsCount = 0;\r\n    } else {\r\n        // To avoid recursion in the case that type === \"newListener\"! Before\r\n        // adding it to the listeners, first emit \"newListener\".\r\n        if (events.newListener) {\r\n            target.emit('newListener', type, listener['listener'] ? listener['listener'] : listener);\r\n\r\n            // Re-assign `events` because a newListener handler could have caused the\r\n            // this._events to be assigned to a new object\r\n            events = target._events;\r\n        }\r\n        existing = events[type];\r\n    }\r\n\r\n    if (!existing) {\r\n        // Optimize the case of one listener. Don't need the extra array object.\r\n        existing = events[type] = listener;\r\n        ++target._eventsCount;\r\n    } else {\r\n        if (typeof existing === 'function') {\r\n            // Adding the second element, need to change to array.\r\n            existing = events[type] = [existing, listener];\r\n        } else {\r\n            existing.push(listener);\r\n        }\r\n\r\n        // Check for listener leak\r\n        if (!existing.warned) {\r\n            m = $getMaxListeners(target);\r\n            if (m && m > 0 && existing.length > m) {\r\n                existing.warned = true;\r\n\r\n                class CustomError extends Error {\r\n                    emitter: any;\r\n                    type: string;\r\n                    count: number;\r\n                }\r\n                let w: CustomError = new CustomError(\r\n                    'Possible Dispatcher memory leak detected. ' +\r\n                        existing.length +\r\n                        ' \"' +\r\n                        String(type) +\r\n                        '\" listeners ' +\r\n                        'added. Use emitter.setMaxListeners() to ' +\r\n                        'increase limit.'\r\n                );\r\n                w.name = 'MaxListenersExceededWarning';\r\n                w.emitter = target;\r\n                w.type = type;\r\n                w.count = existing.length;\r\n\r\n                if (typeof console === 'object' && console.warn) {\r\n                    console.warn('%s: %s', w.name, w.message);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return target;\r\n}\r\n\r\nfunction _removeListener(type, listener) {\r\n    var list, events, position, i, originalListener;\r\n\r\n    if (typeof listener !== 'function') throw new TypeError('\"listener\" argument must be a function');\r\n\r\n    events = this._events;\r\n    if (!events) return this;\r\n\r\n    list = events[type];\r\n    if (!list) return this;\r\n\r\n    if (list === listener || list.listener === listener) {\r\n        if (--this._eventsCount === 0) this._events = objectCreate(null);\r\n        else {\r\n            delete events[type];\r\n            if (events.off) this.emit('off', type, list.listener || listener);\r\n        }\r\n    } else if (typeof list !== 'function') {\r\n        position = -1;\r\n\r\n        for (i = list.length - 1; i >= 0; i--) {\r\n            if (list[i] === listener || list[i].listener === listener) {\r\n                originalListener = list[i].listener;\r\n                position = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (position < 0) return this;\r\n\r\n        if (position === 0) list.shift();\r\n        else spliceOne(list, position);\r\n\r\n        if (list.length === 1) events[type] = list[0];\r\n\r\n        if (events.off) this.emit('off', type, originalListener || listener);\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\nfunction onceWrapper() {\r\n    if (!this.fired) {\r\n        this.target.off(this.type, this.wrapFn);\r\n        this.fired = true;\r\n        switch (arguments.length) {\r\n            case 0:\r\n                return this.listener.call(this.target);\r\n            case 1:\r\n                return this.listener.call(this.target, arguments[0]);\r\n            case 2:\r\n                return this.listener.call(this.target, arguments[0], arguments[1]);\r\n            case 3:\r\n                return this.listener.call(this.target, arguments[0], arguments[1], arguments[2]);\r\n            default:\r\n                var args = new Array(arguments.length);\r\n                for (var i = 0; i < args.length; ++i) args[i] = arguments[i];\r\n                this.listener.apply(this.target, args);\r\n        }\r\n    }\r\n}\r\n\r\nfunction _onceWrap(target, type, listener) {\r\n    var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\r\n    var wrapped = bind.call(onceWrapper, state);\r\n    wrapped.listener = listener;\r\n    state.wrapFn = wrapped;\r\n    return wrapped;\r\n}\r\n\r\nfunction _listeners(target, type, unwrap) {\r\n    var events = target._events;\r\n\r\n    if (!events) return [];\r\n\r\n    var evlistener = events[type];\r\n    if (!evlistener) return [];\r\n\r\n    if (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];\r\n\r\n    return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\r\n}\r\n\r\nfunction listenerCount(type) {\r\n    var events = this._events;\r\n\r\n    if (events) {\r\n        var evlistener = events[type];\r\n\r\n        if (typeof evlistener === 'function') {\r\n            return 1;\r\n        } else if (evlistener) {\r\n            return evlistener.length;\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\n// About 1.5x faster than the two-arg version of Array#splice().\r\nfunction spliceOne(list, index) {\r\n    for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) list[i] = list[k];\r\n    list.pop();\r\n}\r\n\r\nfunction arrayClone(arr, n) {\r\n    var copy = new Array(n);\r\n    for (var i = 0; i < n; ++i) copy[i] = arr[i];\r\n    return copy;\r\n}\r\n\r\nfunction unwrapListeners(arr) {\r\n    var ret = new Array(arr.length);\r\n    for (var i = 0; i < ret.length; ++i) {\r\n        ret[i] = arr[i].listener || arr[i];\r\n    }\r\n    return ret;\r\n}\r\n\r\nfunction objectCreatePolyfill(proto) {\r\n    var F = function () {};\r\n    F.prototype = proto;\r\n    return new F();\r\n}\r\n\r\nfunction objectKeysPolyfill(obj) {\r\n    var keys = [];\r\n    for (var k in obj)\r\n        if (Object.prototype.hasOwnProperty.call(obj, k)) {\r\n            keys.push(k);\r\n        }\r\n    return k;\r\n}\r\n\r\nfunction functionBindPolyfill(context) {\r\n    var fn = this;\r\n    return function () {\r\n        return fn.apply(context, arguments);\r\n    };\r\n}\r\n","import EventEmitter from '../util/event-emitter';\r\n\r\nexport class Context extends EventEmitter {}\r\n\r\nexport type PushConf = Partial<{\r\n    done: boolean;\r\n    stubTime: number;\r\n    offsetPos: number; // Represents the start byte of the pushed data relative to the entire file\r\n}>;\r\n\r\nexport type GlobalOptions = Partial<{\r\n    debug: boolean;\r\n    decodeCodec: boolean;\r\n    config: PushConf;\r\n}>;\r\n\r\nexport interface IDemux {\r\n    /**\r\n     * Pipe the arrayBuffer to the demuxer.\r\n     * @param buf\r\n     * @param conf\r\n     */\r\n    push(buf: ArrayBuffer | Uint8Array, conf: PushConf): void;\r\n\r\n    reset(): void;\r\n\r\n    destroy(): void;\r\n}\r\n","/**\r\n * @file: is.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\n/**\r\n * Used to resolve the\r\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\r\n * of values.\r\n */\r\nvar objectToString = Object.prototype.toString;\r\n\r\n/**\r\n * Checks if `value` is object-like. A value is object-like if it's not `null`\r\n * and has a `typeof` result of \"object\".\r\n *\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\r\n * @example\r\n *\r\n * _.isObjectLike({});\r\n * // => true\r\n *\r\n * _.isObjectLike([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isObjectLike(_.noop);\r\n * // => false\r\n *\r\n * _.isObjectLike(null);\r\n * // => false\r\n */\r\nexport function isObjectLike(value: any): boolean {\r\n    return !!value && typeof value == 'object';\r\n}\r\n\r\nexport function isEmptyObject(obj: object): boolean {\r\n    for (var prop in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, prop)) {\r\n            return false;\r\n        }\r\n    }\r\n    return JSON.stringify(obj) === JSON.stringify({});\r\n}\r\n\r\n/**\r\n * @param url\r\n */\r\nexport function isHttps(url?: string): boolean {\r\n    return /^https/gi.test(url || window.location.protocol);\r\n}\r\n\r\n/**\r\n * @param num\r\n */\r\nexport function isNumber(num: any): boolean {\r\n    return typeof num === 'number' && !isNaN(num);\r\n}\r\n\r\n/**\r\n * @param value\r\n */\r\nexport function isArrayBuffer(value: any): boolean {\r\n    return isObjectLike(value) && objectToString.call(value).toLowerCase() === '[object arraybuffer]';\r\n}\r\n\r\n/**\r\n * @param value\r\n */\r\nexport function isUint8Array(value: any): boolean {\r\n    return isObjectLike(value) && objectToString.call(value).toLowerCase() === '[object uint8array]';\r\n}\r\n","/**\r\n * @file: cache-buffer.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\nimport { isNumber } from './is';\r\n\r\n/**\r\n * Cache Buffer util.\r\n * It's applicable for streaming data cutting and retaining the data,\r\n * the algorithm minimizes memory application as much as possible.\r\n */\r\n\r\nexport default class CacheBuffer {\r\n    get byteLength(): number {\r\n        if (!isNumber(this.byteLength_)) {\r\n            let len = 0;\r\n\r\n            for (let i = 0, item: Uint8Array; i < this.list_.length; i++) {\r\n                item = this.list_[i];\r\n                len += item.byteLength;\r\n            }\r\n            this.byteLength_ = len;\r\n        }\r\n\r\n        return this.byteLength_;\r\n    }\r\n\r\n    /**\r\n     * maybe return new allocated memory or original memory\r\n     */\r\n    get bytes(): Uint8Array | null {\r\n        const { bufferList } = this;\r\n        let bytes = null;\r\n\r\n        if (bufferList.length > 0) {\r\n            if (bufferList.length === 0) {\r\n                bytes = bufferList[0];\r\n            } else {\r\n                bytes = this.toNewBytes();\r\n            }\r\n        }\r\n\r\n        return bytes;\r\n    }\r\n\r\n    get empty() {\r\n        return this.list_.length === 0;\r\n    }\r\n\r\n    get bufferList() {\r\n        return this.list_;\r\n    }\r\n\r\n    /**\r\n     * Used to cache calculations, reduce the number of CPU calculations.\r\n     * When internal data changes, the value needs to be cleared and recalculated.\r\n     */\r\n    private byteLength_: number | null;\r\n\r\n    private list_: Array<Uint8Array> = [];\r\n\r\n    clear() {\r\n        let len = this.list_.length;\r\n        if (len > 0) {\r\n            this.list_.splice(0, len);\r\n        }\r\n        this.byteLength_ = null;\r\n    }\r\n\r\n    toNewBytes(): Uint8Array | null {\r\n        let bytes = null;\r\n        let tryCount: number = 0;\r\n        let maxTryCount: number = 50;\r\n\r\n        // The following retry strategies are provided for failed memory applications\r\n        // In terms of a better strategy, a failed memory application retry should be\r\n        // an asynchronous process, which does not return until the application succeeds.\r\n        // But the original design of the library is synchronous.\r\n        while (bytes === null) {\r\n            try {\r\n                tryCount++;\r\n                bytes = new Uint8Array(this.byteLength);\r\n            } catch (e) {\r\n                if (tryCount > maxTryCount) {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 0, offset = 0; i < this.list_.length; i++) {\r\n            let payload = this.list_[i];\r\n\r\n            bytes.set(payload, offset);\r\n            offset += payload.byteLength;\r\n        }\r\n\r\n        return bytes;\r\n    }\r\n\r\n    append(newBuffer: Uint8Array | CacheBuffer): void {\r\n        if (newBuffer instanceof CacheBuffer) {\r\n            this.list_ = this.list_.concat(newBuffer.bufferList);\r\n        } else {\r\n            this.list_.push(newBuffer);\r\n        }\r\n\r\n        this.byteLength_ = null;\r\n    }\r\n\r\n    /**\r\n     * This function cuts a complete TypedArray from CacheBuffer and retains the remainder of CacheBuffer.\r\n     * The following points should be noted when using this function:\r\n     * 1. If the cut needs to return the cut-out part, the cut length should be as small as possible to reduce the errors in memory application.\r\n     * 2. If the cutting is only to preserve the remaining parts, the cutting size is within the total number of bytes, without considering memory applications.\r\n     * @param {number} fixedLength\r\n     * @param {boolean} [needCutResult] - If not, just retain the remaining parts after cutting.\r\n     */\r\n    cut(fixedLength: number, needCutResult: boolean = true): Uint8Array {\r\n        let chunk = null;\r\n\r\n        if (fixedLength > 0 && !this.empty) {\r\n            let list = this.list_;\r\n\r\n            let offset = 0;\r\n            let loopIndex = 0;\r\n\r\n            while (list.length > 0) {\r\n                let cur = list.shift();\r\n\r\n                if (loopIndex === 0) {\r\n                    if (cur.byteLength >= fixedLength) {\r\n                        if (needCutResult) {\r\n                            // Here is the key point for optimize memory alloc\r\n                            chunk = cur.subarray(0, fixedLength);\r\n                        }\r\n\r\n                        if (cur.byteLength > fixedLength) {\r\n                            cur = cur.subarray(fixedLength);\r\n                            list.unshift(cur);\r\n                        }\r\n                        break;\r\n                    } else {\r\n                        if (needCutResult) {\r\n                            try {\r\n                                chunk = new Uint8Array(fixedLength);\r\n                            } catch (e) {\r\n                                throw `alloc_memory_error@ cache buffer: ${fixedLength} ${e.message}`;\r\n                            }\r\n\r\n                            chunk.set(cur, 0);\r\n                        }\r\n                        offset += cur.byteLength;\r\n                    }\r\n                } else {\r\n                    let subLen = fixedLength - offset;\r\n\r\n                    if (cur.byteLength >= subLen) {\r\n                        if (needCutResult) {\r\n                            chunk.set(cur.subarray(0, subLen), offset);\r\n                        }\r\n\r\n                        cur = cur.subarray(subLen);\r\n\r\n                        if (cur.byteLength > 0) {\r\n                            list.unshift(cur);\r\n                        }\r\n\r\n                        break;\r\n                    } else {\r\n                        if (needCutResult) {\r\n                            chunk.set(cur, offset);\r\n                        }\r\n                        offset += cur.byteLength;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                loopIndex++;\r\n            }\r\n\r\n            this.byteLength_ = null;\r\n        }\r\n\r\n        return chunk;\r\n    }\r\n}\r\n","/**\r\n * @fileOverview A simple multimap template.\r\n */\r\n\r\ninterface MapData {\r\n    [index: string]: Array<any>;\r\n}\r\n\r\nexport default class MultiMap {\r\n    private map_: MapData;\r\n\r\n    constructor() {\r\n        this.map_ = {};\r\n    }\r\n\r\n    /**\r\n     * Add a key, value pair to the map.\r\n     * @param key\r\n     * @param value\r\n     */\r\n    push(key: string, value: any) {\r\n        if (Object.prototype.hasOwnProperty.call(this.map_, key)) {\r\n            this.map_[key].push(value);\r\n        } else {\r\n            this.map_[key] = [value];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get a list of values by key.\r\n     * @param key\r\n     */\r\n    get(key: string): Array<any> {\r\n        let list = this.map_[key];\r\n        // slice() clones the list so that it and the map can each be modified\r\n        // without affecting the other.\r\n        return list ? list.slice() : null;\r\n    }\r\n\r\n    /**\r\n     * Get a list of all values.\r\n     */\r\n    getAll(): Array<any> {\r\n        let list = [];\r\n        for (let key in this.map_) {\r\n            list.push.apply(list, this.map_[key]);\r\n        }\r\n        return list;\r\n    }\r\n\r\n    /**\r\n     * Remove a specific value, if it exists.\r\n     * @param key\r\n     * @param value\r\n     */\r\n    remove(key: string, value: any): void {\r\n        let list = this.map_[key];\r\n        if (list) {\r\n            for (let i = 0; i < list.length; ++i) {\r\n                if (list[i] == value) {\r\n                    list.splice(i, 1);\r\n                    --i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clear all keys and values from the multimap.\r\n     */\r\n    clear(): void {\r\n        this.map_ = {};\r\n    }\r\n\r\n    /**\r\n     * @param callback\r\n     */\r\n    forEach(callback: Function): void {\r\n        for (let key in this.map_) {\r\n            callback(key, this.map_[key]);\r\n        }\r\n    }\r\n}\r\n","import MultiMap from './multi-map';\r\n\r\n/**\r\n * Creates a new Binding_ and attaches the event listener to the event target.\r\n */\r\nclass Binding_ {\r\n    target: any;\r\n    type: string;\r\n    listener: Function;\r\n\r\n    /**\r\n     * @param target - The event target.\r\n     * @param type - The event type.\r\n     * @param listener - The event listener.\r\n     */\r\n    constructor(target: any, type: string, listener: Function) {\r\n        this.target = target;\r\n        this.type = type;\r\n        this.listener = listener;\r\n\r\n        if (this.target.addEventListener) {\r\n            this.target.addEventListener(type, listener, false);\r\n        } else if (this.target.on) {\r\n            this.target.on(type, listener, false);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Detaches the event listener from the event target.\r\n     * This does nothing if the event listener is already detached.\r\n     */\r\n    off() {\r\n        if (this.target.removeEventListener) {\r\n            this.target.removeEventListener(this.type, this.listener, false);\r\n        } else if (this.target.off) {\r\n            this.target.off(this.type, this.listener, false);\r\n        }\r\n\r\n        this.target = null;\r\n        this.listener = null;\r\n    }\r\n}\r\n\r\n/**\r\n * Creates a new EventManager.\r\n * An EventManager maintains a collection of \"event bindings\" between event targets and event listeners.\r\n */\r\nexport default class EventManager {\r\n    private bindingMap_: MultiMap;\r\n    // static Binding_: Binding;\r\n\r\n    constructor() {\r\n        /**\r\n         * Maps an event type to an array of event bindings.\r\n         */\r\n        this.bindingMap_ = new MultiMap();\r\n    }\r\n\r\n    /**\r\n     * Detaches all event listeners.\r\n     * @override\r\n     */\r\n    destroy(): void {\r\n        this.removeAll();\r\n        this.bindingMap_ = null;\r\n    }\r\n\r\n    /**\r\n     * Attaches an event listener to an event target.\r\n     * @param target - The event target.\r\n     * @param type  - The event type.\r\n     * @param listener  - The event listener.\r\n     */\r\n    on(target: any, type: string, listener: Function): EventManager {\r\n        if (!this.bindingMap_) return;\r\n\r\n        let binding = new Binding_(target, type, listener);\r\n        this.bindingMap_.push(type, binding);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Attaches an event listener to an event target.\r\n     * The listener will be removed when the first instance of the event is fired.\r\n     * @param {EventTarget} target The event target.\r\n     * @param {string} type The event type.\r\n     * @param {function} listener The event listener.\r\n     */\r\n    once(target: any, type: string, listener: Function) {\r\n        // Install a shim listener that will stop listening after the first event.\r\n        this.on(\r\n            target,\r\n            type,\r\n            function (event: any) {\r\n                // Stop listening to this event.\r\n                this.off(target, type);\r\n                // Call the original listener.\r\n                listener(event);\r\n            }.bind(this)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Detaches an event listener from an event target.\r\n     * @param {EventTarget} target The event target.\r\n     * @param {string} type The event type.\r\n     */\r\n    off(target: any, type: string): void {\r\n        if (!this.bindingMap_) return;\r\n\r\n        let list = this.bindingMap_.get(type) || [];\r\n\r\n        for (let i = 0; i < list.length; ++i) {\r\n            let binding = list[i];\r\n\r\n            if (binding.target == target) {\r\n                binding.off();\r\n                this.bindingMap_.remove(type, binding);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Detaches all event listeners from all targets.\r\n     */\r\n    removeAll(): void {\r\n        if (!this.bindingMap_) return;\r\n\r\n        let list = this.bindingMap_.getAll();\r\n\r\n        for (let i = 0; i < list.length; ++i) {\r\n            list[i].off();\r\n        }\r\n\r\n        this.bindingMap_.clear();\r\n    }\r\n}\r\n\r\n// EventManager.Binding_ = Binding;\r\n","/**\r\n * @file: global.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\n/**\r\n * @description provide global scope.\r\n */\r\nlet global: any;\r\n\r\n// see https://stackoverflow.com/a/11237259/589493\r\nif (typeof window === 'undefined') {\r\n    /* eslint-disable-next-line no-undef */\r\n    global = self;\r\n} else {\r\n    global = window;\r\n}\r\n\r\nexport default global;\r\n","/**\r\n * @file: logger.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\n/**\r\n * utils - logger\r\n */\r\n/* global WorkerGlobalScope */\r\nimport global from './global';\r\nimport EventEmitter from './event-emitter';\r\n\r\nlet console = global.console;\r\nconst isWorker =\r\n    typeof WorkerGlobalScope !== 'undefined' &&\r\n    self instanceof WorkerGlobalScope &&\r\n    typeof importScripts != 'undefined';\r\nconst prefix = '>>>';\r\n\r\nclass Logger extends EventEmitter {\r\n    private MSG_NAME: string;\r\n    private _enable: boolean;\r\n\r\n    get enable() {\r\n        return this._enable;\r\n    }\r\n\r\n    set enable(value: boolean) {\r\n        this._enable = value;\r\n\r\n        this.MSG_NAME = '__log__';\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this._enable = false;\r\n    }\r\n\r\n    log(...restArgs: any) {\r\n        if (isWorker) {\r\n            logger.emit(this.MSG_NAME, 'log', [...restArgs].join(''));\r\n        } else {\r\n            if (this._enable) {\r\n                console.log.call(console, prefix, ...restArgs);\r\n            }\r\n        }\r\n    }\r\n\r\n    debug(...restArgs: any) {\r\n        if (isWorker) {\r\n            logger.emit(this.MSG_NAME, 'debug', [...restArgs].join(''));\r\n        } else {\r\n            if (this._enable && console.debug) {\r\n                console.debug.call(console, prefix, ...restArgs);\r\n            }\r\n        }\r\n    }\r\n\r\n    assert(...restArgs: any) {\r\n        if (this._enable && console.assert) {\r\n            let condition = restArgs[0];\r\n            let sliceArgs = Array.prototype.slice.call(restArgs, 1);\r\n            sliceArgs.unshift(prefix);\r\n\r\n            console.assert.call(console, condition, ...sliceArgs);\r\n        }\r\n    }\r\n\r\n    warn(...restArgs: any) {\r\n        if (isWorker) {\r\n            logger.emit(this.MSG_NAME, 'warn', [...restArgs].join(''));\r\n        } else {\r\n            if (this._enable) {\r\n                console.warn.call(console, prefix, ...restArgs);\r\n            }\r\n        }\r\n    }\r\n\r\n    error(...restArgs: any) {\r\n        if (isWorker) {\r\n            logger.emit(this.MSG_NAME, 'error', [...restArgs].join(''));\r\n        } else {\r\n            if (this._enable) {\r\n                console.error.call(console, prefix, ...restArgs);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nlet logger = new Logger();\r\n\r\n/**\r\n * @param {Object} obj - custom logger\r\n */\r\nexport function setLogger(obj) {\r\n    console = obj;\r\n}\r\n\r\nexport function getLogger() {\r\n    return logger;\r\n}\r\n\r\nexport default logger;\r\n","/**\r\n * @file: stream.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\n/**\r\n * simple stream implementation.\r\n */\r\n\r\nimport { PushConf } from '../types/globals';\r\nimport EventEmitter from './event-emitter';\r\n\r\nclass Stream extends EventEmitter {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * connect to the next pipeline stream.\r\n     * @param destination\r\n     */\r\n    pipe(destination: Stream): Stream {\r\n        this.on('reset', function () {\r\n            destination.reset();\r\n        });\r\n\r\n        this.on('data', function (data) {\r\n            destination.push(data);\r\n        });\r\n\r\n        this.on('done', function (flushSource) {\r\n            destination.flush(flushSource);\r\n        });\r\n\r\n        return destination;\r\n    }\r\n\r\n    /**\r\n     * detaches the next pipeline stream previously attached.\r\n     */\r\n    unpipe(): Stream {\r\n        this.removeAllListeners('reset');\r\n        this.removeAllListeners('data');\r\n        this.removeAllListeners('done');\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * push data to current pipeline.\r\n     * @param data\r\n     */\r\n    push(data: any, conf?: PushConf): void {\r\n        if (conf) {\r\n        }\r\n        this.emit('data', data);\r\n    }\r\n\r\n    /**\r\n     * flush current pipeline.\r\n     * @param flushSource\r\n     */\r\n    flush(flushSource: Stream): void {\r\n        this.emit('done', flushSource);\r\n    }\r\n\r\n    reset(): void {\r\n        this.emit('reset');\r\n    }\r\n}\r\n\r\nexport default Stream;\r\n","/**\r\n * @file: demuxer.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\nimport { Events } from './enum/events';\r\nimport { Context, GlobalOptions, IDemux, PushConf } from './types/globals';\r\nimport CacheBuffer from './util/cache-buffer';\r\nimport EventManager from './util/event-manager';\r\nimport { isArrayBuffer, isUint8Array } from './util/is';\r\nimport logger from './util/logger';\r\nimport Stream from './util/stream';\r\n\r\nexport default abstract class DemuxFacade extends Stream implements IDemux {\r\n    abstract readonly endStream?: Stream;\r\n    protected eventManager_: EventManager;\r\n    protected ctx_: Context;\r\n    protected options_: GlobalOptions;\r\n    protected cache_buffer_: CacheBuffer;\r\n\r\n    protected listenEndStream_(): void {\r\n        this.eventManager_ = new EventManager();\r\n\r\n        this.eventManager_\r\n            .on(this.endStream, 'data', (data) => {\r\n                this.emit(Events.DEMUX_DATA, data);\r\n            })\r\n            .on(this.endStream, 'done', (data) => {\r\n                this.emit(Events.DONE, data);\r\n            })\r\n            .on(this.ctx_, 'error', (data) => {\r\n                this.emit(Events.ERROR, data);\r\n            });\r\n    }\r\n\r\n    constructor(options: GlobalOptions = {}) {\r\n        super();\r\n\r\n        if (options.debug) {\r\n            logger.enable = true;\r\n        }\r\n\r\n        this.ctx_ = new Context();\r\n        this.options_ = options;\r\n        this.cache_buffer_ = new CacheBuffer();\r\n    }\r\n\r\n    /**\r\n     * Pipe the arrayBuffer to the demuxer.\r\n     * @param buf\r\n     * @param conf\r\n     */\r\n    abstract push(buf: ArrayBuffer | Uint8Array, conf: PushConf): void;\r\n\r\n    /**\r\n     * transfer data to Uint8Array\r\n     * @param buf\r\n     */\r\n    protected constraintPushData_(buf: ArrayBuffer | Uint8Array): Uint8Array | null {\r\n        let newBuf = null;\r\n        if (!isArrayBuffer(buf) && !isUint8Array(buf)) {\r\n            logger.error(`Data pushed is not an ArrayBuffer or Uint8Array: ${buf}`);\r\n            return newBuf;\r\n        }\r\n\r\n        if (isArrayBuffer(buf)) {\r\n            newBuf = new Uint8Array(buf);\r\n        } else {\r\n            newBuf = buf;\r\n        }\r\n\r\n        return newBuf;\r\n    }\r\n\r\n    reset(): void {}\r\n\r\n    destroy(): void {\r\n        this.unpipe();\r\n        this.endStream.unpipe();\r\n\r\n        this.eventManager_.removeAll();\r\n    }\r\n}\r\n","/**\r\n * @file: mp4-inspector.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\n/* eslint-disable */\r\nlet /**\r\n     * Returns the string representation of an ASCII encoded four byte buffer.\r\n     * @param buffer - a four-byte buffer to translate\r\n     * @return the corresponding string\r\n     */\r\n    parseType = function (buffer: Uint8Array): string {\r\n        let result = '';\r\n        result += String.fromCharCode(buffer[0]);\r\n        result += String.fromCharCode(buffer[1]);\r\n        result += String.fromCharCode(buffer[2]);\r\n        result += String.fromCharCode(buffer[3]);\r\n        return result;\r\n    },\r\n    parseMp4Date = function (seconds: number): Date {\r\n        return new Date(seconds * 1000 - 2082844800000);\r\n    },\r\n    parseSampleFlags = function (flags: Uint8Array) {\r\n        return {\r\n            isLeading: (flags[0] & 0x0c) >>> 2,\r\n            dependsOn: flags[0] & 0x03,\r\n            isDependedOn: (flags[1] & 0xc0) >>> 6,\r\n            hasRedundancy: (flags[1] & 0x30) >>> 4,\r\n            paddingValue: (flags[1] & 0x0e) >>> 1,\r\n            isNonSyncSample: flags[1] & 0x01,\r\n            degradationPriority: (flags[2] << 8) | flags[3]\r\n        };\r\n    },\r\n    nalParse = function (avcStream) {\r\n        let avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\r\n            result = [],\r\n            i,\r\n            length;\r\n        for (i = 0; i < avcStream.length; i += length) {\r\n            length = avcView.getUint32(i);\r\n            i += 4;\r\n            switch (avcStream[i] & 0x1f) {\r\n                case 0x01:\r\n                    result.push('NDR');\r\n                    break;\r\n                case 0x05:\r\n                    result.push('IDR');\r\n                    break;\r\n                case 0x06:\r\n                    result.push('SEI');\r\n                    break;\r\n                case 0x07:\r\n                    result.push('SPS');\r\n                    break;\r\n                case 0x08:\r\n                    result.push('PPS');\r\n                    break;\r\n                case 0x09:\r\n                    result.push('AUD');\r\n                    break;\r\n                default:\r\n                    result.push(avcStream[i] & 0x1f);\r\n                    break;\r\n            }\r\n        }\r\n        return result;\r\n    },\r\n    // registry of handlers for individual mp4 box types\r\n    parse = {\r\n        // codingname, not a first-class box type. stsd entries share the\r\n        // same format as real boxes so the parsing infrastructure can be\r\n        // shared\r\n        avc1: function (data) {\r\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength);\r\n            return {\r\n                dataReferenceIndex: view.getUint16(6),\r\n                width: view.getUint16(24),\r\n                height: view.getUint16(26),\r\n                horizresolution: view.getUint16(28) + view.getUint16(30) / 16,\r\n                vertresolution: view.getUint16(32) + view.getUint16(34) / 16,\r\n                frameCount: view.getUint16(40),\r\n                depth: view.getUint16(74),\r\n                config: mp4toJSON(data.subarray(78, data.byteLength))\r\n            };\r\n        },\r\n        avcC: function (data) {\r\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength),\r\n                result = {\r\n                    configurationVersion: data[0],\r\n                    avcProfileIndication: data[1],\r\n                    profileCompatibility: data[2],\r\n                    avcLevelIndication: data[3],\r\n                    lengthSizeMinusOne: data[4] & 0x03,\r\n                    sps: [],\r\n                    pps: []\r\n                },\r\n                numOfSequenceParameterSets = data[5] & 0x1f,\r\n                numOfPictureParameterSets,\r\n                nalSize,\r\n                offset,\r\n                i;\r\n\r\n            // iterate past any SPSs\r\n            offset = 6;\r\n            for (i = 0; i < numOfSequenceParameterSets; i++) {\r\n                nalSize = view.getUint16(offset);\r\n                offset += 2;\r\n                result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\r\n                offset += nalSize;\r\n            }\r\n            // iterate past any PPSs\r\n            numOfPictureParameterSets = data[offset];\r\n            offset++;\r\n            for (i = 0; i < numOfPictureParameterSets; i++) {\r\n                nalSize = view.getUint16(offset);\r\n                offset += 2;\r\n                result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\r\n                offset += nalSize;\r\n            }\r\n            return result;\r\n        },\r\n        btrt: function (data) {\r\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength);\r\n            return {\r\n                bufferSizeDB: view.getUint32(0),\r\n                maxBitrate: view.getUint32(4),\r\n                avgBitrate: view.getUint32(8)\r\n            };\r\n        },\r\n        esds: function (data) {\r\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength);\r\n            return {\r\n                version: data[0],\r\n                flags: new Uint8Array(data.subarray(1, 4)),\r\n                esId: (data[6] << 8) | data[7],\r\n                streamPriority: data[8] & 0x1f,\r\n                decoderConfig: {\r\n                    objectProfileIndication: data[11],\r\n                    streamType: (data[12] >>> 2) & 0x3f,\r\n                    bufferSize: (data[13] << 16) | (data[14] << 8) | data[15],\r\n                    maxBitrate: (data[16] << 24) | (data[17] << 16) | (data[18] << 8) | data[19],\r\n                    avgBitrate: (data[20] << 24) | (data[21] << 16) | (data[22] << 8) | data[23],\r\n                    decoderConfigDescriptor: {\r\n                        tag: data[24],\r\n                        length: data[25],\r\n                        // audioObjectType: (data[26] >>> 3) & 0x1f,\r\n                        // samplingFrequencyIndex: ((data[26] & 0x07) << 1) |\r\n                        //   ((data[27] >>> 7) & 0x01),\r\n                        // channelConfiguration: (data[27] >>> 3) & 0x0f,\r\n                        // FIXME\r\n                        audioObjectType: (data[35] >>> 3) & 0x1f,\r\n                        samplingFrequencyIndex: ((data[35] & 0x07) << (8 + (data[36] & 0x80))) >> 7,\r\n                        channelConfiguration: (data[36] & 0x78) >> 3\r\n                    }\r\n                }\r\n            };\r\n        },\r\n        ftyp: function (data) {\r\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength),\r\n                result = {\r\n                    majorBrand: parseType(data.subarray(0, 4)),\r\n                    minorVersion: view.getUint32(4),\r\n                    compatibleBrands: []\r\n                },\r\n                i = 8;\r\n            while (i < data.byteLength) {\r\n                result.compatibleBrands.push(parseType(data.subarray(i, i + 4)));\r\n                i += 4;\r\n            }\r\n            return result;\r\n        },\r\n        dinf: function (data) {\r\n            return {\r\n                boxes: mp4toJSON(data)\r\n            };\r\n        },\r\n        dref: function (data) {\r\n            return {\r\n                version: data[0],\r\n                flags: new Uint8Array(data.subarray(1, 4)),\r\n                dataReferences: mp4toJSON(data.subarray(8))\r\n            };\r\n        },\r\n        hdlr: function (data) {\r\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength),\r\n                result = {\r\n                    version: view.getUint8(0),\r\n                    flags: new Uint8Array(data.subarray(1, 4)),\r\n                    handlerType: parseType(data.subarray(8, 12)),\r\n                    name: ''\r\n                },\r\n                i = 8;\r\n\r\n            // parse out the name field\r\n            for (i = 24; i < data.byteLength; i++) {\r\n                if (data[i] === 0x00) {\r\n                    // the name field is null-terminated\r\n                    i++;\r\n                    break;\r\n                }\r\n                result.name += String.fromCharCode(data[i]);\r\n            }\r\n            // decode UTF-8 to javascript's internal representation\r\n            // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\r\n            result.name = decodeURIComponent(decodeURIComponent(result.name));\r\n\r\n            return result;\r\n        },\r\n        // mdat: function(data) {\r\n        // \treturn {\r\n        // \t\tbyteLength: data.byteLength,\r\n        // \t\tnals: nalParse(data),\r\n        // \t\trealData: data\r\n        // \t};\r\n        // },\r\n        mdhd: function (data) {\r\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength),\r\n                i = 4,\r\n                language,\r\n                result = {\r\n                    version: view.getUint8(0),\r\n                    flags: new Uint8Array(data.subarray(1, 4)),\r\n                    language: '',\r\n                    creationTime: new Date(),\r\n                    modificationTime: new Date(),\r\n                    timescale: 0,\r\n                    duration: 0\r\n                };\r\n            if (result.version === 1) {\r\n                i += 4;\r\n                result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\r\n                i += 8;\r\n                result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\r\n                i += 4;\r\n                result.timescale = view.getUint32(i);\r\n                i += 8;\r\n                result.duration = view.getUint32(i); // truncating top 4 bytes\r\n            } else {\r\n                result.creationTime = parseMp4Date(view.getUint32(i));\r\n                i += 4;\r\n                result.modificationTime = parseMp4Date(view.getUint32(i));\r\n                i += 4;\r\n                result.timescale = view.getUint32(i);\r\n                i += 4;\r\n                result.duration = view.getUint32(i);\r\n            }\r\n            i += 4;\r\n            // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\r\n            // each field is the packed difference between its ASCII value and 0x60\r\n            language = view.getUint16(i);\r\n            result.language += String.fromCharCode((language >> 10) + 0x60);\r\n            result.language += String.fromCharCode(((language & 0x03c0) >> 5) + 0x60);\r\n            result.language += String.fromCharCode((language & 0x1f) + 0x60);\r\n\r\n            return result;\r\n        },\r\n        mdia: function (data) {\r\n            return {\r\n                boxes: mp4toJSON(data)\r\n            };\r\n        },\r\n        mfhd: function (data) {\r\n            return {\r\n                version: data[0],\r\n                flags: new Uint8Array(data.subarray(1, 4)),\r\n                sequenceNumber: (data[4] << 24) | (data[5] << 16) | (data[6] << 8) | data[7]\r\n            };\r\n        },\r\n        minf: function (data) {\r\n            return {\r\n                boxes: mp4toJSON(data)\r\n            };\r\n        },\r\n        // codingname, not a first-class box type. stsd entries share the\r\n        // same format as real boxes so the parsing infrastructure can be\r\n        // shared\r\n        mp4a: function (data) {\r\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength),\r\n                result = {\r\n                    // 6 bytes reserved\r\n                    dataReferenceIndex: view.getUint16(6),\r\n                    // 4 + 4 bytes reserved\r\n                    channelcount: view.getUint16(16),\r\n                    samplesize: view.getUint16(18),\r\n                    // 2 bytes pre_defined\r\n                    // 2 bytes reserved\r\n                    samplerate: view.getUint16(24) + view.getUint16(26) / 65536,\r\n                    streamDescriptor: undefined\r\n                };\r\n\r\n            // if there are more bytes to process, assume this is an ISO/IEC\r\n            // 14496-14 MP4AudioSampleEntry and parse the ESDBox\r\n            if (data.byteLength > 28) {\r\n                result.streamDescriptor = mp4toJSON(data.subarray(28))[0];\r\n            }\r\n            return result;\r\n        },\r\n        moof: function (data) {\r\n            return {\r\n                boxes: mp4toJSON(data)\r\n            };\r\n        },\r\n        moov: function (data) {\r\n            return {\r\n                boxes: mp4toJSON(data)\r\n            };\r\n        },\r\n        mvex: function (data) {\r\n            return {\r\n                boxes: mp4toJSON(data)\r\n            };\r\n        },\r\n        mvhd: function (data) {\r\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength),\r\n                i = 4,\r\n                result = {\r\n                    version: view.getUint8(0),\r\n                    flags: new Uint8Array(data.subarray(1, 4)),\r\n                    creationTime: new Date(),\r\n                    modificationTime: new Date(),\r\n                    timescale: 0,\r\n                    duration: 0,\r\n                    rate: 0,\r\n                    volume: 0,\r\n                    matrix: new Uint32Array(0),\r\n                    nextTrackId: 0\r\n                };\r\n\r\n            if (result.version === 1) {\r\n                i += 4;\r\n                result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\r\n                i += 8;\r\n                result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\r\n                i += 4;\r\n                result.timescale = view.getUint32(i);\r\n                i += 8;\r\n                result.duration = view.getUint32(i); // truncating top 4 bytes\r\n            } else {\r\n                result.creationTime = parseMp4Date(view.getUint32(i));\r\n                i += 4;\r\n                result.modificationTime = parseMp4Date(view.getUint32(i));\r\n                i += 4;\r\n                result.timescale = view.getUint32(i);\r\n                i += 4;\r\n                result.duration = view.getUint32(i);\r\n            }\r\n            i += 4;\r\n\r\n            // convert fixed-point, base 16 back to a number\r\n            result.rate = view.getUint16(i) + view.getUint16(i + 2) / 16;\r\n            i += 4;\r\n            result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\r\n            i += 2;\r\n            i += 2;\r\n            i += 2 * 4;\r\n            result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\r\n            i += 9 * 4;\r\n            i += 6 * 4;\r\n            result.nextTrackId = view.getUint32(i);\r\n            return result;\r\n        },\r\n        pdin: function (data) {\r\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength);\r\n            return {\r\n                version: view.getUint8(0),\r\n                flags: new Uint8Array(data.subarray(1, 4)),\r\n                rate: view.getUint32(4),\r\n                initialDelay: view.getUint32(8)\r\n            };\r\n        },\r\n        sdtp: function (data) {\r\n            let result = {\r\n                    version: data[0],\r\n                    flags: new Uint8Array(data.subarray(1, 4)),\r\n                    samples: []\r\n                },\r\n                i;\r\n\r\n            for (i = 4; i < data.byteLength; i++) {\r\n                result.samples.push({\r\n                    dependsOn: (data[i] & 0x30) >> 4,\r\n                    isDependedOn: (data[i] & 0x0c) >> 2,\r\n                    hasRedundancy: data[i] & 0x03\r\n                });\r\n            }\r\n            return result;\r\n        },\r\n        sidx: function (data) {\r\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength),\r\n                result = {\r\n                    version: data[0],\r\n                    flags: new Uint8Array(data.subarray(1, 4)),\r\n                    references: [],\r\n                    referenceId: view.getUint32(4),\r\n                    timescale: view.getUint32(8),\r\n                    earliestPresentationTime: view.getUint32(12),\r\n                    firstOffset: view.getUint32(16)\r\n                },\r\n                referenceCount = view.getUint16(22),\r\n                i;\r\n\r\n            for (i = 24; referenceCount; i += 12, referenceCount--) {\r\n                result.references.push({\r\n                    referenceType: (data[i] & 0x80) >>> 7,\r\n                    referencedSize: view.getUint32(i) & 0x7fffffff,\r\n                    subsegmentDuration: view.getUint32(i + 4),\r\n                    startsWithSap: !!(data[i + 8] & 0x80),\r\n                    sapType: (data[i + 8] & 0x70) >>> 4,\r\n                    sapDeltaTime: view.getUint32(i + 8) & 0x0fffffff\r\n                });\r\n            }\r\n\r\n            return result;\r\n        },\r\n        stbl: function (data) {\r\n            return {\r\n                boxes: mp4toJSON(data)\r\n            };\r\n        },\r\n        stco: function (data) {\r\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength);\r\n            let entryCount = view.getUint32(4);\r\n            let result = {\r\n                version: data[0],\r\n                flags: new Uint8Array(data.subarray(1, 4)),\r\n                entryCount: entryCount,\r\n                chunkOffsets: []\r\n            };\r\n            for (let i = 8; entryCount; i += 4, entryCount--) {\r\n                result.chunkOffsets.push(view.getUint32(i));\r\n            }\r\n            return result;\r\n        },\r\n        stsc: function (data) {\r\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength),\r\n                entryCount = view.getUint32(4),\r\n                result = {\r\n                    version: data[0],\r\n                    flags: new Uint8Array(data.subarray(1, 4)),\r\n                    sampleToChunks: []\r\n                },\r\n                i;\r\n            for (i = 8; entryCount; i += 12, entryCount--) {\r\n                result.sampleToChunks.push({\r\n                    firstChunk: view.getUint32(i),\r\n                    samplesPerChunk: view.getUint32(i + 4),\r\n                    sampleDescriptionIndex: view.getUint32(i + 8)\r\n                });\r\n            }\r\n            return result;\r\n        },\r\n        stsd: function (data) {\r\n            return {\r\n                version: data[0],\r\n                flags: new Uint8Array(data.subarray(1, 4)),\r\n                boxes: mp4toJSON(data.subarray(8))\r\n            };\r\n        },\r\n        stsz: function (data) {\r\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength),\r\n                result = {\r\n                    version: data[0],\r\n                    flags: new Uint8Array(data.subarray(1, 4)),\r\n                    sampleSize: view.getUint32(4),\r\n                    entries: []\r\n                },\r\n                i;\r\n            for (i = 12; i < data.byteLength; i += 4) {\r\n                result.entries.push(view.getUint32(i));\r\n            }\r\n            return result;\r\n        },\r\n        stts: function (data) {\r\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength),\r\n                result = {\r\n                    version: data[0],\r\n                    flags: new Uint8Array(data.subarray(1, 4)),\r\n                    timeToSamples: []\r\n                },\r\n                entryCount = view.getUint32(4),\r\n                i;\r\n\r\n            for (i = 8; entryCount; i += 8, entryCount--) {\r\n                result.timeToSamples.push({\r\n                    sampleCount: view.getUint32(i),\r\n                    sampleDelta: view.getUint32(i + 4)\r\n                });\r\n            }\r\n            return result;\r\n        },\r\n        styp: function (data) {\r\n            return parse.ftyp(data);\r\n        },\r\n        tfdt: function (data) {\r\n            return {\r\n                version: data[0],\r\n                flags: new Uint8Array(data.subarray(1, 4)),\r\n                baseMediaDecodeTime: (data[4] << 24) | (data[5] << 16) | (data[6] << 8) | data[7]\r\n            };\r\n        },\r\n        tfhd: function (data) {\r\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength),\r\n                result: {\r\n                    version: number;\r\n                    flags: Uint8Array;\r\n                    trackId: number;\r\n                    baseDataOffset?: number;\r\n                    sampleDescriptionIndex?: number;\r\n                    defaultSampleDuration?: number;\r\n                    defaultSampleSize?: number;\r\n                    defaultSampleFlags?: number;\r\n                } = {\r\n                    version: data[0],\r\n                    flags: new Uint8Array(data.subarray(1, 4)),\r\n                    trackId: view.getUint32(4)\r\n                },\r\n                baseDataOffsetPresent = result.flags[2] & 0x01,\r\n                sampleDescriptionIndexPresent = result.flags[2] & 0x02,\r\n                defaultSampleDurationPresent = result.flags[2] & 0x08,\r\n                defaultSampleSizePresent = result.flags[2] & 0x10,\r\n                defaultSampleFlagsPresent = result.flags[2] & 0x20,\r\n                i;\r\n\r\n            i = 8;\r\n            if (baseDataOffsetPresent) {\r\n                i += 4; // truncate top 4 bytes\r\n                result.baseDataOffset = view.getUint32(12);\r\n                i += 4;\r\n            }\r\n            if (sampleDescriptionIndexPresent) {\r\n                result.sampleDescriptionIndex = view.getUint32(i);\r\n                i += 4;\r\n            }\r\n            if (defaultSampleDurationPresent) {\r\n                result.defaultSampleDuration = view.getUint32(i);\r\n                i += 4;\r\n            }\r\n            if (defaultSampleSizePresent) {\r\n                result.defaultSampleSize = view.getUint32(i);\r\n                i += 4;\r\n            }\r\n            if (defaultSampleFlagsPresent) {\r\n                result.defaultSampleFlags = view.getUint32(i);\r\n            }\r\n            return result;\r\n        },\r\n        tkhd: function (data) {\r\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength),\r\n                i = 4,\r\n                result = {\r\n                    version: view.getUint8(0),\r\n                    flags: new Uint8Array(data.subarray(1, 4)),\r\n                    creationTime: new Date(),\r\n                    modificationTime: new Date(),\r\n                    trackId: 0,\r\n                    duration: 0,\r\n                    layer: 0,\r\n                    alternateGroup: 0,\r\n                    volume: 0,\r\n                    width: 0,\r\n                    height: 0,\r\n                    matrix: new Uint32Array(0)\r\n                };\r\n            if (result.version === 1) {\r\n                i += 4;\r\n                result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\r\n                i += 8;\r\n                result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\r\n                i += 4;\r\n                result.trackId = view.getUint32(i);\r\n                i += 4;\r\n                i += 8;\r\n                result.duration = view.getUint32(i); // truncating top 4 bytes\r\n            } else {\r\n                result.creationTime = parseMp4Date(view.getUint32(i));\r\n                i += 4;\r\n                result.modificationTime = parseMp4Date(view.getUint32(i));\r\n                i += 4;\r\n                result.trackId = view.getUint32(i);\r\n                i += 4;\r\n                i += 4;\r\n                result.duration = view.getUint32(i);\r\n            }\r\n            i += 4;\r\n            i += 2 * 4;\r\n            result.layer = view.getUint16(i);\r\n            i += 2;\r\n            result.alternateGroup = view.getUint16(i);\r\n            i += 2;\r\n            // convert fixed-point, base 16 back to a number\r\n            result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\r\n            i += 2;\r\n            i += 2;\r\n            result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\r\n            i += 9 * 4;\r\n            result.width = view.getUint16(i) + view.getUint16(i + 2) / 16;\r\n            i += 4;\r\n            result.height = view.getUint16(i) + view.getUint16(i + 2) / 16;\r\n            return result;\r\n        },\r\n        traf: function (data) {\r\n            return {\r\n                boxes: mp4toJSON(data)\r\n            };\r\n        },\r\n        trak: function (data) {\r\n            return {\r\n                boxes: mp4toJSON(data)\r\n            };\r\n        },\r\n        trex: function (data) {\r\n            let view = new DataView(data.buffer, data.byteOffset, data.byteLength);\r\n            return {\r\n                version: data[0],\r\n                flags: new Uint8Array(data.subarray(1, 4)),\r\n                trackId: view.getUint32(4),\r\n                defaultSampleDescriptionIndex: view.getUint32(8),\r\n                defaultSampleDuration: view.getUint32(12),\r\n                defaultSampleSize: view.getUint32(16),\r\n                sampleDependsOn: data[20] & 0x03,\r\n                sampleIsDependedOn: (data[21] & 0xc0) >> 6,\r\n                sampleHasRedundancy: (data[21] & 0x30) >> 4,\r\n                samplePaddingValue: (data[21] & 0x0e) >> 1,\r\n                sampleIsDifferenceSample: !!(data[21] & 0x01),\r\n                sampleDegradationPriority: view.getUint16(22)\r\n            };\r\n        },\r\n        trun: function (data) {\r\n            let result: {\r\n                    version: number;\r\n                    flags: Uint8Array;\r\n                    samples: Array<any>;\r\n                    dataOffset?: number;\r\n                } = {\r\n                    version: data[0],\r\n                    flags: new Uint8Array(data.subarray(1, 4)),\r\n                    samples: []\r\n                },\r\n                view = new DataView(data.buffer, data.byteOffset, data.byteLength),\r\n                dataOffsetPresent = result.flags[2] & 0x01,\r\n                firstSampleFlagsPresent = result.flags[2] & 0x04,\r\n                sampleDurationPresent = result.flags[1] & 0x01,\r\n                sampleSizePresent = result.flags[1] & 0x02,\r\n                sampleFlagsPresent = result.flags[1] & 0x04,\r\n                sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\r\n                sampleCount = view.getUint32(4),\r\n                offset = 8,\r\n                sample;\r\n\r\n            if (dataOffsetPresent) {\r\n                result.dataOffset = view.getUint32(offset);\r\n                offset += 4;\r\n            }\r\n            if (firstSampleFlagsPresent && sampleCount) {\r\n                sample = {\r\n                    flags: parseSampleFlags(data.subarray(offset, offset + 4))\r\n                };\r\n                offset += 4;\r\n                if (sampleDurationPresent) {\r\n                    sample.duration = view.getUint32(offset);\r\n                    offset += 4;\r\n                }\r\n                if (sampleSizePresent) {\r\n                    sample.size = view.getUint32(offset);\r\n                    offset += 4;\r\n                }\r\n                if (sampleCompositionTimeOffsetPresent) {\r\n                    sample.compositionTimeOffset = view.getUint32(offset);\r\n                    offset += 4;\r\n                }\r\n                result.samples.push(sample);\r\n                sampleCount--;\r\n            }\r\n            while (sampleCount--) {\r\n                sample = {};\r\n                if (sampleDurationPresent) {\r\n                    sample.duration = view.getUint32(offset);\r\n                    offset += 4;\r\n                }\r\n                if (sampleSizePresent) {\r\n                    sample.size = view.getUint32(offset);\r\n                    offset += 4;\r\n                }\r\n                if (sampleFlagsPresent) {\r\n                    sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\r\n                    offset += 4;\r\n                }\r\n                if (sampleCompositionTimeOffsetPresent) {\r\n                    sample.compositionTimeOffset = view.getUint32(offset);\r\n                    offset += 4;\r\n                }\r\n                result.samples.push(sample);\r\n            }\r\n            return result;\r\n        },\r\n        'url ': function (data) {\r\n            return {\r\n                version: data[0],\r\n                flags: new Uint8Array(data.subarray(1, 4))\r\n            };\r\n        },\r\n        vmhd: function (data) {\r\n            //let view = new DataView(data.buffer, data.byteOffset, data.byteLength);\r\n            return {\r\n                version: data[0],\r\n                flags: new Uint8Array(data.subarray(1, 4))\r\n                //graphicsmode: view.getUint16(4),\r\n                //opcolor: new Uint16Array([view.getUint16(6),\r\n                //                          view.getUint16(8),\r\n                //                          view.getUint16(10)])\r\n            };\r\n        }\r\n    };\r\n\r\n/**\r\n * Return a javascript array of box objects parsed from an ISO base media file.\r\n * @param data - the binary data of the media to be inspected\r\n * @return a javascript array of potentially nested box objects\r\n */\r\nlet mp4toJSON = function (data: Uint8Array): Array<any> {\r\n    let i = 0,\r\n        result = [],\r\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\r\n        size,\r\n        type,\r\n        end,\r\n        box;\r\n\r\n    while (i < data.byteLength) {\r\n        // parse box data\r\n        (size = view.getUint32(i)), (type = parseType(data.subarray(i + 4, i + 8)));\r\n        end = size > 1 ? i + size : data.byteLength;\r\n\r\n        // parse type-specific data\r\n        box = (\r\n            parse[type] ||\r\n            function (data) {\r\n                return {\r\n                    data: data\r\n                };\r\n            }\r\n        )(data.subarray(i + 8, end));\r\n        box.size = size;\r\n        box.type = type;\r\n\r\n        // store this box and move to the next\r\n        result.push(box);\r\n        i = end;\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const MP4Inspect = {\r\n    mp4toJSON: mp4toJSON\r\n};\r\n","/**\r\n * @file: demux.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\nimport DemuxFacade from '../demux-facade';\r\nimport { GlobalOptions } from '../types/globals';\r\nimport logger from '../util/logger';\r\nimport { MP4Inspect } from './mp4-inspector';\r\n\r\n/**\r\n * mp4.\r\n */\r\nexport class MP4Demux extends DemuxFacade {\r\n    constructor(options: GlobalOptions = {}) {\r\n        super(options);\r\n\r\n        super.listenEndStream_();\r\n    }\r\n\r\n    /**\r\n     * This is end pipeline stream\r\n     */\r\n    get endStream() {\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * The MP4 data pushed into stream should be complete data.\r\n     * @param buffer\r\n     */\r\n    push(buffer: ArrayBuffer | Uint8Array) {\r\n        let newBuf: Uint8Array = super.constraintPushData_(buffer);\r\n\r\n        logger.log(`mp4 demux received ${newBuf.byteLength} bytes`);\r\n\r\n        let result = MP4Inspect.mp4toJSON(newBuf);\r\n\r\n        this.emit('data', result);\r\n    }\r\n}\r\n"],"names":["Events","console","global"],"mappings":"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"}