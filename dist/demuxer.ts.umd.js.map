{"version":3,"file":"demuxer.ts.umd.js","sources":["../src/enum/events.ts","../src/util/event-emitter.ts","../src/types/globals.ts","../src/util/is.ts","../src/util/cache-buffer.ts","../src/util/multi-map.ts","../src/util/event-manager.ts","../src/util/global.ts","../src/util/logger.ts","../src/util/stream.ts","../src/demux-facade.ts","../src/mux-error-code.ts","../src/m2t/structs/patSection.ts","../src/m2t/structs/pmtSection.ts","../src/enum/m2t-pid.ts","../src/m2t/psi.ts","../src/m2t/streams/complex.js","../src/codec/aac/aac-config.ts","../src/codec/aac/aac.ts","../src/codec/adts.ts","../src/m2t/streams/adts.ts","../src/util/dv.ts","../src/codec/avc/ep3b.ts","../src/util/exp-golumb.ts","../src/codec/avc/sps.ts","../src/codec/avc/pps.ts","../src/codec/avc/sei.ts","../src/codec/avc/nalu.ts","../src/codec/avc.ts","../src/codec/avc/avc-config.ts","../src/m2t/streams/avc.ts","../src/m2t/streams/elementary.ts","../src/m2t/structs/pes.ts","../src/m2t/streams/pes.ts","../src/m2t/structs/packet.ts","../src/m2t/demux.ts"],"sourcesContent":["/**\r\n * @file= events.js, created at Monday, 23rd December 2019 3=47=23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\nexport enum Events {\r\n    ERROR = 'ERROR',\r\n    INFO = 'INFO',\r\n    DATA = 'DATA',\r\n    DEMUX_DATA = 'DEMUX_DATA',\r\n    DONE = 'DONE'\r\n}\r\n","/**\r\n * @copyright https://github.com/nodejs/node/blob/master/lib/events.js\r\n */\r\n/* eslint-disable */\r\n// Copyright Joyent, Inc. and other Node contributors.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a\r\n// copy of this software and associated documentation files (the\r\n// \"Software\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to permit\r\n// persons to whom the Software is furnished to do so, subject to the\r\n// following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included\r\n// in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\nvar objectCreate = Object.create || objectCreatePolyfill;\r\nvar objectKeys = Object.keys || objectKeysPolyfill;\r\nvar bind = Function.prototype.bind || functionBindPolyfill;\r\n\r\n// By default Dispatchers will print a warning if more than 10 listeners are\r\n// added to it. This is a useful default which helps finding memory leaks.\r\nlet defaultMaxListeners = 10;\r\n\r\nexport default class EventEmitter {\r\n    static listenerCount(emitter, type) {\r\n        if (typeof emitter.listenerCount === 'function') {\r\n            return emitter.listenerCount(type);\r\n        } else {\r\n            return listenerCount.call(emitter, type);\r\n        }\r\n    }\r\n\r\n    static defaultMaxListeners: number;\r\n\r\n    _maxListeners?: number;\r\n    _eventsCount: number;\r\n    _events: any;\r\n\r\n    constructor() {\r\n        if (!this._events || !Object.prototype.hasOwnProperty.call(this, '_events')) {\r\n            this._events = objectCreate(null);\r\n            this._eventsCount = 0;\r\n        }\r\n\r\n        this._maxListeners = this._maxListeners || undefined;\r\n    }\r\n\r\n    // // Obviously not all Emitters should be limited to 10. This function allows\r\n    // // that to be increased. Set to zero for unlimited.\r\n    // setMaxListeners(n) {\r\n    //     if (typeof n !== 'number' || n < 0 || isNaN(n))\r\n    //         throw new TypeError('\"n\" argument must be a positive number');\r\n    //     this._maxListeners = n;\r\n    //     return this;\r\n    // }\r\n    //\r\n    // getMaxListeners() {\r\n    //     return $getMaxListeners(this);\r\n    // }\r\n\r\n    emit(type: string, ...rest) {\r\n        var er, handler, len, args, i, events;\r\n        var doError = type === 'error';\r\n\r\n        events = this._events;\r\n        if (events) doError = doError && events.error == null;\r\n        else if (!doError) return false;\r\n\r\n        // If there is no 'error' event listener then throw.\r\n        if (doError) {\r\n            if (arguments.length > 1) er = arguments[1];\r\n            if (er instanceof Error) {\r\n                throw er; // Unhandled 'error' event\r\n            } else {\r\n                // At least give some kind of context to the user\r\n                var err = new Error('Unhandled \"error\" event. (' + er + ')');\r\n                err['context'] = er;\r\n                throw err;\r\n            }\r\n        }\r\n\r\n        handler = events[type];\r\n\r\n        if (!handler) return false;\r\n\r\n        var isFn = typeof handler === 'function';\r\n        len = arguments.length;\r\n        switch (len) {\r\n            // fast cases\r\n            case 1:\r\n                emitNone(handler, isFn, this);\r\n                break;\r\n            case 2:\r\n                emitOne(handler, isFn, this, arguments[1]);\r\n                break;\r\n            case 3:\r\n                emitTwo(handler, isFn, this, arguments[1], arguments[2]);\r\n                break;\r\n            case 4:\r\n                emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\r\n                break;\r\n            // slower\r\n            default:\r\n                args = new Array(len - 1);\r\n                for (i = 1; i < len; i++) args[i - 1] = arguments[i];\r\n                emitMany(handler, isFn, this, args);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    on(type: string, listener: Function) {\r\n        return _addListener(this, type, listener);\r\n    }\r\n\r\n    once(type, listener) {\r\n        if (typeof listener !== 'function') throw new TypeError('\"listener\" argument must be a function');\r\n        this.on(type, _onceWrap(this, type, listener));\r\n        return this;\r\n    }\r\n\r\n    off(type, listener) {\r\n        return _removeListener.call(this, type, listener);\r\n    }\r\n\r\n    removeAllListeners(type) {\r\n        var listeners, events, i;\r\n\r\n        events = this._events;\r\n        if (!events) return this;\r\n\r\n        // not listening for off, no need to emit\r\n        if (!events.off) {\r\n            if (arguments.length === 0) {\r\n                this._events = objectCreate(null);\r\n                this._eventsCount = 0;\r\n            } else if (events[type]) {\r\n                if (--this._eventsCount === 0) this._events = objectCreate(null);\r\n                else delete events[type];\r\n            }\r\n            return this;\r\n        }\r\n\r\n        // emit off for all listeners on all events\r\n        if (arguments.length === 0) {\r\n            var keys = objectKeys(events);\r\n            var key;\r\n            for (i = 0; i < keys.length; ++i) {\r\n                key = keys[i];\r\n                if (key === 'off') continue;\r\n                this.removeAllListeners(key);\r\n            }\r\n            this.removeAllListeners('off');\r\n            this._events = objectCreate(null);\r\n            this._eventsCount = 0;\r\n            return this;\r\n        }\r\n\r\n        listeners = events[type];\r\n\r\n        if (typeof listeners === 'function') {\r\n            this.off(type, listeners);\r\n        } else if (listeners) {\r\n            // LIFO order\r\n            for (i = listeners.length - 1; i >= 0; i--) {\r\n                this.off(type, listeners[i]);\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    listeners(type) {\r\n        return _listeners(this, type, true);\r\n    }\r\n\r\n    rawListeners(type) {\r\n        return _listeners(this, type, false);\r\n    }\r\n\r\n    listenerCount() {\r\n        return EventEmitter.listenerCount.apply(this, arguments);\r\n    }\r\n}\r\n\r\nlet hasDefineProperty;\r\ntry {\r\n    var o = {};\r\n    if (Object.defineProperty) Object.defineProperty(o, 'x', { value: 0 });\r\n    hasDefineProperty = o['x'] === 0;\r\n} catch (err) {\r\n    hasDefineProperty = false;\r\n}\r\nif (hasDefineProperty) {\r\n    Object.defineProperty(EventEmitter, 'defaultMaxListeners', {\r\n        enumerable: true,\r\n        get: function () {\r\n            return defaultMaxListeners;\r\n        },\r\n        set: function (arg) {\r\n            // check whether the input is a positive number (whose value is zero or\r\n            // greater and not a NaN).\r\n            if (typeof arg !== 'number' || arg < 0 || arg !== arg)\r\n                throw new TypeError('\"defaultMaxListeners\" must be a positive number');\r\n            defaultMaxListeners = arg;\r\n        }\r\n    });\r\n} else {\r\n    EventEmitter.defaultMaxListeners = defaultMaxListeners;\r\n}\r\n\r\nfunction $getMaxListeners(that) {\r\n    if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;\r\n    return that._maxListeners;\r\n}\r\n\r\n// These standalone emit* functions are used to optimize calling of event\r\n// handlers for fast cases because emit() itself often has a variable number of\r\n// arguments and can be deoptimized because of that. These functions always have\r\n// the same number of arguments and thus do not get deoptimized, so the code\r\n// inside them can execute faster.\r\nfunction emitNone(handler, isFn, self) {\r\n    if (isFn) handler.call(self);\r\n    else {\r\n        var len = handler.length;\r\n        var listeners = arrayClone(handler, len);\r\n        for (var i = 0; i < len; ++i) {\r\n            try {\r\n                listeners[i].call(self);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction emitOne(handler, isFn, self, arg1) {\r\n    if (isFn) handler.call(self, arg1);\r\n    else {\r\n        var len = handler.length;\r\n        var listeners = arrayClone(handler, len);\r\n        for (var i = 0; i < len; ++i) {\r\n            try {\r\n                listeners[i].call(self, arg1);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\r\n    if (isFn) handler.call(self, arg1, arg2);\r\n    else {\r\n        var len = handler.length;\r\n        var listeners = arrayClone(handler, len);\r\n        for (var i = 0; i < len; ++i) {\r\n            try {\r\n                listeners[i].call(self, arg1, arg2);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\r\n    if (isFn) handler.call(self, arg1, arg2, arg3);\r\n    else {\r\n        var len = handler.length;\r\n        var listeners = arrayClone(handler, len);\r\n        for (var i = 0; i < len; ++i) {\r\n            try {\r\n                listeners[i].call(self, arg1, arg2, arg3);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction emitMany(handler, isFn, self, args) {\r\n    if (isFn) handler.apply(self, args);\r\n    else {\r\n        var len = handler.length;\r\n        var listeners = arrayClone(handler, len);\r\n        for (var i = 0; i < len; ++i) {\r\n            try {\r\n                listeners[i].apply(self, args);\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction _addListener(target: EventEmitter, type, listener: Function) {\r\n    var m;\r\n    var events;\r\n    var existing;\r\n\r\n    if (typeof listener !== 'function') throw new TypeError('\"listener\" argument must be a function');\r\n\r\n    events = target._events;\r\n    if (!events) {\r\n        events = target._events = objectCreate(null);\r\n        target._eventsCount = 0;\r\n    } else {\r\n        // To avoid recursion in the case that type === \"newListener\"! Before\r\n        // adding it to the listeners, first emit \"newListener\".\r\n        if (events.newListener) {\r\n            target.emit('newListener', type, listener['listener'] ? listener['listener'] : listener);\r\n\r\n            // Re-assign `events` because a newListener handler could have caused the\r\n            // this._events to be assigned to a new object\r\n            events = target._events;\r\n        }\r\n        existing = events[type];\r\n    }\r\n\r\n    if (!existing) {\r\n        // Optimize the case of one listener. Don't need the extra array object.\r\n        existing = events[type] = listener;\r\n        ++target._eventsCount;\r\n    } else {\r\n        if (typeof existing === 'function') {\r\n            // Adding the second element, need to change to array.\r\n            existing = events[type] = [existing, listener];\r\n        } else {\r\n            existing.push(listener);\r\n        }\r\n\r\n        // Check for listener leak\r\n        if (!existing.warned) {\r\n            m = $getMaxListeners(target);\r\n            if (m && m > 0 && existing.length > m) {\r\n                existing.warned = true;\r\n\r\n                class CustomError extends Error {\r\n                    emitter: any;\r\n                    type: string;\r\n                    count: number;\r\n                }\r\n                let w: CustomError = new CustomError(\r\n                    'Possible Dispatcher memory leak detected. ' +\r\n                        existing.length +\r\n                        ' \"' +\r\n                        String(type) +\r\n                        '\" listeners ' +\r\n                        'added. Use emitter.setMaxListeners() to ' +\r\n                        'increase limit.'\r\n                );\r\n                w.name = 'MaxListenersExceededWarning';\r\n                w.emitter = target;\r\n                w.type = type;\r\n                w.count = existing.length;\r\n\r\n                if (typeof console === 'object' && console.warn) {\r\n                    console.warn('%s: %s', w.name, w.message);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return target;\r\n}\r\n\r\nfunction _removeListener(type, listener) {\r\n    var list, events, position, i, originalListener;\r\n\r\n    if (typeof listener !== 'function') throw new TypeError('\"listener\" argument must be a function');\r\n\r\n    events = this._events;\r\n    if (!events) return this;\r\n\r\n    list = events[type];\r\n    if (!list) return this;\r\n\r\n    if (list === listener || list.listener === listener) {\r\n        if (--this._eventsCount === 0) this._events = objectCreate(null);\r\n        else {\r\n            delete events[type];\r\n            if (events.off) this.emit('off', type, list.listener || listener);\r\n        }\r\n    } else if (typeof list !== 'function') {\r\n        position = -1;\r\n\r\n        for (i = list.length - 1; i >= 0; i--) {\r\n            if (list[i] === listener || list[i].listener === listener) {\r\n                originalListener = list[i].listener;\r\n                position = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (position < 0) return this;\r\n\r\n        if (position === 0) list.shift();\r\n        else spliceOne(list, position);\r\n\r\n        if (list.length === 1) events[type] = list[0];\r\n\r\n        if (events.off) this.emit('off', type, originalListener || listener);\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\nfunction onceWrapper() {\r\n    if (!this.fired) {\r\n        this.target.off(this.type, this.wrapFn);\r\n        this.fired = true;\r\n        switch (arguments.length) {\r\n            case 0:\r\n                return this.listener.call(this.target);\r\n            case 1:\r\n                return this.listener.call(this.target, arguments[0]);\r\n            case 2:\r\n                return this.listener.call(this.target, arguments[0], arguments[1]);\r\n            case 3:\r\n                return this.listener.call(this.target, arguments[0], arguments[1], arguments[2]);\r\n            default:\r\n                var args = new Array(arguments.length);\r\n                for (var i = 0; i < args.length; ++i) args[i] = arguments[i];\r\n                this.listener.apply(this.target, args);\r\n        }\r\n    }\r\n}\r\n\r\nfunction _onceWrap(target, type, listener) {\r\n    var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\r\n    var wrapped = bind.call(onceWrapper, state);\r\n    wrapped.listener = listener;\r\n    state.wrapFn = wrapped;\r\n    return wrapped;\r\n}\r\n\r\nfunction _listeners(target, type, unwrap) {\r\n    var events = target._events;\r\n\r\n    if (!events) return [];\r\n\r\n    var evlistener = events[type];\r\n    if (!evlistener) return [];\r\n\r\n    if (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];\r\n\r\n    return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\r\n}\r\n\r\nfunction listenerCount(type) {\r\n    var events = this._events;\r\n\r\n    if (events) {\r\n        var evlistener = events[type];\r\n\r\n        if (typeof evlistener === 'function') {\r\n            return 1;\r\n        } else if (evlistener) {\r\n            return evlistener.length;\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\n// About 1.5x faster than the two-arg version of Array#splice().\r\nfunction spliceOne(list, index) {\r\n    for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) list[i] = list[k];\r\n    list.pop();\r\n}\r\n\r\nfunction arrayClone(arr, n) {\r\n    var copy = new Array(n);\r\n    for (var i = 0; i < n; ++i) copy[i] = arr[i];\r\n    return copy;\r\n}\r\n\r\nfunction unwrapListeners(arr) {\r\n    var ret = new Array(arr.length);\r\n    for (var i = 0; i < ret.length; ++i) {\r\n        ret[i] = arr[i].listener || arr[i];\r\n    }\r\n    return ret;\r\n}\r\n\r\nfunction objectCreatePolyfill(proto) {\r\n    var F = function () {};\r\n    F.prototype = proto;\r\n    return new F();\r\n}\r\n\r\nfunction objectKeysPolyfill(obj) {\r\n    var keys = [];\r\n    for (var k in obj)\r\n        if (Object.prototype.hasOwnProperty.call(obj, k)) {\r\n            keys.push(k);\r\n        }\r\n    return k;\r\n}\r\n\r\nfunction functionBindPolyfill(context) {\r\n    var fn = this;\r\n    return function () {\r\n        return fn.apply(context, arguments);\r\n    };\r\n}\r\n","import EventEmitter from '../util/event-emitter';\r\n\r\nexport class Context extends EventEmitter {}\r\n\r\nexport type PushConf = Partial<{\r\n    done: boolean;\r\n    stubTime: number;\r\n    offsetPos: number; // Represents the start byte of the pushed data relative to the entire file\r\n}>;\r\n\r\nexport type GlobalOptions = Partial<{\r\n    debug: boolean;\r\n    decodeCodec: boolean;\r\n    config: PushConf;\r\n}>;\r\n\r\nexport interface IDemux {\r\n    /**\r\n     * Pipe the arrayBuffer to the demuxer.\r\n     * @param buf\r\n     * @param conf\r\n     */\r\n    push(buf: ArrayBuffer | Uint8Array, conf: PushConf): void;\r\n\r\n    reset(): void;\r\n\r\n    destroy(): void;\r\n}\r\n","/**\r\n * @file: is.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\n/**\r\n * Used to resolve the\r\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\r\n * of values.\r\n */\r\nvar objectToString = Object.prototype.toString;\r\n\r\n/**\r\n * Checks if `value` is object-like. A value is object-like if it's not `null`\r\n * and has a `typeof` result of \"object\".\r\n *\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\r\n * @example\r\n *\r\n * _.isObjectLike({});\r\n * // => true\r\n *\r\n * _.isObjectLike([1, 2, 3]);\r\n * // => true\r\n *\r\n * _.isObjectLike(_.noop);\r\n * // => false\r\n *\r\n * _.isObjectLike(null);\r\n * // => false\r\n */\r\nexport function isObjectLike(value: any): boolean {\r\n    return !!value && typeof value == 'object';\r\n}\r\n\r\nexport function isEmptyObject(obj: object): boolean {\r\n    for (var prop in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, prop)) {\r\n            return false;\r\n        }\r\n    }\r\n    return JSON.stringify(obj) === JSON.stringify({});\r\n}\r\n\r\n/**\r\n * @param url\r\n */\r\nexport function isHttps(url?: string): boolean {\r\n    return /^https/gi.test(url || window.location.protocol);\r\n}\r\n\r\n/**\r\n * @param num\r\n */\r\nexport function isNumber(num: any): boolean {\r\n    return typeof num === 'number' && !isNaN(num);\r\n}\r\n\r\n/**\r\n * @param value\r\n */\r\nexport function isArrayBuffer(value: any): boolean {\r\n    return isObjectLike(value) && objectToString.call(value).toLowerCase() === '[object arraybuffer]';\r\n}\r\n\r\n/**\r\n * @param value\r\n */\r\nexport function isUint8Array(value: any): boolean {\r\n    return isObjectLike(value) && objectToString.call(value).toLowerCase() === '[object uint8array]';\r\n}\r\n","/**\r\n * @file: cache-buffer.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\nimport { isNumber } from './is';\r\n\r\n/**\r\n * Cache Buffer util.\r\n * It's applicable for streaming data cutting and retaining the data,\r\n * the algorithm minimizes memory application as much as possible.\r\n */\r\n\r\nexport default class CacheBuffer {\r\n    get byteLength(): number {\r\n        if (!isNumber(this.byteLength_)) {\r\n            let len = 0;\r\n\r\n            for (let i = 0, item: Uint8Array; i < this.list_.length; i++) {\r\n                item = this.list_[i];\r\n                len += item.byteLength;\r\n            }\r\n            this.byteLength_ = len;\r\n        }\r\n\r\n        return this.byteLength_;\r\n    }\r\n\r\n    /**\r\n     * maybe return new allocated memory or original memory\r\n     */\r\n    get bytes(): Uint8Array | null {\r\n        const { bufferList } = this;\r\n        let bytes = null;\r\n\r\n        if (bufferList.length > 0) {\r\n            if (bufferList.length === 0) {\r\n                bytes = bufferList[0];\r\n            } else {\r\n                bytes = this.toNewBytes();\r\n            }\r\n        }\r\n\r\n        return bytes;\r\n    }\r\n\r\n    get empty() {\r\n        return this.list_.length === 0;\r\n    }\r\n\r\n    get bufferList() {\r\n        return this.list_;\r\n    }\r\n\r\n    /**\r\n     * Used to cache calculations, reduce the number of CPU calculations.\r\n     * When internal data changes, the value needs to be cleared and recalculated.\r\n     */\r\n    private byteLength_: number | null;\r\n\r\n    private list_: Array<Uint8Array> = [];\r\n\r\n    clear() {\r\n        let len = this.list_.length;\r\n        if (len > 0) {\r\n            this.list_.splice(0, len);\r\n        }\r\n        this.byteLength_ = null;\r\n    }\r\n\r\n    toNewBytes(): Uint8Array | null {\r\n        let bytes = null;\r\n        let tryCount: number = 0;\r\n        let maxTryCount: number = 50;\r\n\r\n        // The following retry strategies are provided for failed memory applications\r\n        // In terms of a better strategy, a failed memory application retry should be\r\n        // an asynchronous process, which does not return until the application succeeds.\r\n        // But the original design of the library is synchronous.\r\n        while (bytes === null) {\r\n            try {\r\n                tryCount++;\r\n                bytes = new Uint8Array(this.byteLength);\r\n            } catch (e) {\r\n                if (tryCount > maxTryCount) {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 0, offset = 0; i < this.list_.length; i++) {\r\n            let payload = this.list_[i];\r\n\r\n            bytes.set(payload, offset);\r\n            offset += payload.byteLength;\r\n        }\r\n\r\n        return bytes;\r\n    }\r\n\r\n    append(newBuffer: Uint8Array | CacheBuffer): void {\r\n        if (newBuffer instanceof CacheBuffer) {\r\n            this.list_ = this.list_.concat(newBuffer.bufferList);\r\n        } else {\r\n            this.list_.push(newBuffer);\r\n        }\r\n\r\n        this.byteLength_ = null;\r\n    }\r\n\r\n    /**\r\n     * This function cuts a complete TypedArray from CacheBuffer and retains the remainder of CacheBuffer.\r\n     * The following points should be noted when using this function:\r\n     * 1. If the cut needs to return the cut-out part, the cut length should be as small as possible to reduce the errors in memory application.\r\n     * 2. If the cutting is only to preserve the remaining parts, the cutting size is within the total number of bytes, without considering memory applications.\r\n     * @param {number} fixedLength\r\n     * @param {boolean} [needCutResult] - If not, just retain the remaining parts after cutting.\r\n     */\r\n    cut(fixedLength: number, needCutResult: boolean = true): Uint8Array {\r\n        let chunk = null;\r\n\r\n        if (fixedLength > 0 && !this.empty) {\r\n            let list = this.list_;\r\n\r\n            let offset = 0;\r\n            let loopIndex = 0;\r\n\r\n            while (list.length > 0) {\r\n                let cur = list.shift();\r\n\r\n                if (loopIndex === 0) {\r\n                    if (cur.byteLength >= fixedLength) {\r\n                        if (needCutResult) {\r\n                            // Here is the key point for optimize memory alloc\r\n                            chunk = cur.subarray(0, fixedLength);\r\n                        }\r\n\r\n                        if (cur.byteLength > fixedLength) {\r\n                            cur = cur.subarray(fixedLength);\r\n                            list.unshift(cur);\r\n                        }\r\n                        break;\r\n                    } else {\r\n                        if (needCutResult) {\r\n                            try {\r\n                                chunk = new Uint8Array(fixedLength);\r\n                            } catch (e) {\r\n                                throw `alloc_memory_error@ cache buffer: ${fixedLength} ${e.message}`;\r\n                            }\r\n\r\n                            chunk.set(cur, 0);\r\n                        }\r\n                        offset += cur.byteLength;\r\n                    }\r\n                } else {\r\n                    let subLen = fixedLength - offset;\r\n\r\n                    if (cur.byteLength >= subLen) {\r\n                        if (needCutResult) {\r\n                            chunk.set(cur.subarray(0, subLen), offset);\r\n                        }\r\n\r\n                        cur = cur.subarray(subLen);\r\n\r\n                        if (cur.byteLength > 0) {\r\n                            list.unshift(cur);\r\n                        }\r\n\r\n                        break;\r\n                    } else {\r\n                        if (needCutResult) {\r\n                            chunk.set(cur, offset);\r\n                        }\r\n                        offset += cur.byteLength;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                loopIndex++;\r\n            }\r\n\r\n            this.byteLength_ = null;\r\n        }\r\n\r\n        return chunk;\r\n    }\r\n}\r\n","/**\r\n * @fileOverview A simple multimap template.\r\n */\r\n\r\ninterface MapData {\r\n    [index: string]: Array<any>;\r\n}\r\n\r\nexport default class MultiMap {\r\n    private map_: MapData;\r\n\r\n    constructor() {\r\n        this.map_ = {};\r\n    }\r\n\r\n    /**\r\n     * Add a key, value pair to the map.\r\n     * @param key\r\n     * @param value\r\n     */\r\n    push(key: string, value: any) {\r\n        if (Object.prototype.hasOwnProperty.call(this.map_, key)) {\r\n            this.map_[key].push(value);\r\n        } else {\r\n            this.map_[key] = [value];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get a list of values by key.\r\n     * @param key\r\n     */\r\n    get(key: string): Array<any> {\r\n        let list = this.map_[key];\r\n        // slice() clones the list so that it and the map can each be modified\r\n        // without affecting the other.\r\n        return list ? list.slice() : null;\r\n    }\r\n\r\n    /**\r\n     * Get a list of all values.\r\n     */\r\n    getAll(): Array<any> {\r\n        let list = [];\r\n        for (let key in this.map_) {\r\n            list.push.apply(list, this.map_[key]);\r\n        }\r\n        return list;\r\n    }\r\n\r\n    /**\r\n     * Remove a specific value, if it exists.\r\n     * @param key\r\n     * @param value\r\n     */\r\n    remove(key: string, value: any): void {\r\n        let list = this.map_[key];\r\n        if (list) {\r\n            for (let i = 0; i < list.length; ++i) {\r\n                if (list[i] == value) {\r\n                    list.splice(i, 1);\r\n                    --i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clear all keys and values from the multimap.\r\n     */\r\n    clear(): void {\r\n        this.map_ = {};\r\n    }\r\n\r\n    /**\r\n     * @param callback\r\n     */\r\n    forEach(callback: Function): void {\r\n        for (let key in this.map_) {\r\n            callback(key, this.map_[key]);\r\n        }\r\n    }\r\n}\r\n","import MultiMap from './multi-map';\r\n\r\n/**\r\n * Creates a new Binding_ and attaches the event listener to the event target.\r\n */\r\nclass Binding_ {\r\n    target: any;\r\n    type: string;\r\n    listener: Function;\r\n\r\n    /**\r\n     * @param target - The event target.\r\n     * @param type - The event type.\r\n     * @param listener - The event listener.\r\n     */\r\n    constructor(target: any, type: string, listener: Function) {\r\n        this.target = target;\r\n        this.type = type;\r\n        this.listener = listener;\r\n\r\n        if (this.target.addEventListener) {\r\n            this.target.addEventListener(type, listener, false);\r\n        } else if (this.target.on) {\r\n            this.target.on(type, listener, false);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Detaches the event listener from the event target.\r\n     * This does nothing if the event listener is already detached.\r\n     */\r\n    off() {\r\n        if (this.target.removeEventListener) {\r\n            this.target.removeEventListener(this.type, this.listener, false);\r\n        } else if (this.target.off) {\r\n            this.target.off(this.type, this.listener, false);\r\n        }\r\n\r\n        this.target = null;\r\n        this.listener = null;\r\n    }\r\n}\r\n\r\n/**\r\n * Creates a new EventManager.\r\n * An EventManager maintains a collection of \"event bindings\" between event targets and event listeners.\r\n */\r\nexport default class EventManager {\r\n    private bindingMap_: MultiMap;\r\n    // static Binding_: Binding;\r\n\r\n    constructor() {\r\n        /**\r\n         * Maps an event type to an array of event bindings.\r\n         */\r\n        this.bindingMap_ = new MultiMap();\r\n    }\r\n\r\n    /**\r\n     * Detaches all event listeners.\r\n     * @override\r\n     */\r\n    destroy(): void {\r\n        this.removeAll();\r\n        this.bindingMap_ = null;\r\n    }\r\n\r\n    /**\r\n     * Attaches an event listener to an event target.\r\n     * @param target - The event target.\r\n     * @param type  - The event type.\r\n     * @param listener  - The event listener.\r\n     */\r\n    on(target: any, type: string, listener: Function): EventManager {\r\n        if (!this.bindingMap_) return;\r\n\r\n        let binding = new Binding_(target, type, listener);\r\n        this.bindingMap_.push(type, binding);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Attaches an event listener to an event target.\r\n     * The listener will be removed when the first instance of the event is fired.\r\n     * @param {EventTarget} target The event target.\r\n     * @param {string} type The event type.\r\n     * @param {function} listener The event listener.\r\n     */\r\n    once(target: any, type: string, listener: Function) {\r\n        // Install a shim listener that will stop listening after the first event.\r\n        this.on(\r\n            target,\r\n            type,\r\n            function (event: any) {\r\n                // Stop listening to this event.\r\n                this.off(target, type);\r\n                // Call the original listener.\r\n                listener(event);\r\n            }.bind(this)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Detaches an event listener from an event target.\r\n     * @param {EventTarget} target The event target.\r\n     * @param {string} type The event type.\r\n     */\r\n    off(target: any, type: string): void {\r\n        if (!this.bindingMap_) return;\r\n\r\n        let list = this.bindingMap_.get(type) || [];\r\n\r\n        for (let i = 0; i < list.length; ++i) {\r\n            let binding = list[i];\r\n\r\n            if (binding.target == target) {\r\n                binding.off();\r\n                this.bindingMap_.remove(type, binding);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Detaches all event listeners from all targets.\r\n     */\r\n    removeAll(): void {\r\n        if (!this.bindingMap_) return;\r\n\r\n        let list = this.bindingMap_.getAll();\r\n\r\n        for (let i = 0; i < list.length; ++i) {\r\n            list[i].off();\r\n        }\r\n\r\n        this.bindingMap_.clear();\r\n    }\r\n}\r\n\r\n// EventManager.Binding_ = Binding;\r\n","/**\r\n * @file: global.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\n/**\r\n * @description provide global scope.\r\n */\r\nlet global: any;\r\n\r\n// see https://stackoverflow.com/a/11237259/589493\r\nif (typeof window === 'undefined') {\r\n    /* eslint-disable-next-line no-undef */\r\n    global = self;\r\n} else {\r\n    global = window;\r\n}\r\n\r\nexport default global;\r\n","/**\r\n * @file: logger.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\n/**\r\n * utils - logger\r\n */\r\n/* global WorkerGlobalScope */\r\nimport global from './global';\r\nimport EventEmitter from './event-emitter';\r\n\r\nlet console = global.console;\r\nconst isWorker =\r\n    typeof WorkerGlobalScope !== 'undefined' &&\r\n    self instanceof WorkerGlobalScope &&\r\n    typeof importScripts != 'undefined';\r\nconst prefix = '>>>';\r\n\r\nclass Logger extends EventEmitter {\r\n    private MSG_NAME: string;\r\n    private _enable: boolean;\r\n\r\n    get enable() {\r\n        return this._enable;\r\n    }\r\n\r\n    set enable(value: boolean) {\r\n        this._enable = value;\r\n\r\n        this.MSG_NAME = '__log__';\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this._enable = false;\r\n    }\r\n\r\n    log(...restArgs: any) {\r\n        if (isWorker) {\r\n            logger.emit(this.MSG_NAME, 'log', [...restArgs].join(''));\r\n        } else {\r\n            if (this._enable) {\r\n                console.log.call(console, prefix, ...restArgs);\r\n            }\r\n        }\r\n    }\r\n\r\n    debug(...restArgs: any) {\r\n        if (isWorker) {\r\n            logger.emit(this.MSG_NAME, 'debug', [...restArgs].join(''));\r\n        } else {\r\n            if (this._enable && console.debug) {\r\n                console.debug.call(console, prefix, ...restArgs);\r\n            }\r\n        }\r\n    }\r\n\r\n    assert(...restArgs: any) {\r\n        if (this._enable && console.assert) {\r\n            let condition = restArgs[0];\r\n            let sliceArgs = Array.prototype.slice.call(restArgs, 1);\r\n            sliceArgs.unshift(prefix);\r\n\r\n            console.assert.call(console, condition, ...sliceArgs);\r\n        }\r\n    }\r\n\r\n    warn(...restArgs: any) {\r\n        if (isWorker) {\r\n            logger.emit(this.MSG_NAME, 'warn', [...restArgs].join(''));\r\n        } else {\r\n            if (this._enable) {\r\n                console.warn.call(console, prefix, ...restArgs);\r\n            }\r\n        }\r\n    }\r\n\r\n    error(...restArgs: any) {\r\n        if (isWorker) {\r\n            logger.emit(this.MSG_NAME, 'error', [...restArgs].join(''));\r\n        } else {\r\n            if (this._enable) {\r\n                console.error.call(console, prefix, ...restArgs);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nlet logger = new Logger();\r\n\r\n/**\r\n * @param {Object} obj - custom logger\r\n */\r\nexport function setLogger(obj) {\r\n    console = obj;\r\n}\r\n\r\nexport function getLogger() {\r\n    return logger;\r\n}\r\n\r\nexport default logger;\r\n","/**\r\n * @file: stream.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\n/**\r\n * simple stream implementation.\r\n */\r\n\r\nimport { PushConf } from '../types/globals';\r\nimport EventEmitter from './event-emitter';\r\n\r\nclass Stream extends EventEmitter {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * connect to the next pipeline stream.\r\n     * @param destination\r\n     */\r\n    pipe(destination: Stream): Stream {\r\n        this.on('reset', function () {\r\n            destination.reset();\r\n        });\r\n\r\n        this.on('data', function (data) {\r\n            destination.push(data);\r\n        });\r\n\r\n        this.on('done', function (flushSource) {\r\n            destination.flush(flushSource);\r\n        });\r\n\r\n        return destination;\r\n    }\r\n\r\n    /**\r\n     * detaches the next pipeline stream previously attached.\r\n     */\r\n    unpipe(): Stream {\r\n        this.removeAllListeners('reset');\r\n        this.removeAllListeners('data');\r\n        this.removeAllListeners('done');\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * push data to current pipeline.\r\n     * @param data\r\n     */\r\n    push(data: any, conf?: PushConf): void {\r\n        if (conf) {\r\n        }\r\n        this.emit('data', data);\r\n    }\r\n\r\n    /**\r\n     * flush current pipeline.\r\n     * @param flushSource\r\n     */\r\n    flush(flushSource: Stream): void {\r\n        this.emit('done', flushSource);\r\n    }\r\n\r\n    reset(): void {\r\n        this.emit('reset');\r\n    }\r\n}\r\n\r\nexport default Stream;\r\n","/**\r\n * @file: demuxer.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\nimport { Events } from './enum/events';\r\nimport { Context, GlobalOptions, IDemux, PushConf } from './types/globals';\r\nimport CacheBuffer from './util/cache-buffer';\r\nimport EventManager from './util/event-manager';\r\nimport { isArrayBuffer, isUint8Array } from './util/is';\r\nimport logger from './util/logger';\r\nimport Stream from './util/stream';\r\n\r\nexport default abstract class DemuxFacade extends Stream implements IDemux {\r\n    abstract readonly endStream?: Stream;\r\n    protected eventManager_: EventManager;\r\n    protected ctx_: Context;\r\n    protected options_: GlobalOptions;\r\n    protected cache_buffer_: CacheBuffer;\r\n\r\n    protected listenEndStream_(): void {\r\n        this.eventManager_ = new EventManager();\r\n\r\n        this.eventManager_\r\n            .on(this.endStream, 'data', (data) => {\r\n                this.emit(Events.DEMUX_DATA, data);\r\n            })\r\n            .on(this.endStream, 'done', (data) => {\r\n                this.emit(Events.DONE, data);\r\n            })\r\n            .on(this.ctx_, 'error', (data) => {\r\n                this.emit(Events.ERROR, data);\r\n            });\r\n    }\r\n\r\n    constructor(options: GlobalOptions = {}) {\r\n        super();\r\n\r\n        if (options.debug) {\r\n            logger.enable = true;\r\n        }\r\n\r\n        this.ctx_ = new Context();\r\n        this.options_ = options;\r\n        this.cache_buffer_ = new CacheBuffer();\r\n    }\r\n\r\n    /**\r\n     * Pipe the arrayBuffer to the demuxer.\r\n     * @param buf\r\n     * @param conf\r\n     */\r\n    abstract push(buf: ArrayBuffer | Uint8Array, conf: PushConf): void;\r\n\r\n    /**\r\n     * transfer data to Uint8Array\r\n     * @param buf\r\n     */\r\n    protected constraintPushData_(buf: ArrayBuffer | Uint8Array): Uint8Array | null {\r\n        let newBuf = null;\r\n        if (!isArrayBuffer(buf) && !isUint8Array(buf)) {\r\n            logger.error(`Data pushed is not an ArrayBuffer or Uint8Array: ${buf}`);\r\n            return newBuf;\r\n        }\r\n\r\n        if (isArrayBuffer(buf)) {\r\n            newBuf = new Uint8Array(buf);\r\n        } else {\r\n            newBuf = buf;\r\n        }\r\n\r\n        return newBuf;\r\n    }\r\n\r\n    reset(): void {}\r\n\r\n    destroy(): void {\r\n        this.unpipe();\r\n        this.endStream.unpipe();\r\n\r\n        this.eventManager_.removeAll();\r\n    }\r\n}\r\n","/**\r\n * @file: mux-error-code.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\n/**\r\n * @readonly\r\n * @enum {Number}\r\n */\r\nenum codes {\r\n    WORKER_EXCEPTION = 0,\r\n    WORKER_MSG_EXCEPTION,\r\n    TS_SYNC_BYTE,\r\n    FLV_HEAD_SIGNATURE,\r\n    FLV_NOT_EXPECTED_ADJACENT_DATA\r\n}\r\n\r\nexport default codes;\r\n","/**\r\n * @file: patSection.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\nimport logger from '../../util/logger';\r\n\r\n/**\r\n * Structure for pat.\r\n */\r\nexport class PATSection {\r\n    // table_id: number;\r\n    // section_syntax_indicator: number;\r\n    // section_length: number;\r\n    // transport_stream_id: number;\r\n    // version_number: number;\r\n    // current_next_indicator: number;\r\n    // section_number: number;\r\n    // last_section_number: number;\r\n    // network_PID: number;\r\n    pmtTable: Array<M2TS.PMTTableItem>;\r\n    // CRC_32: number;\r\n\r\n    constructor(buffer: Uint8Array) {\r\n        // program_association_section 0x00\r\n        // this.table_id = buffer[0];\r\n\r\n        // this.section_syntax_indicator = buffer[1] >> 7;\r\n\r\n        // this.zero = (buffer[1] >> 6) & 0x1;\r\n\r\n        // this.reserved_0 = (buffer[1] >> 4) & 0x3;\r\n\r\n        // the number of bytes of the section\r\n        // starting immediately following the section_length field, and including the CRC.\r\n        let section_length = ((buffer[1] & 0x0f) << 8) | buffer[2];\r\n\r\n        // this.transport_stream_id = (buffer[3] << 8) | buffer[4];\r\n\r\n        // this.reserved_1 = buffer[5] >> 6;\r\n\r\n        // this.version_number = (buffer[5] >> 1) & 0x1f;\r\n\r\n        // this.current_next_indicator = buffer[5] && 0x01;\r\n\r\n        // The section_number of the first section in the Program Association Table shall be 0x00.\r\n        // It shall be incremented by 1 with each additional section in the PAT.\r\n        // this.section_number = buffer[6];\r\n\r\n        // The number of the last section (that is, the section with the highest section_number) of the complete PAT.\r\n        // this.last_section_number = buffer[7];\r\n\r\n        // this.network_PID = 0x00;\r\n\r\n        var n = 0,\r\n            program_num;\r\n        // reserved_3;\r\n        var len = section_length - 4 - 5; // 4: crc32, 5: bytes followed by section_length\r\n\r\n        this.pmtTable = [];\r\n        /* loop by 4 bytes, during  */\r\n        for (; n < len; n += 4) {\r\n            program_num = (buffer[n + 8] << 8) | buffer[n + 9];\r\n            // reserved_3 = buffer[10 + n] >> 5;\r\n\r\n            if (program_num == 0x00) {\r\n                let network_PID = ((buffer[10 + n] & 0x1f) << 8) | buffer[11 + n];\r\n\r\n                // 记录该TS流的网络PID\r\n                // TS_network_Pid = this.network_PID;\r\n\r\n                logger.log('packet->network_PID %0x /n/n', network_PID);\r\n            } else {\r\n                this.pmtTable.push({\r\n                    programNum: program_num,\r\n                    program_map_PID: ((buffer[10 + n] & 0x1f) << 8) | buffer[11 + n]\r\n                });\r\n\r\n                // TS_PAT_Program\r\n                // PAT_program;\r\n                // PAT_program.program_map_PID = (buffer[10 + n] & 0x1F) << 8 | buffer[11 + n];\r\n                // PAT_program.program_number = program_num;\r\n                // this.program.push_back(PAT_program);\r\n                // TS_program.push_back(PAT_program);//向全局PAT节目数组中添加PAT节目信息\r\n            }\r\n        }\r\n\r\n        // var crcLength = this.section_length + 3;\r\n        // this.CRC_32 =\r\n        //     ((buffer[crcLength - 4] & 0x000000ff) << 24) |\r\n        //     ((buffer[crcLength - 3] & 0x000000ff) << 16) |\r\n        //     ((buffer[crcLength - 2] & 0x000000ff) << 8) |\r\n        //     (buffer[crcLength - 1] & 0x000000ff);\r\n    }\r\n}\r\n","/**\r\n * @file: pmtSection.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\n/**\r\n * Structure for pat.\r\n */\r\nimport logger from '../../util/logger';\r\n\r\n/**\r\n * Structure for PMT.\r\n */\r\nexport class PMTSection {\r\n    // table_id: number;\r\n    // section_syntax_indicator: number;\r\n    // section_length: number;\r\n    // program_number: number;\r\n    // version_number: number;\r\n    // current_next_indicator: number;\r\n    // section_number: number;\r\n    // last_section_number: number;\r\n    // PCR_PID: number;\r\n    pes_table: Array<M2TS.PESTableItem>;\r\n    // CRC_32: number;\r\n\r\n    constructor(buffer: Uint8Array) {\r\n        // program_map_section  0x02\r\n        // this.table_id = buffer[0];\r\n\r\n        // this.section_syntax_indicator = buffer[1] >> 7;\r\n\r\n        // this.zero = (buffer[1] >> 6) & 0x1;\r\n\r\n        // this.reserved_0 = (buffer[1] >> 4) & 0x3;\r\n\r\n        // the number of bytes of the section\r\n        // starting immediately following the section_length field, and including the CRC.\r\n        let section_length = ((buffer[1] & 0x0f) << 8) | buffer[2];\r\n\r\n        // It specifies the program to which the program_map_PID is applicable.\r\n        // this.program_number = (buffer[3] << 8) | buffer[4];\r\n\r\n        // this.reserved_1 = buffer[5] >> 6;\r\n\r\n        // this.version_number = (buffer[5] >> 1) & 0x1f;\r\n\r\n        // this.current_next_indicator = buffer[5] && 0x01;\r\n\r\n        // The section_number of the first section in the Program Association Table shall be 0x00.\r\n        // It shall be incremented by 1 with each additional section in the PAT.\r\n        // this.section_number = buffer[6];\r\n\r\n        // The number of the last section (that is, the section with the highest section_number) of the complete PAT.\r\n        // this.last_section_number = buffer[7];\r\n\r\n        // contain the PCR fields valid for the program specified by program_number.\r\n        // this.PCR_PID = ((buffer[8] & 0x1f) << 8) | buffer[9];\r\n\r\n        // this.reserved_2 = buffer[10] >> 4;\r\n\r\n        // The number of bytes of the descriptors immediately following the program_info_length field.\r\n        const program_info_length = ((buffer[10] & 0x0f) << 8) | buffer[11];\r\n\r\n        if (program_info_length < 0) {\r\n            return;\r\n        } else if (program_info_length > 2) {\r\n            let i = 0;\r\n\r\n            while (i < program_info_length) {\r\n                // let descriptor_tag = buffer[12 + i];\r\n                let descriptor_length = buffer[13 + i];\r\n\r\n                // \tlogger.log('descriptor_tag', descriptor_tag, descriptor_length);\r\n                i += descriptor_length;\r\n            }\r\n        }\r\n\r\n        var es_section_pos = 12 + program_info_length;\r\n        var es_section_len = section_length - program_info_length - 9 - 4; // 9: bytes followed by section_length, 4: crc32\r\n        var es_section_end = es_section_pos + es_section_len;\r\n\r\n        if (es_section_pos >= es_section_end) {\r\n            logger.warn(`es_section_pos < es_section_end ${es_section_pos}, ${es_section_end}`);\r\n            return;\r\n        }\r\n\r\n        this.pes_table = [];\r\n\r\n        let j = 0;\r\n        while (j < es_section_len) {\r\n            let basePos = es_section_pos + j;\r\n            let stream_type = buffer[basePos];\r\n            let elementary_PID = ((buffer[basePos + 1] << 8) | buffer[basePos + 2]) & 0x1fff;\r\n            let ES_info_length = ((buffer[basePos + 3] << 8) | buffer[basePos + 4]) & 0x0fff;\r\n\r\n            this.pes_table.push({\r\n                streamType: stream_type,\r\n                PID: elementary_PID\r\n            });\r\n\r\n            // if (ES_info_length > 2) {\r\n            //     let k = 0;\r\n            //     let es_pos = basePos + 5;\r\n\r\n            //     while (k < ES_info_length) {\r\n            //         // let descriptor_tag = buffer[es_pos + k];\r\n            //         let descriptor_length = buffer[es_pos + k];\r\n\r\n            //         // if (descriptor_tag === )\r\n            //         k += descriptor_length;\r\n            //     }\r\n            // }\r\n\r\n            j += ES_info_length + 5;\r\n        }\r\n\r\n        // var crcLength = this.section_length + 3;\r\n        // this.CRC_32 =\r\n        //     ((buffer[crcLength - 4] & 0x000000ff) << 24) |\r\n        //     ((buffer[crcLength - 3] & 0x000000ff) << 16) |\r\n        //     ((buffer[crcLength - 2] & 0x000000ff) << 8) |\r\n        //     (buffer[crcLength - 1] & 0x000000ff);\r\n    }\r\n}\r\n","/**\r\n * @file: m2t-pid.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\n/**\r\n * @overview Program and program element descriptors.\r\n * @see ISO/IEC 13818-1: Table 2-3 – PID table\r\n * @see DVB SI: 5.1.3 Coding of PID and table_id fields\r\n */\r\n\r\n/**\r\n * @readonly\r\n * @enum {number}\r\n * @export\r\n */\r\nexport const PAT_PID = 0x0000;\r\nexport const CAT_PID = 0x0001;\r\nexport const TSDT_PID = 0x0002;\r\n/* reserved 0x0003 to 0x000F */\r\nexport const SDT_PID = 0x0011;\r\n","/**\r\n * @file: psi.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\n/**\r\n * PSI(Program Specific Information)\r\n */\r\n// import { HevcPPSProps, HevcSPSProps, HevcVPSProps } from '../codec/avc';\r\nimport { PATSection } from './structs/patSection';\r\nimport { PMTSection } from './structs/pmtSection';\r\n// import { SDTSection } from './structs/sdtSection';\r\nimport { PAT_PID, CAT_PID, TSDT_PID, SDT_PID } from '../enum/m2t-pid';\r\n// import { Context } from '../types/globals';\r\nimport { Packet } from './structs/packet';\r\n// import StreamTypes from '../enum/stream-types';\r\nimport { StreamTypes } from '../enum/stream-types';\r\nimport { GOPVector, AACFrameVector } from './types/pipeline';\r\n\r\n// const MAX_PIDS_PER_PROGRAM = 64;\r\n\r\ntype TrackType = 'video' | 'audio' | 'caption';\r\n\r\nexport interface Track {\r\n    id: number;\r\n    type: TrackType;\r\n    stream_type: StreamTypes;\r\n    duration: number;\r\n    width?: number;\r\n    height?: number;\r\n    codec: string;\r\n    realCodec?: string;\r\n    firstDTS: number;\r\n    firstPTS: number;\r\n\r\n    // Video\r\n    gops: GOPVector;\r\n    profileIdc?: number;\r\n    profileCompatibility?: number;\r\n    levelIdc?: number;\r\n    pixelRatio?: [number, number];\r\n    timescale: number; // (in TS timescale = 90kHz)\r\n    inputTimeScale?: number;\r\n    sps: Array<Uint8Array>;\r\n    pps: Array<Uint8Array>;\r\n    vps: Array<Uint8Array>;\r\n    // hevc_vps: HevcVPSProps;\r\n    // hevc_sps: HevcSPSProps;\r\n    // hevc_pps: HevcPPSProps;\r\n\r\n    // Audio\r\n    isAAC?: boolean;\r\n    frames: AACFrameVector;\r\n    sampleRate?: number;\r\n    channelCount?: number;\r\n    config?: any;\r\n}\r\n\r\n// class Metadata {\r\n//     service_name: string;\r\n//     service_provider: string;\r\n// }\r\n\r\nexport class PSI {\r\n    constructor() {\r\n        // this.metadata = new Metadata();\r\n        this.pat_table = [];\r\n        this.pes_streams = [];\r\n    }\r\n\r\n    // private context: AVFormatContext;\r\n    // private metadata: Metadata; // Specify by SDT Packet\r\n    private pat_table: Array<M2TS.PATTableItem>; // Specify by PMT Packet\r\n    private pes_streams: Array<M2TS.PSI_PES_Stream>; // Specify by PES stream\r\n\r\n    /**\r\n     * program PID\r\n     */\r\n    get currentProgramPID(): number {\r\n        let _pmtIds = [];\r\n\r\n        for (let i = 0; i < this.pat_table.length; i++) {\r\n            _pmtIds.push(this.pat_table[i].pid);\r\n        }\r\n\r\n        return _pmtIds.length > 0 ? _pmtIds[0] : -1;\r\n    }\r\n\r\n    get tracks() {\r\n        return this.pes_streams;\r\n    }\r\n\r\n    // get pmtTable() {\r\n    //     return this.pat_table;\r\n    // }\r\n\r\n    /**\r\n     * 目前对于PSI的信息，持久化保留在内存中\r\n     * 对于同一个片子，HLS规范会规定只能有一个 PMT/PAT 表\r\n     * 所以一部片子的PSI信息应该是保持不变的，换片子后PSI信息的销毁通过 mux 重新实例化产生新的信息，不需要调用reset\r\n     * 有些 TS 文件在HLS切片器切割的时候，没有带上PAT/PMT等表，需要相邻 TS 给定的表信息\r\n     */\r\n    reset(): void {\r\n        // this.metadata = new Metadata();\r\n        this.pat_table.splice(0, this.pat_table.length);\r\n        this.pes_streams.splice(0, this.pes_streams.length);\r\n    }\r\n\r\n    /**\r\n     * @param packet\r\n     */\r\n    parse(packet: Packet): void {\r\n        const self = this;\r\n\r\n        // ISO13818-1: Table 2-3 – PID table\r\n        if (PAT_PID === packet.PID) {\r\n            /* PAT PID */\r\n            this._parsePat(packet);\r\n        } else if (CAT_PID === packet.PID) {\r\n            /* CAT PID */\r\n        } else if (TSDT_PID === packet.PID) {\r\n            /* Transport Stream Description Table */\r\n        } else if (0x0003 <= packet.PID && packet.PID <= 0x000f) {\r\n            /* Reserved */\r\n        } else if (SDT_PID === packet.PID) {\r\n            /* Service Description Table */\r\n            // this._parseSdt(packet);\r\n        } else if (packet.PID === self.currentProgramPID) {\r\n            /* PMT PID */\r\n            this._parsePmt(packet);\r\n        }\r\n        // else if (this.findTrack(packet.PID)) {\r\n        // \t/* Reserved */\r\n        // } else {\r\n        // \tlogger.warn(`psi unknown packet PID ${packet.PID}`);\r\n        // }\r\n    }\r\n\r\n    // findPmtProgram(PID) {\r\n    // \tlet program = null;\r\n    //\r\n    // \tfor (let i = 0; i < this.pat_table.length; i++) {\r\n    // \t\tif (this.pat_table[i].pid === PID) {\r\n    // \t\t\tprogram = this.pat_table[i].id;\r\n    // \t\t\tbreak;\r\n    // \t\t}\r\n    // \t}\r\n    //\r\n    // \treturn program;\r\n    // }\r\n\r\n    /**\r\n     * @param PID\r\n     */\r\n    findTrack(PID: number): Track {\r\n        let program = null;\r\n        let streams = this.pes_streams;\r\n\r\n        for (let i = 0; i < streams.length; i++) {\r\n            if (streams[i].id === PID) {\r\n                program = streams[i];\r\n                break;\r\n            }\r\n        }\r\n\r\n        return program;\r\n    }\r\n\r\n    /**\r\n     * Parse PAT Packet\r\n     * @param pack\r\n     */\r\n    private _parsePat(pack: Packet): PATSection {\r\n        let data: Uint8Array;\r\n\r\n        if (pack.payload_unit_start_indicator) {\r\n            // psi has pointer_field\r\n            let pointer = pack.payload[0];\r\n\r\n            data = pack.payload.subarray(pointer + 1);\r\n        } else {\r\n            data = pack.payload;\r\n        }\r\n\r\n        let pat = new PATSection(data);\r\n\r\n        // https://tools.ietf.org/html/rfc8216#section-3.2\r\n        // Transport Stream Segments MUST contain a single MPEG-2 Program;\r\n        for (var i = 0; i < pat.pmtTable.length; i++) {\r\n            this._add_pid_to_pmt(pat.pmtTable[i].programNum, pat.pmtTable[i].program_map_PID);\r\n        }\r\n\r\n        return pat;\r\n    }\r\n\r\n    /**\r\n     * Associates Program Number and Program Map Table(PMT) PID\r\n     * @param programId\r\n     * @param pid\r\n     */\r\n    private _add_pid_to_pmt(programId: number, pid: number): void {\r\n        let table = this.pat_table;\r\n\r\n        function get_pmt(id: number) {\r\n            for (let i = 0, item: M2TS.PATTableItem; i < table.length; i++) {\r\n                item = table[i];\r\n                if (item.id === id) {\r\n                    return {\r\n                        idx: i,\r\n                        item\r\n                    };\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let p = get_pmt(programId);\r\n        if (!p) {\r\n            table.push({\r\n                id: programId,\r\n                pid: pid\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Parse PMT Packet\r\n     * @param pack\r\n     */\r\n    private _parsePmt(pack: Packet): PMTSection {\r\n        let data: Uint8Array;\r\n\r\n        if (pack.payload_unit_start_indicator) {\r\n            // psi has pointer_field\r\n            let pointer = pack.payload[0];\r\n\r\n            data = pack.payload.subarray(pointer + 1);\r\n        } else {\r\n            data = pack.payload;\r\n        }\r\n\r\n        let pmt = new PMTSection(data);\r\n\r\n        for (var i = 0; i < pmt.pes_table.length; i++) {\r\n            this._add_pes_stream(pmt.pes_table[i]);\r\n        }\r\n\r\n        return pmt;\r\n    }\r\n\r\n    /**\r\n     * @param stream\r\n     * @param pmt\r\n     */\r\n    private _add_pes_stream(stream: M2TS.PESTableItem /*, pmt?: PMTSection*/): void {\r\n        let streams = this.pes_streams;\r\n\r\n        function get_program(id: number) {\r\n            for (let i = 0, item: M2TS.PSI_PES_Stream; i < streams.length; i++) {\r\n                item = streams[i];\r\n                if (item.id === id) {\r\n                    return {\r\n                        idx: i,\r\n                        item\r\n                    };\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        let p = get_program(stream.PID);\r\n        if (!p) {\r\n            streams.push({\r\n                id: stream.PID,\r\n                stream_type: stream.streamType,\r\n                duration: 0,\r\n                sps: [],\r\n                pps: [],\r\n                pixelRatio: [1, 1],\r\n                timescale: 90000, // (in TS timescale = 90kHz)\r\n                width: 0,\r\n                height: 0\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Parse SDT Packet\r\n     * @param pack\r\n     */\r\n    // private _parseSdt(pack: Packet): SDTSection {\r\n    //     let data: Uint8Array;\r\n\r\n    //     if (pack.payload_unit_start_indicator) {\r\n    //         // psi has pointer_field\r\n    //         let pointer = pack.payload[0];\r\n\r\n    //         data = pack.payload.subarray(pointer + 1);\r\n    //     } else {\r\n    //         data = pack.payload;\r\n    //     }\r\n\r\n    //     let sdt = new SDTSection(data);\r\n\r\n    //     if (sdt.service_table.length > 0) {\r\n    //         this.metadata.service_name = sdt.service_table[0].name;\r\n    //         this.metadata.service_provider = sdt.service_table[0].provider_name;\r\n    //     }\r\n\r\n    //     return sdt;\r\n    // }\r\n}\r\n","/**\r\n * @file: complex.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\n/**\r\n * Complex Stream.\r\n *\r\n * Combine Video, Audio, Caption c and other data.\r\n */\r\nimport Stream from '../../util/stream';\r\n\r\nclass M2TSComplexStream extends Stream {\r\n    constructor(ctx, psi) {\r\n        super();\r\n\r\n        /** @private */\r\n        this.context = ctx;\r\n\r\n        /** @private {PSI} */\r\n        this.PSI = psi;\r\n\r\n        /** @private {Object} */\r\n        this.videoTrack = null;\r\n\r\n        /** @private {Object} */\r\n        this.audioTrack = null;\r\n\r\n        /** @private {Object} */\r\n        this.captionTrack = null;\r\n\r\n        // pipe specified by outside.\r\n    }\r\n\r\n    push(data) {\r\n        let tracks = data;\r\n\r\n        for (let i = 0, track; i < tracks.length; i++) {\r\n            track = tracks[i];\r\n\r\n            switch (track.type) {\r\n                case 'video':\r\n                    // data -> GOPs\r\n                    this._complexVideo(track);\r\n                    break;\r\n                case 'audio':\r\n                    this._complexAudio(track);\r\n                    break;\r\n                case 'caption':\r\n                    this._complexCaption(track);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    flush() {\r\n        this.emit('done');\r\n\r\n        this._clearStream();\r\n    }\r\n\r\n    reset() {\r\n        this._clearStream();\r\n\r\n        // This is demux end stream, so don't emit reset.\r\n        // this.emit('reset');\r\n    }\r\n\r\n    _clearStream() {\r\n        this.videoTrack = null;\r\n        this.audioTrack = null;\r\n        this.captionTrack = null;\r\n    }\r\n\r\n    _complexVideo(gops) {\r\n        let track = this.PSI.findTrack(gops.trackId);\r\n\r\n        if (track) {\r\n            track.type = 'video';\r\n            track.gops = gops;\r\n            track.firstDTS = gops[0][0].dts;\r\n            track.firstPTS = gops[0][0].pts;\r\n            // set duration to Infinity(POSITIVE_INFINITY) can be useful for live.\r\n            // If Infinity it will loose the ability to seek.\r\n            track.duration = Number.POSITIVE_INFINITY;\r\n\r\n            this.videoTrack = track;\r\n\r\n            this.emit('data', {\r\n                videoTrack: this.videoTrack\r\n            });\r\n        }\r\n    }\r\n\r\n    _complexAudio(frames) {\r\n        let track = this.PSI.findTrack(frames.trackId);\r\n\r\n        if (track) {\r\n            track.type = 'audio';\r\n            track.frames = frames;\r\n            track.firstPTS = track.firstDTS = frames[0].dts;\r\n\r\n            // set duration to Infinity(POSITIVE_INFINITY) can be useful for live.\r\n            // If Infinity it will loose the ability to seek.\r\n            track.duration = Number.POSITIVE_INFINITY;\r\n\r\n            this.audioTrack = track;\r\n\r\n            this.emit('data', {\r\n                audioTrack: this.audioTrack\r\n            });\r\n        }\r\n    }\r\n\r\n    _complexCaption() {}\r\n}\r\n\r\nexport default M2TSComplexStream;\r\n","/**\r\n * @file: aac-config.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\n/**\r\n * Audio Config Helper\r\n * Accord audioObjectType/samplingFrequencyIndex/channelCount, generate mimeType info.\r\n */\r\nimport platform from '../../util/platform';\r\nimport logger from '../../util/logger';\r\n\r\n/*\r\n    sampling freq,\r\n    0: 96000 Hz\r\n    1: 88200 Hz\r\n    2: 64000 Hz\r\n    3: 48000 Hz\r\n    4: 44100 Hz\r\n    5: 32000 Hz\r\n    6: 24000 Hz\r\n    7: 22050 Hz\r\n    8: 16000 Hz\r\n    9: 12000 Hz\r\n    10: 11025 Hz\r\n    11: 8000 Hz\r\n    12: 7350 Hz\r\n    13: Reserved\r\n    14: Reserved\r\n    15: frequency is written explictly\r\n */\r\nconst samplingRates = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\r\n\r\nexport default (audioObjectType: number, samplingFrequencyIndex: number, channelCount: number) => {\r\n    let adtsExtensionSamplingIndex;\r\n    let realAudioObjectType = audioObjectType;\r\n    let config;\r\n\r\n    if (samplingFrequencyIndex > samplingRates.length - 1) {\r\n        logger.error(`invalid sampling index:${samplingFrequencyIndex}`);\r\n        return;\r\n    }\r\n\r\n    audioObjectType = 5;\r\n    config = new Array(4);\r\n    // if (manifest codec is HE-AAC or HE-AACv2) OR (manifest codec not specified AND frequency less than 24kHz)\r\n    if (samplingFrequencyIndex >= 6) {\r\n        // HE-AAC uses SBR (Spectral Band Replication) , high frequencies are constructed from low frequencies\r\n        // there is a factor 2 between frame sample rate and output sample rate\r\n        // multiply frequency by 2 (see table below, equivalent to substract 3)\r\n        adtsExtensionSamplingIndex = samplingFrequencyIndex - 3;\r\n    } else {\r\n        // if (manifest codec is AAC) AND (frequency less than 24kHz AND nb channel is 1) OR (manifest codec not specified and mono audio)\r\n        // Chrome fails to play back with low frequency AAC LC mono when initialized with HE-AAC.  This is not a problem with stereo.\r\n        if (channelCount === 1) {\r\n            audioObjectType = 2;\r\n            config = new Array(2);\r\n        }\r\n        adtsExtensionSamplingIndex = samplingFrequencyIndex;\r\n    }\r\n    /* \r\n        refer to http://wiki.multimedia.cx/index.php?title=MPEG-4_Audio#Audio_Specific_Config ISO 14496-3 (AAC).pdf \r\n            - Table 1.13 — Syntax of AudioSpecificConfig()\r\n          Audio Profile / Audio Object Type\r\n          0: Null\r\n          1: AAC Main\r\n          2: AAC LC (Low Complexity)\r\n          3: AAC SSR (Scalable Sample Rate)\r\n          4: AAC LTP (Long Term Prediction)\r\n          5: SBR (Spectral Band Replication)\r\n          6: AAC Scalable\r\n\r\n          Channel Configurations\r\n          These are the channel configurations:\r\n          0: Defined in AOT Specifc Config\r\n          1: 1 channel: front-center\r\n          2: 2 channels: front-left, front-right\r\n        */\r\n    // audioObjectType = profile => profile, the MPEG-4 Audio Object Type minus 1\r\n    config[0] = audioObjectType << 3;\r\n    // samplingFrequencyIndex\r\n    config[0] |= (samplingFrequencyIndex & 0x0e) >> 1;\r\n    config[1] |= (samplingFrequencyIndex & 0x01) << 7;\r\n    // channelConfiguration\r\n    config[1] |= channelCount << 3;\r\n    if (audioObjectType === 5) {\r\n        // adtsExtensionSamplingIndex\r\n        config[1] |= (adtsExtensionSamplingIndex & 0x0e) >> 1;\r\n        config[2] = (adtsExtensionSamplingIndex & 0x01) << 7;\r\n        // audioObjectType (force to 2, chrome is checking that object type is less than 5 ???\r\n        //    https://chromium.googlesource.com/chromium/src.git/+/master/media/formats/mp4/aac.cc\r\n        config[2] |= 2 << 2;\r\n        config[3] = 0;\r\n    }\r\n\r\n    return {\r\n        config: config,\r\n        sampleRate: samplingRates[samplingFrequencyIndex],\r\n        channelCount: channelCount,\r\n        codec: 'mp4a.40.' + audioObjectType,\r\n        realCodec: 'mp4a.40.' + realAudioObjectType\r\n    };\r\n};\r\n","/**\r\n * @file: created at Saturday, 9th May 2020 11:13:19 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\n// The AudioSpecificConfig is explained in ISO 14496-3.\r\nexport interface AudioSpecificConfig {\r\n    audioObjectType: number;\r\n    sampleCount: number;\r\n    channelConfiguration: number;\r\n    sampleRate: number;\r\n    samplingFrequencyIndex: number;\r\n    // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\r\n}\r\n\r\nexport interface AACFrame extends Omit<AudioSpecificConfig, 'channelConfiguration'> {\r\n    pts: number;\r\n    dts: number;\r\n    data: Uint8Array;\r\n    channelCount: number; // equal to channelConfiguration\r\n    sampleSize: number;\r\n}\r\n\r\nexport const AAC_SAMPLING_FREQUENCIES = [\r\n    96000,\r\n    88200,\r\n    64000,\r\n    48000,\r\n    44100,\r\n    32000,\r\n    24000,\r\n    22050,\r\n    16000,\r\n    12000,\r\n    11025,\r\n    8000,\r\n    7350\r\n];\r\n","/**\r\n * @file: adts.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\n/**\r\n * ADTS codec\r\n * Wiki Refer: https://wiki.multimedia.cx/index.php?title=ADTS\r\n */\r\nimport EventEmitter from '../util/event-emitter';\r\nimport { AACFrame, AAC_SAMPLING_FREQUENCIES } from './aac/aac';\r\n\r\nexport type AACCodecData = {\r\n    pts: number;\r\n    dts: number;\r\n    payload: Uint8Array;\r\n};\r\n\r\n/**\r\n * @extends EventEmitter\r\n */\r\nclass ADTSCodec extends EventEmitter {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    push(data: AACCodecData) {\r\n        let { pts, dts, payload } = data;\r\n        let data_byte = payload;\r\n        let i = 0,\r\n            frameNum = 0,\r\n            frameLength,\r\n            protectionSkipBytes,\r\n            frameEnd,\r\n            sampleCount,\r\n            adtsFrameDuration;\r\n\r\n        while (i + 5 < data_byte.length) {\r\n            // Look for the start of an ADTS header..\r\n            if (data_byte[i] !== 0xff || (data_byte[i + 1] & 0xf6) !== 0xf0) {\r\n                // If a valid header was not found,  jump one forward and attempt to\r\n                // find a valid ADTS header starting at the next byte\r\n                i++;\r\n                continue;\r\n            }\r\n\r\n            // The protection skip bit tells us if we have 2 bytes of CRC data at the\r\n            // end of the ADTS header\r\n            protectionSkipBytes = (~data_byte[i + 1] & 0x01) * 2;\r\n\r\n            // Frame length is a 13 bit integer starting 16 bits from the\r\n            // end of the sync sequence\r\n            frameLength =\r\n                ((data_byte[i + 3] & 0x03) << 11) | (data_byte[i + 4] << 3) | ((data_byte[i + 5] & 0xe0) >> 5);\r\n\r\n            sampleCount = ((data_byte[i + 6] & 0x03) + 1) * 1024;\r\n            adtsFrameDuration = (sampleCount * 90000) / AAC_SAMPLING_FREQUENCIES[(data_byte[i + 2] & 0x3c) >>> 2];\r\n\r\n            frameEnd = i + frameLength;\r\n\r\n            // If we don't have enough data to actually finish this ADTS frame, return\r\n            // and wait for more data\r\n            if (data_byte.byteLength < frameEnd) {\r\n                return;\r\n            }\r\n\r\n            let aacFrame: AACFrame = {\r\n                pts: pts + frameNum * adtsFrameDuration,\r\n                dts: dts + frameNum * adtsFrameDuration,\r\n                sampleCount: sampleCount,\r\n                audioObjectType: ((data_byte[i + 2] >>> 6) & 0x03) + 1,\r\n                channelCount: ((data_byte[i + 2] & 1) << 2) | ((data_byte[i + 3] & 0xc0) >>> 6),\r\n                sampleRate: AAC_SAMPLING_FREQUENCIES[(data_byte[i + 2] & 0x3c) >>> 2],\r\n                samplingFrequencyIndex: (data_byte[i + 2] & 0x3c) >>> 2,\r\n                // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\r\n                sampleSize: 16,\r\n                data: data_byte.subarray(i + 7 + protectionSkipBytes, frameEnd)\r\n            };\r\n            // Otherwise, deliver the complete AAC frame\r\n            this.emit('frame', aacFrame);\r\n\r\n            // If the data_byte is empty, clear it and return\r\n            if (data_byte.byteLength === frameEnd) {\r\n                data_byte = undefined;\r\n\r\n                this.emit('done');\r\n                return;\r\n            }\r\n\r\n            frameNum++;\r\n\r\n            // Remove the finished frame from the data_byte and start the process again\r\n            data_byte = data_byte.subarray(frameEnd);\r\n        }\r\n    }\r\n}\r\n\r\nexport default ADTSCodec;\r\n","/**\r\n * @file: adts.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\n/**\r\n * ADTS(Audio Data Transport Stream) Stream.\r\n */\r\nimport { AACFrame } from '../../codec/aac/aac';\r\nimport getAudioConfig from '../../codec/aac/aac-config';\r\nimport ADTSCodec from '../../codec/adts';\r\nimport { StreamTypes } from '../../enum/stream-types';\r\nimport Stream from '../../util/stream';\r\nimport { PSI } from '../psi';\r\nimport { AACFrameVector, PESStreamEmitData } from '../types/pipeline';\r\n\r\nclass ADTSStream extends Stream {\r\n    private PSI: PSI;\r\n    private trackId?: number;\r\n    private codec: ADTSCodec;\r\n    private frames: AACFrameVector;\r\n\r\n    constructor(psi: PSI) {\r\n        super();\r\n\r\n        this.PSI = psi;\r\n        this.trackId = null;\r\n\r\n        /** @private {ADTSCodec} */\r\n        this.codec = new ADTSCodec();\r\n\r\n        this.codec.on('frame', (frame: AACFrame) => {\r\n            this.frames.push(frame);\r\n            this.frames.byteLength += frame.data.byteLength;\r\n            this.frames.trackId = this.trackId;\r\n        });\r\n\r\n        this._newFrames();\r\n    }\r\n\r\n    push(data: PESStreamEmitData) {\r\n        if (data.stream_type === StreamTypes.ADTS) {\r\n            this.trackId = data.pid;\r\n\r\n            this.codec.push({\r\n                dts: data.pes.DTS,\r\n                pts: data.pes.PTS,\r\n                payload: data.pes.data_byte\r\n            });\r\n        }\r\n    }\r\n\r\n    flush() {\r\n        if (this.frames.length > 0) {\r\n            let count = this.frames.length;\r\n            let firstFrame = this.frames[0];\r\n            let lastFrame = this.frames[count - 1];\r\n            let lastDuration = (lastFrame.sampleRate * lastFrame.sampleCount) / 90000;\r\n\r\n            this.frames.firstDTS = firstFrame.dts;\r\n            this.frames.firstPTS = firstFrame.pts;\r\n\r\n            if (count === 1) {\r\n                this.frames.duration = lastDuration;\r\n            } else {\r\n                this.frames.duration = lastDuration + (lastFrame.pts - firstFrame.pts);\r\n            }\r\n\r\n            // To prevent information mismatch leading to next pipeline decoding errors\r\n            // Every audio frame list assembly needs to update track meta.\r\n            this._updateTrackMeta(firstFrame);\r\n\r\n            this.emit('data', this.frames);\r\n\r\n            this.reset();\r\n            this.emit('done');\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this.trackId = null;\r\n        this._newFrames();\r\n    }\r\n\r\n    _newFrames() {\r\n        this.frames = []; // aac frames\r\n        this.frames.type = 'audio';\r\n        this.frames.byteLength = 0;\r\n        this.frames.duration = 0;\r\n        this.frames.firstDTS = 0;\r\n        this.frames.firstPTS = 0;\r\n    }\r\n\r\n    /**\r\n     * @param {Object} frame\r\n     */\r\n    _updateTrackMeta(frame: AACFrame) {\r\n        let track = this.PSI.findTrack(this.trackId);\r\n        let config = getAudioConfig(frame.audioObjectType, frame.samplingFrequencyIndex, frame.channelCount);\r\n        track.config = config.config;\r\n        track.sampleRate = config.sampleRate;\r\n        track.inputTimeScale = track.inputTimeScale || track.timescale;\r\n        track.timescale = config.sampleRate;\r\n        track.channelCount = config.channelCount;\r\n        track.codec = config.codec;\r\n        track.realCodec = config.realCodec;\r\n        track.isAAC = true;\r\n    }\r\n}\r\n\r\nexport default ADTSStream;\r\n","/**\r\n * @file: dv.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\n/**\r\n * Bit buffer reader like DataView.\r\n */\r\n\r\nfunction read(buf: ArrayBuffer | Uint8Array): DataView {\r\n    let byteOffset = 0;\r\n\r\n    if (ArrayBuffer.isView(buf)) {\r\n        byteOffset = buf.byteOffset;\r\n        buf = buf.buffer;\r\n    }\r\n\r\n    return new DataView(buf, byteOffset);\r\n}\r\n\r\nclass DataViewReader {\r\n    constructor() {}\r\n\r\n    /**\r\n     * Gets an unsigned 8-bit integer (unsigned byte).\r\n     * @param buffer\r\n     * @param byteOffset    The offset, in byte, from the start of the view where to read the data.\r\n     * @returns {number}    An unsigned 8-bit integer number.\r\n     */\r\n    readUint8(buffer: ArrayBuffer | Uint8Array, byteOffset: number): number {\r\n        return read(buffer).getUint8(byteOffset);\r\n    }\r\n\r\n    /**\r\n     * Gets an unsigned 16-bit integer (unsigned long).\r\n     * @param buffer\r\n     * @param byteOffset     The offset, in byte, from the start of the view where to read the data.\r\n     * @param littleEndian   Indicates whether the 16-bit int is stored in little- or big-endian format.\r\n     * @returns {number}     An unsigned 16-bit integer number.\r\n     */\r\n    readUint16(buffer: ArrayBuffer | Uint8Array, byteOffset, littleEndian: boolean = false): number {\r\n        return read(buffer).getUint16(byteOffset, littleEndian);\r\n    }\r\n\r\n    /**\r\n     * Gets an unsigned 32-bit integer (unsigned long).\r\n     * @param buffer\r\n     * @param byteOffset        The offset, in byte, from the start of the view where to read the data.\r\n     * @param littleEndian      Indicates whether the 32-bit int is stored in little- or big-endian format.\r\n     * @returns {number}        An unsigned 32-bit integer number.\r\n     */\r\n    readUint32(buffer: ArrayBuffer | Uint8Array, byteOffset: number, littleEndian: boolean = false): number {\r\n        return read(buffer).getUint32(byteOffset, littleEndian);\r\n    }\r\n}\r\n\r\nexport default DataViewReader;\r\n","/**\r\n * @file: ep3b.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\n/**\r\n * discard the emulation_prevention_three_byte\r\n * @param data\r\n */\r\nexport default function discardEP3B(data: Uint8Array): Uint8Array {\r\n    let length = data.byteLength,\r\n        emulationPreventionBytesPositions = [],\r\n        i = 1,\r\n        newLength: number,\r\n        newData = new Uint8Array(0);\r\n\r\n    // Find all `Emulation Prevention Bytes`\r\n    while (i < length - 2) {\r\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\r\n            emulationPreventionBytesPositions.push(i + 2);\r\n            i += 2;\r\n        } else {\r\n            i++;\r\n        }\r\n    }\r\n\r\n    // If no Emulation Prevention Bytes were found just return the original\r\n    // array\r\n    if (emulationPreventionBytesPositions.length === 0) {\r\n        return data;\r\n    }\r\n\r\n    // Create a new array to hold the NAL unit data\r\n    newLength = length - emulationPreventionBytesPositions.length;\r\n\r\n    try {\r\n        newData = new Uint8Array(newLength);\r\n    } catch (e) {\r\n        throw `epsb alloc mem error ${newLength}`;\r\n    }\r\n    let sourceIndex = 0;\r\n\r\n    for (i = 0; i < newLength; sourceIndex++, i++) {\r\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\r\n            // Skip this byte\r\n            sourceIndex++;\r\n            // Remove this position index\r\n            emulationPreventionBytesPositions.shift();\r\n        }\r\n        newData[i] = data[sourceIndex];\r\n    }\r\n\r\n    return newData;\r\n}\r\n","/**\r\n * @file: exp-golumb.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\n/**\r\n * exp golumb algorithm.\r\n * codeNum = 2leadingZeroBits – 1 + read_bits( leadingZeroBits )\r\n * @see https://en.wikipedia.org/wiki/Exponential-Golomb_coding\r\n */\r\n\r\n/**\r\n * read n bit.\r\n * @param buffer\r\n * @param bitOffset\r\n * @param length\r\n * @private\r\n */\r\nexport function readBit(buffer: Uint8Array, bitOffset: number = 0, length: number = 1): number {\r\n    let startByte = 0;\r\n    let startByteBitPos = 0;\r\n    let val = 0;\r\n    let bitStr = '',\r\n        bitVal = 0;\r\n\r\n    for (let j = bitOffset; j < bitOffset + length; j++) {\r\n        startByte = Math.floor(j / 8);\r\n        startByteBitPos = 7 - (j % 8);\r\n        bitVal = (buffer[startByte] >> startByteBitPos) & 0x01;\r\n\r\n        bitStr += bitVal;\r\n    }\r\n\r\n    val = parseInt(bitStr, 2);\r\n\r\n    return val;\r\n}\r\n\r\n/**\r\n * read 1 byte.\r\n * @param buffer\r\n * @param bitOffset\r\n */\r\nexport function readByte(buffer: Uint8Array, bitOffset: number = 0) {\r\n    return readBit(buffer, bitOffset, 8);\r\n}\r\n\r\n/**\r\n * Unsigned Integer Exp-Golomb Coded.\r\n * @param buffer\r\n * @param bitOffset\r\n */\r\nexport function readUEV(buffer: Uint8Array, bitOffset: number = 0) {\r\n    let leadingZeros = [];\r\n    let bitLength = buffer.byteLength * 8;\r\n    let readBit1 = false;\r\n    let startByte = 0;\r\n    let startByteBitPos = 0;\r\n    let bitVal = 0;\r\n    let value = '';\r\n\r\n    // 1. 计算 leadingZeros\r\n    for (let i = bitOffset; i < bitLength; i++) {\r\n        startByte = Math.floor(i / 8);\r\n        startByteBitPos = 7 - (i % 8);\r\n\r\n        bitVal = (buffer[startByte] >> startByteBitPos) & 0x01;\r\n\r\n        if (!readBit1) {\r\n            if (bitVal === 0) {\r\n                leadingZeros.push(0);\r\n            } else {\r\n                readBit1 = true;\r\n                bitOffset = i;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    let codeNumLength = leadingZeros.length + 1;\r\n\r\n    // 2. 计算有效位数值\r\n    for (let j = bitOffset; j < bitOffset + codeNumLength; j++) {\r\n        startByte = Math.floor(j / 8);\r\n        startByteBitPos = 7 - (j % 8);\r\n        bitVal = (buffer[startByte] >> startByteBitPos) & 0x01;\r\n\r\n        value += bitVal;\r\n    }\r\n\r\n    return {\r\n        bitLength: leadingZeros.length + codeNumLength,\r\n        value: parseInt(value, 2) - 1\r\n    };\r\n}\r\n\r\n/**\r\n * Signed Integer Exp-Golomb Coded.\r\n * @param buffer\r\n * @param bitOffset\r\n */\r\nexport function readSEV(buffer: Uint8Array, bitOffset: number = 0) {\r\n    let uev = readUEV(buffer, bitOffset);\r\n    let codeNum = uev.value;\r\n\r\n    let signedValue = Math.pow(-1, codeNum + 1) * Math.ceil(codeNum / 2);\r\n\r\n    return {\r\n        bitLength: uev.bitLength,\r\n        value: signedValue\r\n    };\r\n}\r\n\r\nexport default {\r\n    readUEV,\r\n    readSEV,\r\n    readBit,\r\n    readByte\r\n};\r\n","/**\r\n * @file: sps.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\nimport ExpGolomb from '../../util/exp-golumb';\r\n\r\nlet bitOffset = 0;\r\n\r\nexport type SPSProps = {\r\n    profile_idc: number;\r\n    profile_compatibility: number;\r\n    level_idc: number;\r\n    sps_id: number;\r\n    log2_max_frame_num_minus4: number;\r\n    pic_order_cnt_type: number;\r\n    log2_max_pic_order_cnt_lsb_minus4: number;\r\n\r\n    width: number;\r\n    height: number;\r\n\r\n    pixelRatio: [number, number];\r\n    payload: Uint8Array;\r\n\r\n    video_format: number;\r\n\r\n    fps: number;\r\n    fixedFPS: boolean;\r\n};\r\n\r\n/**\r\n * 7.3.2.1.1.1 Scaling list syntax\r\n * @param scalingList\r\n * @param size\r\n */\r\nfunction scaling_list(scalingList, size) {\r\n    let lastScale = 8;\r\n    let nextScale = 8;\r\n    let delta_scale;\r\n\r\n    for (var j = 0; j < size; j++) {\r\n        if (nextScale != 0) {\r\n            delta_scale = ExpGolomb.readUEV(scalingList, bitOffset);\r\n            bitOffset += delta_scale.bitLength;\r\n\r\n            nextScale = (lastScale + delta_scale.value + 256) % 256;\r\n        }\r\n\r\n        lastScale = scalingList[j];\r\n    }\r\n}\r\n\r\n/**\r\n * decode (SPS)Sequence parameter set\r\n * @param payload\r\n */\r\nexport function decodeSPS(payload: Uint8Array): SPSProps {\r\n    bitOffset = 0;\r\n\r\n    let profile_idc = payload[0];\r\n    let profile_compatibility = payload[1];\r\n    let level_idc = payload[2];\r\n    let golombBuffer = payload.subarray(3);\r\n    let //separate_colour_plane_flag = 0,\r\n        // qpprime_y_zero_transform_bypass_flag = 0,\r\n        seq_scaling_matrix_present_flag = 0;\r\n    let lmpoclmUEV;\r\n    let //delta_pic_order_always_zero_flag = 0,\r\n        ofnrpSEV,\r\n        ofttbfSEV,\r\n        nrfipoccUEV;\r\n    let pixelRatio: [number, number] = [1, 1],\r\n        pixelScale = 1;\r\n    let video_format: number;\r\n    let fps = 0,\r\n        num_units_in_tick: number,\r\n        time_scale: number,\r\n        fixed_frame_rate_flag: boolean = true;\r\n\r\n    // seq_parameter_set_id\r\n    let spsUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\r\n    bitOffset += spsUEV.bitLength;\r\n\r\n    if (\r\n        profile_idc == 100 ||\r\n        profile_idc == 110 ||\r\n        profile_idc == 122 ||\r\n        profile_idc == 244 ||\r\n        profile_idc == 44 ||\r\n        profile_idc == 83 ||\r\n        profile_idc == 86 ||\r\n        profile_idc == 118 ||\r\n        profile_idc == 128\r\n    ) {\r\n        // chroma_format_idc\r\n        let chromaFIUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\r\n        bitOffset += chromaFIUEV.bitLength;\r\n\r\n        if (chromaFIUEV.value == 3) {\r\n            // separate_colour_plane_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\r\n            bitOffset += 1;\r\n        }\r\n\r\n        // bit_depth_luma_minus8\r\n        let bitdlmUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\r\n        bitOffset += bitdlmUEV.bitLength;\r\n\r\n        // bit_depth_chroma_minus8\r\n        let bitdcmUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\r\n        bitOffset += bitdcmUEV.bitLength;\r\n\r\n        // qpprime_y_zero_transform_bypass_flag\r\n        // qpprime_y_zero_transform_bypass_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\r\n        bitOffset += 1;\r\n\r\n        // seq_scaling_matrix_present_flag\r\n        seq_scaling_matrix_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\r\n        bitOffset += 1;\r\n\r\n        if (seq_scaling_matrix_present_flag) {\r\n            for (let i = 0; i < (chromaFIUEV.value != 3 ? 8 : 12); i++) {\r\n                let seq_scaling_list_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\r\n                bitOffset += 1;\r\n\r\n                if (seq_scaling_list_present_flag) {\r\n                    if (i < 6) {\r\n                        scaling_list(golombBuffer, 16);\r\n                    } else {\r\n                        scaling_list(golombBuffer, 64);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // log2_max_frame_num_minus4\r\n    let lmfnmUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\r\n    bitOffset += lmfnmUEV.bitLength;\r\n\r\n    // pic_order_cnt_type\r\n    let poctUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\r\n    let pic_order_cnt_type = poctUEV.value;\r\n    bitOffset += poctUEV.bitLength;\r\n\r\n    if (pic_order_cnt_type === 0) {\r\n        // log2_max_pic_order_cnt_lsb_minus4\r\n        lmpoclmUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\r\n        bitOffset += lmpoclmUEV.bitLength;\r\n    } else if (pic_order_cnt_type === 1) {\r\n        // delta_pic_order_always_zero_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\r\n        bitOffset += 1;\r\n\r\n        // offset_for_non_ref_pic\r\n        ofnrpSEV = ExpGolomb.readSEV(golombBuffer, bitOffset);\r\n        bitOffset += ofnrpSEV.bitLength;\r\n\r\n        // offset_for_top_to_bottom_field\r\n        ofttbfSEV = ExpGolomb.readSEV(golombBuffer, bitOffset);\r\n        bitOffset += ofttbfSEV.bitLength;\r\n\r\n        // num_ref_frames_in_pic_order_cnt_cycle\r\n        nrfipoccUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\r\n        bitOffset += nrfipoccUEV.bitLength;\r\n\r\n        // let offset_for_ref_frames = [];\r\n        for (let i = 0, item; i < nrfipoccUEV.value; i++) {\r\n            item = ExpGolomb.readSEV(golombBuffer, bitOffset);\r\n            bitOffset += item.bitLength;\r\n\r\n            // offset_for_ref_frames.push(item);\r\n        }\r\n    }\r\n\r\n    // max_num_ref_frames\r\n    // 指定参考帧队列可能达到的最大长度，解码器依照这个句法元素的值开辟存储区，这个存储区用于存放已解码的参考帧，\r\n    // H.264 规定最多可用 16 个参考帧，本句法元素的值最大为 16。值得注意的是这个长度以帧为单位，如果在场模式下，应该相应地扩展一倍\r\n    let mnrfUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\r\n    bitOffset += mnrfUEV.bitLength;\r\n\r\n    // gaps_in_frame_num_value_allowed_flag\r\n    // let gaps_in_frame_num_value_allowed_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\r\n    bitOffset += 1;\r\n\r\n    // pic_width_in_mbs_minus1\r\n    let picWidthUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\r\n    bitOffset += picWidthUEV.bitLength;\r\n\r\n    // pic_height_in_map_units_minus1\r\n    let picHeightUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\r\n    bitOffset += picHeightUEV.bitLength;\r\n\r\n    // frame_mbs_only_flag\r\n    // 本句法元素等于 1 时, 表示本序列中所有图像的编码模式都是帧编码；\r\n    // 本句法元素等于 0 时, 表示本序列中图像的编码模式可能是帧，也可能是场或帧场自适应，某个图像具体是哪一种要由其他句法元素决定。\r\n    let frame_mbs_only_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\r\n    bitOffset += 1;\r\n\r\n    if (!frame_mbs_only_flag) {\r\n        // mb_adaptive_frame_field_flag (Unused, Unnecessary to read it.)\r\n        // ExpGolomb.readBit(golombBuffer, bitOffset);\r\n        bitOffset += 1;\r\n    }\r\n\r\n    // direct_8x8_inference_flag,  用于指明 B 片的直接 和 skip 模式下运动矢量的预测方法\r\n    // let direct_8x8_inference_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\r\n    bitOffset += 1;\r\n\r\n    // frame_cropping_flag, 用于指明解码器是否要将图像裁剪后输出，如果是的话，后面紧跟着的四个句法元素分别指出左右、上下裁剪的宽度\r\n    let frame_cropping_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\r\n    bitOffset += 1;\r\n\r\n    let cropLeft = 0,\r\n        cropRight = 0,\r\n        cropTop = 0,\r\n        cropBottom = 0;\r\n    if (frame_cropping_flag) {\r\n        let fcloUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\r\n        bitOffset += fcloUEV.bitLength;\r\n        cropLeft = fcloUEV.value;\r\n\r\n        let fcroUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\r\n        bitOffset += fcroUEV.bitLength;\r\n        cropRight = fcroUEV.value;\r\n\r\n        let fctoUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\r\n        bitOffset += fctoUEV.bitLength;\r\n        cropTop = fctoUEV.value;\r\n\r\n        let fcboUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\r\n        bitOffset += fcboUEV.bitLength;\r\n        cropBottom = fcboUEV.value;\r\n    }\r\n\r\n    // vui_parameters_present_flag\r\n    let vui_parameters_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\r\n    bitOffset += 1;\r\n\r\n    if (vui_parameters_present_flag) {\r\n        // Annex E, E.1.1 VUI parameters syntax\r\n        // VUI 用以表征视频格式等额外信息\r\n        // aspect_ratio, video_format\r\n\r\n        let aspect_ratio_info_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\r\n        bitOffset += 1;\r\n\r\n        if (aspect_ratio_info_present_flag) {\r\n            const aspectRatioIdc = ExpGolomb.readByte(golombBuffer, bitOffset);\r\n            bitOffset += 8;\r\n\r\n            switch (aspectRatioIdc) {\r\n                case 1:\r\n                    pixelRatio = [1, 1];\r\n                    break;\r\n                case 2:\r\n                    pixelRatio = [12, 11];\r\n                    break;\r\n                case 3:\r\n                    pixelRatio = [10, 11];\r\n                    break;\r\n                case 4:\r\n                    pixelRatio = [16, 11];\r\n                    break;\r\n                case 5:\r\n                    pixelRatio = [40, 33];\r\n                    break;\r\n                case 6:\r\n                    pixelRatio = [24, 11];\r\n                    break;\r\n                case 7:\r\n                    pixelRatio = [20, 11];\r\n                    break;\r\n                case 8:\r\n                    pixelRatio = [32, 11];\r\n                    break;\r\n                case 9:\r\n                    pixelRatio = [80, 33];\r\n                    break;\r\n                case 10:\r\n                    pixelRatio = [18, 11];\r\n                    break;\r\n                case 11:\r\n                    pixelRatio = [15, 11];\r\n                    break;\r\n                case 12:\r\n                    pixelRatio = [64, 33];\r\n                    break;\r\n                case 13:\r\n                    pixelRatio = [160, 99];\r\n                    break;\r\n                case 14:\r\n                    pixelRatio = [4, 3];\r\n                    break;\r\n                case 15:\r\n                    pixelRatio = [3, 2];\r\n                    break;\r\n                case 16:\r\n                    pixelRatio = [2, 1];\r\n                    break;\r\n                case 255: {\r\n                    let width0 = ExpGolomb.readByte(golombBuffer, bitOffset);\r\n                    bitOffset += 8;\r\n                    let width1 = ExpGolomb.readByte(golombBuffer, bitOffset);\r\n                    bitOffset += 8;\r\n                    let height0 = ExpGolomb.readByte(golombBuffer, bitOffset);\r\n                    bitOffset += 8;\r\n                    let height1 = ExpGolomb.readByte(golombBuffer, bitOffset);\r\n                    bitOffset += 8;\r\n                    pixelRatio = [(width0 << 8) | width1, (height0 << 8) | height1];\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (pixelRatio) {\r\n                pixelScale = pixelRatio[0] / pixelRatio[1];\r\n            }\r\n\r\n            if (aspectRatioIdc === 255) {\r\n                // sar_width\r\n                bitOffset += 16;\r\n                // sar_height\r\n                bitOffset += 16;\r\n            }\r\n        }\r\n\r\n        let overscan_info_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\r\n        bitOffset += 1;\r\n\r\n        if (overscan_info_present_flag) {\r\n            bitOffset += 1;\r\n            // overscan_appropriate_flag;\r\n        }\r\n\r\n        let video_signal_type_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\r\n        bitOffset += 1;\r\n\r\n        if (video_signal_type_present_flag) {\r\n            /*\r\n                Table E-2 – Meaning of video_format\r\n                video_format    Meaning\r\n                0               Component\r\n                1               PAL\r\n                2               NTSC\r\n                3               SECAM\r\n                4               MAC\r\n                5               Unspecified video format\r\n                6               Reserved\r\n                7               Reserved\r\n             */\r\n            video_format = ExpGolomb.readBit(golombBuffer, bitOffset, 3);\r\n            bitOffset += 3;\r\n\r\n            // switch (video_format) {\r\n            // }\r\n\r\n            // let video_full_range_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\r\n            bitOffset += 1;\r\n\r\n            let colour_description_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\r\n            bitOffset += 1;\r\n\r\n            if (colour_description_present_flag) {\r\n                // colour_primaries            u(8)\r\n                // transfer_characteristics    u(8)\r\n                // matrix_coefficients         u(8)\r\n                bitOffset += 24;\r\n            }\r\n        }\r\n\r\n        let chroma_loc_info_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\r\n        bitOffset += 1;\r\n\r\n        if (chroma_loc_info_present_flag) {\r\n            let chroma_sample_loc_type_top_field = ExpGolomb.readUEV(golombBuffer, bitOffset);\r\n            bitOffset += chroma_sample_loc_type_top_field.bitLength;\r\n\r\n            let chroma_sample_loc_type_bottom_field = ExpGolomb.readUEV(golombBuffer, bitOffset);\r\n            bitOffset += chroma_sample_loc_type_bottom_field.bitLength;\r\n        }\r\n\r\n        let timing_info_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\r\n        bitOffset += 1;\r\n\r\n        if (timing_info_present_flag) {\r\n            num_units_in_tick = ExpGolomb.readBit(golombBuffer, bitOffset, 32);\r\n            bitOffset += 32;\r\n\r\n            time_scale = ExpGolomb.readBit(golombBuffer, bitOffset, 32);\r\n            bitOffset += 32;\r\n\r\n            fixed_frame_rate_flag = !!ExpGolomb.readBit(golombBuffer, bitOffset);\r\n            bitOffset += 1;\r\n\r\n            fps = time_scale / (num_units_in_tick * 2);\r\n        }\r\n\r\n        // There is left VUI other's parameters to be decoded ...\r\n        // For now, it is useless, so don't pass them.\r\n    }\r\n\r\n    // let FrameHeightInMbs = (2 - frame_mbs_only_flag) * (picHeightUEV.value + 1);\r\n    // PicSizeInMapUnits = PicWidthInMbs * PicHeightInMapUnits\r\n\r\n    return {\r\n        payload: golombBuffer,\r\n\r\n        profile_idc,\r\n        profile_compatibility,\r\n        level_idc,\r\n        sps_id: spsUEV.value, // ue(v)\r\n        log2_max_frame_num_minus4: poctUEV.value, // ue(v)\r\n        pic_order_cnt_type, // ue(v)\r\n        log2_max_pic_order_cnt_lsb_minus4: lmpoclmUEV ? lmpoclmUEV.value : 0, // ue(v)\r\n\r\n        width: Math.ceil(((picWidthUEV.value + 1) * 16 - cropLeft * 2 - cropRight * 2) * pixelScale), // PicWidthInSamplesL = PicWidthInMbs * 16\r\n        height: (2 - frame_mbs_only_flag) * (picHeightUEV.value + 1) * 16 - cropTop * 2 - cropBottom * 2,\r\n\r\n        pixelRatio,\r\n        video_format,\r\n\r\n        fps,\r\n        fixedFPS: fixed_frame_rate_flag\r\n    };\r\n}\r\n","/**\r\n * @file: pps.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\nimport ExpGolomb from '../../util/exp-golumb';\r\n\r\nexport type PPSProps = {\r\n    sliceGroupNum: number;\r\n};\r\n\r\n/**\r\n * decode (PPS)Picture parameter set\r\n * @param payload\r\n */\r\nexport function decodePPS(payload: Uint8Array): PPSProps {\r\n    let bitOffset = 0;\r\n\r\n    let golombBuffer = payload;\r\n    let //slice_group_change_direction_flag = 0,\r\n        sliceGroupIds = [];\r\n    let sgcdfUEV, picSizeUEV;\r\n    let i = 0;\r\n\r\n    // pic_parameter_set_id\r\n    let ppsUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\r\n    bitOffset += ppsUEV.bitLength;\r\n\r\n    // seq_parameter_set_id\r\n    let spsUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\r\n    bitOffset += spsUEV.bitLength;\r\n\r\n    // entropy_coding_mode_flag\r\n    // 0: Exp-Golomb coded, see subclause 9.1 or CAVLC, see subclause 9.2\r\n    // 1: CABAC, see subclause 9.3\r\n    // let entropy_coding_mode_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\r\n    bitOffset += 1;\r\n\r\n    // bottom_field_pic_order_in_frame_present_flag\r\n    // let bottom_field_pic_order_in_frame_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\r\n    bitOffset += 1;\r\n\r\n    // num_slice_groups_minus1,\r\n    let sliceGroupUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\r\n    bitOffset += sliceGroupUEV.bitLength;\r\n\r\n    if (sliceGroupUEV.value > 0) {\r\n        // slice_group_map_type\r\n        let sgmtUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\r\n        bitOffset += sgmtUEV.bitLength;\r\n\r\n        let iGroup = 0,\r\n            itemUev;\r\n\r\n        switch (sgmtUEV.value) {\r\n            case 0:\r\n                for (iGroup = 0; iGroup <= sgmtUEV.value; iGroup++) {\r\n                    // run_length_minus1\r\n                    itemUev = ExpGolomb.readUEV(golombBuffer, bitOffset);\r\n                    bitOffset += itemUev.bitLength;\r\n                }\r\n                break;\r\n            case 2:\r\n                for (iGroup = 0; iGroup <= sgmtUEV.value; iGroup++) {\r\n                    // top_left\r\n                    itemUev = ExpGolomb.readUEV(golombBuffer, bitOffset);\r\n                    bitOffset += itemUev.bitLength;\r\n                    // bottom_right\r\n                    itemUev = ExpGolomb.readUEV(golombBuffer, bitOffset);\r\n                    bitOffset += itemUev.bitLength;\r\n                }\r\n                break;\r\n            case 3:\r\n            case 4:\r\n            case 5:\r\n                // slice_group_change_direction_flag\r\n                // slice_group_change_direction_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\r\n                bitOffset += 1;\r\n                // slice_group_change_rate_minus1\r\n                sgcdfUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\r\n                bitOffset += sgcdfUEV.bitLength;\r\n                break;\r\n            case 6:\r\n                {\r\n                    // pic_size_in_map_units_minus1\r\n                    picSizeUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\r\n                    bitOffset += picSizeUEV.bitLength;\r\n\r\n                    let length = Math.ceil(Math.log2(sliceGroupUEV.value + 1));\r\n                    for (i = 0; i <= picSizeUEV.value; i++) {\r\n                        // pic_size_in_map_units_minus1\r\n                        sliceGroupIds.push(ExpGolomb.readBit(golombBuffer, bitOffset, length));\r\n                        bitOffset += length;\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    // num_ref_idx_l0_default_active_minus1\r\n    let nril0dcmUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\r\n    bitOffset += nril0dcmUEV.bitLength;\r\n\r\n    // num_ref_idx_l1_default_active_minus1\r\n    let nril1dcmUEV = ExpGolomb.readUEV(golombBuffer, bitOffset);\r\n    bitOffset += nril1dcmUEV.bitLength;\r\n\r\n    // weighted_pred_flag\r\n    // let weighted_pred_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\r\n    bitOffset += 1;\r\n\r\n    // weighted_bipred_idc\r\n    // let weighted_bipred_idc = ExpGolomb.readBit(golombBuffer, bitOffset, 2);\r\n    bitOffset += 1;\r\n\r\n    // pic_init_qp_minus26\r\n    let piqpSEV = ExpGolomb.readSEV(golombBuffer, bitOffset);\r\n    bitOffset += piqpSEV.bitLength;\r\n    // pic_init_qs_minus26\r\n    let piqsSEV = ExpGolomb.readSEV(golombBuffer, bitOffset);\r\n    bitOffset += piqsSEV.bitLength;\r\n    // chroma_qp_index_offset\r\n    let cqioSEV = ExpGolomb.readSEV(golombBuffer, bitOffset);\r\n    bitOffset += cqioSEV.bitLength;\r\n\r\n    // let deblocking_filter_control_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\r\n    bitOffset += 1;\r\n    // let constrained_intra_pred_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\r\n    bitOffset += 1;\r\n    // let redundant_pic_cnt_present_flag = ExpGolomb.readBit(golombBuffer, bitOffset);\r\n    bitOffset += 1;\r\n\r\n    // if( more_rbsp_data( ) ) {\r\n    //     // Unused data...\r\n    // }\r\n\r\n    return {\r\n        sliceGroupNum: sliceGroupUEV.value + 1\r\n    };\r\n}\r\n","/**\r\n * @file: pps.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\nexport type SEIProps = {};\r\n\r\n/**\r\n * decode (SEI)Supplemental enhancement information\r\n * @param payload\r\n */\r\nexport function decodeSEI(payload: Uint8Array): SEIProps {\r\n    payload;\r\n    return {};\r\n}\r\n","/**\r\n * @file: nalu.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\nimport DataViewReader from '../../util/dv';\r\nimport NaluTypes from '../../enum/nalu-types';\r\nimport discardEP3B from './ep3b';\r\nimport { decodeSPS, SPSProps } from './sps';\r\nimport { decodePPS, PPSProps } from './pps';\r\nimport { decodeSEI, SEIProps } from './sei';\r\n\r\n/**\r\n * decode (AUD)Access unit delimiter\r\n * @param payload\r\n * @private\r\n */\r\nfunction _decodeAUD(payload: Uint8Array): number {\r\n    // var primary_pic_type_table = {\r\n    //     0x084, // 2, 7\r\n    //     0x0a5, // 0, 2, 5, 7\r\n    //     0x0e7, // 0, 1, 2, 5, 6, 7\r\n    //     0x210, // 4, 9\r\n    //     0x318, // 3, 4, 8, 9\r\n    //     0x294, // 2, 4, 7, 9\r\n    //     0x3bd, // 0, 2, 3, 4, 5, 7, 8, 9\r\n    //     0x3ff, // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9\r\n    // }\r\n\r\n    return payload[0] >> 5;\r\n}\r\n\r\nexport default class NALU extends DataViewReader {\r\n    forbidden_zero_bit: number;\r\n    ref_idc: number;\r\n    unit_type: number;\r\n    data: Uint8Array;\r\n    rawData: Uint8Array;\r\n    sps: SPSProps;\r\n    pps: PPSProps;\r\n    sei: SEIProps;\r\n    primary_pic_type: number;\r\n    pts?: number;\r\n    dts?: number;\r\n\r\n    constructor(buffer: Uint8Array) {\r\n        super();\r\n\r\n        this.forbidden_zero_bit = buffer[0] >> 7;\r\n\r\n        // nalu priority.\r\n        this.ref_idc = (buffer[0] >> 5) & 0x03;\r\n\r\n        // specifies the type of RBSP data structure. see in mux-nalu-types.js\r\n        this.unit_type = buffer[0] & 0x1f;\r\n\r\n        this.data = discardEP3B(buffer.subarray(1));\r\n        this.rawData = buffer;\r\n\r\n        switch (this.unit_type) {\r\n            case NaluTypes.NON_IDR_SLICE:\r\n                break;\r\n            case NaluTypes.DPA_SLICE:\r\n            case NaluTypes.DPB_SLICE:\r\n            case NaluTypes.DPC_SLICE:\r\n                // TODO decode A/B/C Partition Slice.\r\n                break;\r\n            case NaluTypes.IDR_SLICE:\r\n                // this.data = decodeSlice(this.data).data;\r\n                break;\r\n            case NaluTypes.SPS:\r\n                this.sps = decodeSPS(this.data);\r\n                break;\r\n            case NaluTypes.PPS:\r\n                this.pps = decodePPS(this.data);\r\n                break;\r\n            case NaluTypes.SEI:\r\n                this.sei = decodeSEI(this.data);\r\n                break;\r\n            case NaluTypes.AUD:\r\n                this.primary_pic_type = _decodeAUD(this.data);\r\n                break;\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @file: avc.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\n/**\r\n * h.264/AVC codec\r\n */\r\nimport CacheBuffer from '../util/cache-buffer';\r\nimport EventEmitter from '../util/event-emitter';\r\nimport logger from '../util/logger';\r\nimport NALU from './avc/nalu';\r\n\r\nexport type AVCCodecData = {\r\n    pts: number;\r\n    dts: number;\r\n    naluSizeLength?: number;\r\n    payload: Uint8Array;\r\n};\r\n\r\nexport interface AVCDecoderConfigurationRecord {\r\n    version: number;\r\n    profile: number;\r\n    profileCompatibility: number;\r\n    level: number;\r\n    naluSizeLength: number;\r\n    spsNalus: Uint8Array[];\r\n    ppsNalus: Uint8Array[];\r\n}\r\n\r\ntype ParsePesState = 0 | 1 | 2 | 3;\r\n\r\nexport class AVCCodec extends EventEmitter {\r\n    private lastState: ParsePesState = null;\r\n    private lastNALu: NALU = null;\r\n    private lastNALuState: ParsePesState = null;\r\n\r\n    private spitNalu_(bytes: Uint8Array, pts: number, dts: number) {\r\n        let nalu: NALU = new NALU(bytes);\r\n\r\n        nalu.pts = pts;\r\n        nalu.dts = dts;\r\n\r\n        this.lastNALu = nalu;\r\n        this.emit('nalu', nalu);\r\n    }\r\n\r\n    push(data: AVCCodecData) {\r\n        const { lastState, lastNALuState } = this;\r\n        let i = 0,\r\n            lastNALuOffset = -1,\r\n            { pts, dts, payload, naluSizeLength } = data;\r\n\r\n        if (!naluSizeLength) {\r\n            // Start parse Annex-B Byte stream format\r\n            let j = payload.byteLength - 1;\r\n            let dropZerosLength = 0;\r\n\r\n            // Collect tailing zeros.\r\n            // end with 0x000000 and more...\r\n            do {\r\n                if (payload[j] === 0x00) {\r\n                    dropZerosLength++;\r\n                } else {\r\n                    break;\r\n                }\r\n\r\n                j--;\r\n            } while (j > 0);\r\n\r\n            if (dropZerosLength >= 3) {\r\n                // drop tailing zeros.\r\n                payload = payload.subarray(0, j + 1);\r\n            }\r\n\r\n            const len = payload.length;\r\n\r\n            let state: ParsePesState = 0;\r\n            do {\r\n                let value = payload[i++];\r\n\r\n                // loop optimization.\r\n                if (state === 0) {\r\n                    state = value ? 0 : 1;\r\n                    continue;\r\n                } else if (state === 1) {\r\n                    state = value ? 0 : 2;\r\n                    continue;\r\n                }\r\n\r\n                // value will be 2 or 3\r\n                if (!value) {\r\n                    state = 3;\r\n                } else if (value === 1) {\r\n                    if (lastNALuOffset >= 0) {\r\n                        this.lastNALuState = state;\r\n                        this.spitNalu_(payload.subarray(lastNALuOffset, i - 1 - state), pts, dts);\r\n                    } else {\r\n                        // naluOffset is undefined => this is the first start code found in this PES packet\r\n                        // first check if start code delimiter is overlapping between 2 PES packets,\r\n                        // ie it started in last packet (lastState not zero)\r\n                        // and ended at the beginning of this PES packet (i <= 4 - lastState)\r\n                        const lastUnit = this.lastNALu;\r\n                        if (lastUnit) {\r\n                            if (lastState && i <= 4 - lastState) {\r\n                                // start delimiter overlapping between PES packets\r\n                                // strip start delimiter bytes from the end of last NAL unit\r\n                                // check if lastUnit had a state different from zero\r\n                                if (lastNALuState) {\r\n                                    // strip last bytes\r\n                                    lastUnit.rawData = lastUnit.rawData.subarray(\r\n                                        0,\r\n                                        lastUnit.rawData.byteLength - lastState\r\n                                    );\r\n                                }\r\n                            }\r\n\r\n                            // If NAL units are not starting right at the\r\n                            // beginning of the PES packet, push preceding data\r\n                            // into previous NAL unit.\r\n                            let overflow = i - state - 1;\r\n                            if (overflow > 0) {\r\n                                logger.log(`overflow NALU found: ${overflow}/${pts}/${dts}`);\r\n                                let cb = new CacheBuffer();\r\n\r\n                                cb.append(lastUnit.rawData);\r\n                                cb.append(payload.subarray(0, overflow));\r\n                                let bytes = cb.toNewBytes();\r\n                                cb.clear(); // gc\r\n\r\n                                lastUnit.rawData = bytes;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // reset state & record last unit start byte offset.\r\n                    if (i < len) {\r\n                        // console.log(`'find NALU @ offset: ${i}`);\r\n                        lastNALuOffset = i;\r\n                        state = 0;\r\n                    }\r\n                } else {\r\n                    state = 0;\r\n                }\r\n            } while (i < len);\r\n\r\n            if (lastNALuOffset >= 0 && state >= 0) {\r\n                this.lastNALuState = state;\r\n                this.spitNalu_(payload.subarray(lastNALuOffset, len), pts, dts);\r\n            }\r\n\r\n            this.lastState = state;\r\n        } else {\r\n            let startPos = 0,\r\n                size = 0,\r\n                endPos = 0,\r\n                byteLength = payload.length;\r\n            do {\r\n                size = 0;\r\n                for (let k = 0; k < naluSizeLength; k++) {\r\n                    size = size | (payload[startPos + k] << ((naluSizeLength - k - 1) * 8));\r\n                }\r\n                // size = (data_byte[i] << 24) | (data_byte[i + 1] << 16) | (data_byte[i + 2] << 8) | data_byte[i + 3];\r\n                startPos += naluSizeLength;\r\n                endPos = startPos + size;\r\n                if (endPos > byteLength) {\r\n                    endPos = byteLength;\r\n                }\r\n\r\n                this.spitNalu_(payload.subarray(startPos, endPos), pts, dts);\r\n                startPos = endPos;\r\n            } while (startPos < byteLength);\r\n        }\r\n\r\n        this.emit('done');\r\n    }\r\n\r\n    reset() {\r\n        this.lastState = null;\r\n        this.lastNALu = null;\r\n        this.lastNALuState = null;\r\n    }\r\n}\r\n","/**\r\n * @file: avc-config.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\nimport { SPSProps } from './sps';\r\n// import { PPSProps } from './pps';\r\n\r\n/**\r\n * AVC Config Helper\r\n * Accord sps/pps, generate mimeType info.\r\n */\r\nexport default (sps: SPSProps /*, pps?: PPSProps*/) => {\r\n    let profile_idc = sps.profile_idc;\r\n    let profile_compatibility = sps.profile_compatibility;\r\n    let level_idc = sps.level_idc;\r\n    let codecString = 'avc1.';\r\n\r\n    let arr = [profile_idc, profile_compatibility, level_idc];\r\n    for (let j = 0; j < arr.length; j++) {\r\n        let h = arr[j].toString(16);\r\n        if (h.length < 2) {\r\n            h = '0' + h;\r\n        }\r\n        codecString += h;\r\n    }\r\n\r\n    return {\r\n        codec: codecString\r\n    };\r\n};\r\n","/**\r\n * @file: avc.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\n/**\r\n * H.264/AVC/HEVC Stream.\r\n */\r\nimport { AVCCodec, AVCCodecData } from '../../codec/avc';\r\nimport getAVCConfig from '../../codec/avc/avc-config';\r\nimport NALU from '../../codec/avc/nalu';\r\nimport NaluTypes from '../../enum/nalu-types';\r\nimport { StreamTypes } from '../../enum/stream-types';\r\nimport logger from '../../util/logger';\r\nimport Stream from '../../util/stream';\r\nimport { PSI } from '../psi';\r\nimport { AVCFrame, GOP, GOPVector, PESStreamEmitData } from '../types/pipeline';\r\n\r\nclass H264Stream extends Stream {\r\n    private PSI: PSI;\r\n    private trackId?: number;\r\n    private currentFrame: AVCFrame;\r\n    private prevFrame: AVCFrame;\r\n    private codec: AVCCodec;\r\n    private gop: GOP;\r\n    private gops: GOPVector;\r\n\r\n    constructor(psi: PSI) {\r\n        super();\r\n\r\n        this.PSI = psi;\r\n        this.trackId = null;\r\n\r\n        /** @private {Array} */\r\n        this.currentFrame = []; // a group of nalu\r\n\r\n        /** @private {AVCCodec} */\r\n        this.codec = new AVCCodec();\r\n\r\n        this._newGop();\r\n        this._newGops();\r\n\r\n        this.codec.on('nalu', (nalu: NALU) => {\r\n            if (nalu.unit_type === NaluTypes.SPS) {\r\n                let track = this.PSI.findTrack(this.trackId);\r\n                let config = getAVCConfig(nalu.sps);\r\n\r\n                // write sps info to video track.\r\n                track.codec = config.codec;\r\n                track.width = nalu.sps.width;\r\n                track.height = nalu.sps.height;\r\n                track.profileIdc = nalu.sps.profile_idc;\r\n                track.profileCompatibility = nalu.sps.profile_compatibility;\r\n                track.levelIdc = nalu.sps.level_idc;\r\n                track.pixelRatio = nalu.sps.pixelRatio;\r\n                track.sps = [nalu.rawData];\r\n            } else if (nalu.unit_type === NaluTypes.PPS) {\r\n                let track = this.PSI.findTrack(this.trackId);\r\n                track.pps = [nalu.rawData];\r\n            }\r\n\r\n            this._grouping(nalu);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Push a complete pes\r\n     * @param data\r\n     */\r\n    push(data: PESStreamEmitData) {\r\n        const { stream_type, pes, pid } = data;\r\n        if (stream_type === StreamTypes.H264 || stream_type === StreamTypes.HEVC) {\r\n            this.trackId = pid;\r\n\r\n            let rawData: AVCCodecData = {\r\n                pts: pes.PTS,\r\n                dts: pes.DTS,\r\n                payload: pes.data_byte\r\n            };\r\n\r\n            this.codec.push(rawData);\r\n        }\r\n    }\r\n\r\n    flush() {\r\n        // Push last frame into gop.\r\n        if (this.currentFrame.length > 0) {\r\n            // If the last frame has valid duration, use the duration of the previous frame\r\n            if (!this.currentFrame.duration || this.currentFrame.duration <= 0) {\r\n                this.currentFrame.duration = this.prevFrame.duration || 0;\r\n            }\r\n\r\n            this._pushFrameIntoGop();\r\n            this.currentFrame = [];\r\n        }\r\n\r\n        // Push last gop.\r\n        if (this.gop.length > 0) {\r\n            this._pushGopIntoGroup();\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this.codec.reset();\r\n\r\n        this.currentFrame = [];\r\n        this._newGop();\r\n        this._newGops();\r\n    }\r\n\r\n    /**\r\n     * Group nalu into frame & gop.\r\n     * @param currentNal\r\n     * @private\r\n     */\r\n    _grouping(currentNal) {\r\n        if (currentNal.unit_type === NaluTypes.AUD) {\r\n            if (this.currentFrame.length > 0) {\r\n                this.currentFrame.duration = currentNal.dts - this.currentFrame.dts;\r\n\r\n                if (this.gop.length > 0 && this.currentFrame.keyframe) {\r\n                    this.gop.trackId = this.trackId;\r\n\r\n                    this._pushGopIntoGroup();\r\n                }\r\n\r\n                // the gop should commence with a key frame,\r\n                // or the frame will be dropped until finding one that contains a key frame.\r\n                if (this.currentFrame.keyframe || this.gop.length > 0) {\r\n                    this._pushFrameIntoGop();\r\n                } else {\r\n                    logger.warn(`h264 codec drop frame`);\r\n                }\r\n            }\r\n\r\n            this.prevFrame = this.currentFrame;\r\n\r\n            // end a frame.\r\n            this.currentFrame = [];\r\n            this.currentFrame.keyframe = false;\r\n            this.currentFrame.byteLength = 0;\r\n            this.currentFrame.naluCount = 0;\r\n            this.currentFrame.pts = currentNal.pts;\r\n            this.currentFrame.dts = currentNal.dts;\r\n        } else {\r\n            if (currentNal.unit_type === NaluTypes.IDR_SLICE) {\r\n                this.currentFrame.keyframe = true;\r\n            }\r\n\r\n            this.currentFrame.byteLength += currentNal.rawData.byteLength;\r\n            this.currentFrame.naluCount++;\r\n            this.currentFrame.push(currentNal);\r\n        }\r\n\r\n        this.currentFrame.duration = currentNal.dts - this.currentFrame.dts;\r\n    }\r\n\r\n    _newGop() {\r\n        this.gop = []; // a group of idr-start-frame sequence\r\n\r\n        this.gop.duration = 0;\r\n        this.gop.naluCount = 0;\r\n        this.gop.byteLength = 0;\r\n    }\r\n\r\n    _pushFrameIntoGop() {\r\n        // Gop\r\n        this.gop.push(this.currentFrame);\r\n        this.gop.duration += this.currentFrame.duration;\r\n        this.gop.byteLength += this.currentFrame.byteLength;\r\n        this.gop.naluCount += this.currentFrame.naluCount;\r\n    }\r\n\r\n    _newGops() {\r\n        this.gops = []; // a group of gop\r\n        this.gops.type = 'video';\r\n        this.gops.duration = 0;\r\n        this.gops.naluCount = 0;\r\n        this.gops.byteLength = 0;\r\n        this.gops.frameLength = 0;\r\n        this.gops.firstDTS = 0;\r\n    }\r\n\r\n    _pushGopIntoGroup() {\r\n        let firstFrame = this.gop[0];\r\n        // GOPs\r\n        this.gops.trackId = this.trackId;\r\n        this.gops.duration += this.gop.duration;\r\n        this.gops.byteLength += this.gop.byteLength;\r\n        this.gops.naluCount += this.gop.naluCount;\r\n        this.gops.frameLength += this.gop.length;\r\n        this.gops.firstDTS = firstFrame.dts;\r\n        this.gops.firstPTS = firstFrame.pts;\r\n\r\n        this.gops.push(this.gop);\r\n\r\n        this.emit('data', this.gops);\r\n\r\n        this._newGop();\r\n        this._newGops();\r\n\r\n        this.emit('done');\r\n    }\r\n}\r\n\r\nexport default H264Stream;\r\n","/**\r\n * @file: elementary.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\n/**\r\n * Elementary Stream.\r\n * @summary An elementary stream (ES) as defined by the MPEG communication protocol is usually the output of an audio or video encoder.\r\n *      ES contains only one kind of data, e.g. audio, video or closed caption.\r\n * @description  https://en.wikipedia.org/wiki/Elementary_stream\r\n */\r\nimport { StreamTypes } from '../../enum/stream-types';\r\nimport { Context, GlobalOptions } from '../../types/globals';\r\nimport { isNumber } from '../../util/is';\r\nimport logger from '../../util/logger';\r\nimport Stream from '../../util/stream';\r\nimport { PSI } from '../psi';\r\nimport { PESStreamEmitData, GOPVector } from '../types/pipeline';\r\nimport ADTSStream from './adts';\r\nimport AVCStream from './avc';\r\n\r\nclass ElementaryStream extends Stream {\r\n    private context: Context;\r\n    private PSI: PSI;\r\n    private options: GlobalOptions;\r\n    private tracks: Array<GOPVector>;\r\n    private adtsStream: ADTSStream;\r\n    private avcStream: AVCStream;\r\n    private streams: [ADTSStream, AVCStream];\r\n\r\n    constructor(ctx: Context, psi: PSI, options: GlobalOptions = {}) {\r\n        super();\r\n\r\n        this.context = ctx;\r\n        this.PSI = psi;\r\n        this.options = options;\r\n        this.tracks = [];\r\n        this.adtsStream = new ADTSStream(psi);\r\n        this.avcStream = new AVCStream(psi);\r\n        this.streams = [this.adtsStream, this.avcStream];\r\n\r\n        if (options.decodeCodec) {\r\n            this.avcStream.on('data', (data: GOPVector) => {\r\n                let stubTime = options.config.stubTime;\r\n\r\n                if (isNumber(stubTime)) {\r\n                    let end = (data.firstPTS + data.duration) / 90000;\r\n                    if (end < stubTime) {\r\n                        logger.warn(`drop avc gop, start/end/stubTime(${data.firstPTS}/${end}/${stubTime})`);\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                this.tracks.push(data);\r\n                this.emit('data', this.tracks);\r\n                this.tracks = [];\r\n                this.adtsStream.flush();\r\n            });\r\n\r\n            this.adtsStream.on('data', (data) => {\r\n                let stubTime = options.config.stubTime;\r\n\r\n                if (isNumber(stubTime)) {\r\n                    let end = (data.firstPTS + data.duration) / 90000;\r\n                    if (end < stubTime) {\r\n                        logger.warn(`drop adts, start/end/stubTime(${data.firstPTS}/${end}/${stubTime})`);\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                this.tracks.push(data);\r\n                this.emit('data', this.tracks);\r\n                this.tracks = [];\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Push a complete pes\r\n     * @param data\r\n     */\r\n    push(data: PESStreamEmitData): void {\r\n        const { options, adtsStream, avcStream } = this;\r\n        let { stream_type } = data;\r\n\r\n        if (options.decodeCodec) {\r\n            switch (stream_type) {\r\n                case StreamTypes.H264:\r\n                case StreamTypes.HEVC:\r\n                    avcStream.push(data);\r\n                    break;\r\n                case StreamTypes.ADTS:\r\n                    adtsStream.push(data);\r\n                    break;\r\n                default:\r\n                    logger.warn(`ts elementary encounter unknown stream type ${stream_type}`);\r\n            }\r\n        } else {\r\n            this.emit('data', data);\r\n        }\r\n    }\r\n\r\n    flush(): void {\r\n        let { streams, tracks } = this;\r\n        for (let i = 0; i < this.streams.length; i++) {\r\n            let stream = streams[i];\r\n\r\n            stream.flush();\r\n        }\r\n\r\n        if (tracks.length > 0) {\r\n            this.emit('data', tracks);\r\n        }\r\n\r\n        this.emit('done');\r\n\r\n        tracks.splice(0, tracks.length);\r\n    }\r\n\r\n    reset(): void {\r\n        this.tracks = [];\r\n\r\n        for (let i = 0; i < this.streams.length; i++) {\r\n            let stream = this.streams[i];\r\n\r\n            stream.reset();\r\n        }\r\n\r\n        this.emit('reset');\r\n    }\r\n}\r\n\r\nexport default ElementaryStream;\r\n","/**\r\n * @file: pes.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\n/**\r\n * Structure for Pes.\r\n */\r\nexport class Pes {\r\n    // private start_code_prefix: number;\r\n    // stream_id: number;\r\n    // packet_length: number;\r\n    // data_alignment_indicator: number;\r\n    // copyright: number;\r\n    // ESCR_flag: number;\r\n    // ES_rate_flag: number;\r\n    // trick_mode_flag: number;\r\n    // additional_copy_info_flag: number;\r\n    // CRC_flag: number;\r\n    // extension_flag: number;\r\n    PTS: number;\r\n    DTS: number;\r\n    data_byte: Uint8Array;\r\n\r\n    constructor(buffer: Uint8Array) {\r\n        // The packet_start_code_prefix is a 24-bit code.\r\n        // this.start_code_prefix = (buffer[0] << 16) | (buffer[1] << 8) | buffer[2];\r\n\r\n        // In Transport Streams,\r\n        // the stream_id may be set to any valid value which correctly describes the elementary stream type.\r\n        // the elementary stream type is specified in the PSI(Program Specific Information).\r\n        // this.stream_id = buffer[3];\r\n\r\n        // A 16-bit field specifying the number of bytes in the PES packet.\r\n        // this.packet_length = (buffer[4] << 8) | buffer[5];\r\n\r\n        // this.data_alignment_indicator = buffer[6] & 0x04;\r\n\r\n        // this.copyright = buffer[6] & 0x02;\r\n\r\n        // PTS (presentation time stamp)\r\n        // DTS (decoding time stamp)\r\n        let PTS_DTS_flags = buffer[7] >> 6;\r\n\r\n        // ESCR (Elementary Stream Clock Reference system):\r\n        // A time stamp in the PES Stream from which decoders of PES streams may derive timing.\r\n        // this.ESCR_flag = buffer[7] & 0x20;\r\n\r\n        // this.ES_rate_flag = buffer[7] & 0x10;\r\n\r\n        // this.trick_mode_flag = buffer[7] & 0x08;\r\n\r\n        // this.additional_copy_info_flag = buffer[7] & 0x04;\r\n\r\n        // this.CRC_flag = buffer[7] & 0x02;\r\n\r\n        // this.extension_flag = buffer[7] & 0x01;\r\n\r\n        let header_data_length = buffer[8];\r\n\r\n        this.PTS = 0;\r\n        if ((PTS_DTS_flags & 0x02) == 0x02) {\r\n            this.PTS = this.calcTimestamp_(buffer, 9);\r\n        }\r\n\r\n        // if there is no dts, let DTS=PTS\r\n        // See Annex D - D.0.2 Audio and Video Presentation Synchronization\r\n        this.DTS = this.PTS;\r\n\r\n        if ((PTS_DTS_flags & 0x01) == 0x01) {\r\n            this.DTS = this.calcTimestamp_(buffer, 14);\r\n        }\r\n\r\n        // if (this.ESCR_flag === 1) {\r\n        // }\r\n        //\r\n        // if (this.ES_rate_flag === 1) {\r\n        // }\r\n        //\r\n        //\r\n        // if (this.trick_mode_flag === 1) {\r\n        //\r\n        // }\r\n        //\r\n        // if (this.ESCR_flag === 1) {\r\n        // }\r\n\r\n        this.data_byte = buffer.subarray(9 + header_data_length);\r\n\r\n        // this.isStartPes = (buffer[0] << 16 | buffer[1] << 8 | buffer[2]) & 0xffffff === 0x000001;\r\n    }\r\n\r\n    /**\r\n     * @param buffer\r\n     * @param start\r\n     */\r\n    private calcTimestamp_(buffer: Uint8Array, start: number): number {\r\n        // PTS / DTS is 33 bit\r\n        return (\r\n            // JS Bitwise operators treat their operands as a sequence of 32 bits,\r\n            // We cannot use bitwise operator in JS beyond 32bits\r\n            (buffer[start] & 0x0e) * 536870912 + // Math.pow(2, 29) === 536870912\r\n            (buffer[start + 1] << 22) +\r\n            ((buffer[start + 2] >> 1) << 15) +\r\n            (buffer[start + 3] << 7) +\r\n            (buffer[start + 4] >> 1)\r\n        );\r\n    }\r\n\r\n    // valid(): boolean {\r\n    //     let start_code_prefix = this.start_code_prefix;\r\n\r\n    //     return (\r\n    //         start_code_prefix[0] === 0x00 &&\r\n    //         start_code_prefix[1] === 0x00 &&\r\n    //         start_code_prefix[2] === 0x01\r\n    //     );\r\n    // }\r\n}\r\n","/**\r\n * @file: pes.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\n/**\r\n * Packetized Elementary Stream.\r\n */\r\nimport { Context } from '../../types/globals';\r\nimport CacheBuffer from '../../util/cache-buffer';\r\nimport Stream from '../../util/stream';\r\nimport { PSI } from '../psi';\r\nimport { Packet } from '../structs/packet';\r\nimport { Pes } from '../structs/pes';\r\nimport { PESStreamEmitData } from '../types/pipeline';\r\n\r\nclass PesStream extends Stream {\r\n    private context: Context;\r\n    private PSI: PSI;\r\n    private PID?: number;\r\n    private cache_buffer: CacheBuffer;\r\n\r\n    constructor(ctx: Context, psi: PSI) {\r\n        super();\r\n\r\n        this.context = ctx;\r\n        this.PSI = psi;\r\n        this.PID = null;\r\n        this.cache_buffer = new CacheBuffer();\r\n    }\r\n\r\n    /**\r\n     * @param packet\r\n     */\r\n    push(packet: Packet) {\r\n        const self = this;\r\n\r\n        // PES PID\r\n        // 0x20 - 0xff is reserved for dvb etc. (https://en.wikipedia.org/wiki/Program-specific_information#PSI_labels)\r\n        // but this is not strict restriction.\r\n        if (packet.PID > 0x001f && packet.PID < 0x1fff) {\r\n            if (this.PSI.currentProgramPID == -1) {\r\n                self._pushPacket(packet);\r\n            } else if (this.PSI.currentProgramPID !== packet.PID) {\r\n                if (packet.payload_unit_start_indicator === 1) {\r\n                    self._assembleOnePES();\r\n                }\r\n\r\n                self._pushPacket(packet);\r\n            }\r\n        }\r\n    }\r\n\r\n    flush() {\r\n        const self = this;\r\n\r\n        // 组装最后一个PES\r\n        self._assembleOnePES();\r\n\r\n        self.emit('done');\r\n    }\r\n\r\n    reset() {\r\n        this._clearCached();\r\n\r\n        this.emit('reset');\r\n    }\r\n\r\n    _clearCached() {\r\n        this.PID = null;\r\n        this.cache_buffer.clear();\r\n    }\r\n\r\n    _pushPacket(p) {\r\n        let empty = this.cache_buffer.empty;\r\n\r\n        // Make first packet in cache is start unit.\r\n        if (empty && p.payload_unit_start_indicator === 0) {\r\n            return;\r\n        }\r\n\r\n        if (empty) {\r\n            this.PID = p.PID;\r\n        }\r\n\r\n        this.cache_buffer.append(p.payload);\r\n    }\r\n\r\n    _assembleOnePES() {\r\n        const self = this;\r\n\r\n        if (!this.cache_buffer.empty) {\r\n            let bytes;\r\n\r\n            try {\r\n                bytes = this.cache_buffer.toNewBytes();\r\n            } catch (e) {\r\n                throw `pes alloc mem err ${this.cache_buffer.byteLength}`;\r\n            }\r\n\r\n            let pesData = new Pes(bytes);\r\n            let track = this.PSI.findTrack(this.PID);\r\n\r\n            // console.log(`stream_id: ${pesData.stream_id}, PTS: ${pesData.PTS}, DTS: ${pesData.DTS}`);\r\n\r\n            if (track) {\r\n                let data: PESStreamEmitData = {\r\n                    pid: track.id,\r\n                    stream_type: track.stream_type,\r\n                    // pcr_pid: track.pcr_pid,\r\n                    pes: pesData\r\n                };\r\n                // Assemble one pes packet, emit it to next stream.\r\n                self.emit('data', data);\r\n            }\r\n\r\n            self._clearCached();\r\n        }\r\n    }\r\n}\r\n\r\nexport default PesStream;\r\n","/**\r\n * @file: packet.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\nconst SYNC_BYTE = 0x47; // The sync_byte is a fixed 8-bit field whose value is '0100 0111' (0x47).\r\n\r\n/**\r\n * packet structure.\r\n */\r\nexport class Packet {\r\n    sync_byte: number;\r\n    // transport_error_indicator: number;\r\n    payload_unit_start_indicator: number;\r\n    // transport_priority: number;\r\n    PID: number;\r\n    // tsc: number;\r\n    afc: number;\r\n    // continuity_counter: number;\r\n    has_payload: number;\r\n    has_adaptation: number;\r\n    // is_discontinuity: boolean;\r\n    payload: Uint8Array;\r\n\r\n    /**\r\n     * @param buffer\r\n     */\r\n    constructor(buffer: Uint8Array) {\r\n        this.sync_byte = buffer[0];\r\n\r\n        // this.transport_error_indicator = buffer[1] >> 7;\r\n\r\n        // Indicating transport stream packets carry PES packets or PSI data\r\n        // PES: 1 -> commence with the first byte of a PES packet,  0 -> no PES packet shall start in this packet.\r\n        // PSI: 1 -> carries the first byte of a PSI section, 0 -> no pointer_field in the payload.\r\n        this.payload_unit_start_indicator = (buffer[1] >> 6) & 1;\r\n\r\n        // this.transport_priority = (buffer[1] >>> 5) & 1;\r\n\r\n        // The PID(Packet ID) is a 13-bit field, indicating the type of the data stored in the packet payload.\r\n        // NOTE – The transport packets with PID values 0x0000, 0x0001, and 0x0010-0x1FFE are allowed to carry a PCR.\r\n        // ISO/IEC 13818-1 : 2000 (E)\r\n        // Value                  Description\r\n        // 0x0000                 Program Association Table\r\n        // 0x0001                 Conditional Access Table\r\n        // 0x0002                 Transport Stream Description Table\r\n        // 0x0003-0x000F          Reserved\r\n        // 0x0010 ... 0x1FFE      May be assigned as network_PID, Program_map_PID, elementary_PID, or for other purposes\r\n        // https://www.dvb.org/resources/public/standards/a38_dvb-si_specification.pdf\r\n        // 0x0040                 Network_information_section-actual_network\r\n        // 0x0041                 Network_information_section-other_network\r\n        // 0x0042                 Service_description_section-actual_transport_stream\r\n        // 0x0043                 TO 0x45 Reserved for future use\r\n        // 0x0046                 Service_description_section-other_transport_stream\r\n        // 0x0047                 TO 0x49 Reserved for future use\r\n        // 0x004A                 Bouquet_association_section\r\n        // 0x004B                 TO 0x4D Reserved for future use\r\n        // 0x004E                 Event_information_section-actual_transport_stream,P/F\r\n        // 0x004F                 Event_information_section-other_transport_stream,P/F\r\n        // 0x0050                 TO 0x5F Event_information_section-actual_transport_stream,schedule\r\n        // 0x0060                 TO 0x6F Event_information_section-other_transport_stream,schedule\r\n        // 0x0070                 Time_data_section\r\n        // 0x0071                 Running_status_section\r\n        // 0x0072                 Stuffing_section\r\n        // 0x0073                 Time_offset_section\r\n        // 0x0074                 TO 0x007D Reserved for future use\r\n        // 0x007E                 Discontinuity_information_section\r\n        // 0x007F                 Selection_information_section\r\n        // 0x0080                 TO 0x00FE User defined\r\n        // 0x00FF                 Reserved\r\n        // 0x1FFF                 Null packet\r\n        this.PID = ((buffer[1] << 8) | buffer[2]) & 0x1fff;\r\n\r\n        // transport_scrambling_control\r\n        // this.tsc = buffer[3] >> 6;\r\n\r\n        // adaptation_field_control\r\n        // Value  Description\r\n        // 00     Reserved for future use by ISO/IEC\r\n        // 01     No adaptation_field, payload only\r\n        // 10     Adaptation_field only, no payload\r\n        // 11     Adaptation_field followed by payload\r\n        this.afc = (buffer[3] >> 4) & 3;\r\n\r\n        // '1' indicates that the discontinuity state is true for the current Transport Stream packet.\r\n        // this.continuity_counter = buffer[3] & 0xf;\r\n\r\n        // self defines.\r\n        this.has_payload = this.afc & 1;\r\n        this.has_adaptation = this.afc & 2;\r\n        // this.is_discontinuity = this.has_adaptation && buffer[4] != 0 /* with length > 0 */ && buffer[5] & 0x80;\r\n        /* and discontinuity indicated */\r\n\r\n        if (this.has_payload) {\r\n            if (this.has_adaptation) {\r\n                let adaptation_field_length = buffer[4];\r\n                this.payload = buffer.subarray(5 + adaptation_field_length);\r\n            } else {\r\n                this.payload = buffer.subarray(4);\r\n            }\r\n        }\r\n    }\r\n\r\n    valid() {\r\n        return this.sync_byte === SYNC_BYTE && this.has_payload === 1;\r\n    }\r\n}\r\n","/**\r\n * @file: demux.js, created at Monday, 23rd December 2019 3:47:23 pm\r\n * @copyright Copyright (c) 2020\r\n * @author gem <gems.xu@gmail.com>\r\n */\r\n\r\n/**\r\n * MPEG-2 transport stream demuxer.\r\n */\r\nimport DemuxFacade from '../demux-facade';\r\nimport muxErrorCode from '../mux-error-code';\r\nimport { GlobalOptions, PushConf } from '../types/globals';\r\nimport logger from '../util/logger';\r\nimport { PSI } from './psi';\r\nimport M2TSComplexStream from './streams/complex';\r\nimport ElementaryStream from './streams/elementary';\r\nimport PesStream from './streams/pes';\r\nimport { Packet } from './structs/packet';\r\n\r\nconst CHUNK_BYTE_LENGTH = 188; // Transport Stream chunks shall be 188 bytes long.\r\n\r\ntype InterfaceStream = M2TSComplexStream | ElementaryStream;\r\n\r\nexport class TSDemux extends DemuxFacade {\r\n    private psi_: PSI;\r\n    private pesStream_: PesStream;\r\n    private elementaryStream_: ElementaryStream;\r\n    private complexStream_: M2TSComplexStream;\r\n\r\n    constructor(options: GlobalOptions = {}) {\r\n        super(options);\r\n\r\n        this.psi_ = new PSI();\r\n        this.pesStream_ = new PesStream(this.ctx_, this.psi_);\r\n        this.elementaryStream_ = new ElementaryStream(this.ctx_, this.psi_, options);\r\n        this.complexStream_ = new M2TSComplexStream(this.ctx_, this.psi_);\r\n\r\n        // Compose pipeline\r\n        this.pipe(this.pesStream_);\r\n        this.pesStream_.pipe(this.elementaryStream_);\r\n        this.elementaryStream_.pipe(this.complexStream_);\r\n\r\n        super.listenEndStream_();\r\n    }\r\n\r\n    /**\r\n     * This is end pipeline stream\r\n     */\r\n    get endStream(): InterfaceStream {\r\n        let stream: InterfaceStream = this.elementaryStream_;\r\n\r\n        if (this.options_.decodeCodec) {\r\n            stream = this.complexStream_;\r\n        }\r\n\r\n        return stream;\r\n    }\r\n\r\n    /**\r\n     * TS push support streaming incomplete data push.\r\n     * @param buffer\r\n     * @param conf\r\n     * @param conf.done - If you need the done event, this boolean needs to be set\r\n     */\r\n    push(buffer: ArrayBuffer | Uint8Array, conf: PushConf = {}) {\r\n        const { done } = conf;\r\n        const { options_, ctx_, cache_buffer_, psi_ } = this;\r\n        let newBuf: Uint8Array = super.constraintPushData_(buffer);\r\n        let cacheByteLength = cache_buffer_.byteLength;\r\n        let byteOffset = null;\r\n\r\n        options_.config = conf;\r\n\r\n        logger.log(\r\n            `hls demux received ${newBuf.byteLength} bytes, cache ${cacheByteLength} bytes. ${done ? 'chunk done' : ''}`\r\n        );\r\n\r\n        cache_buffer_.append(newBuf);\r\n\r\n        while (cache_buffer_.byteLength >= CHUNK_BYTE_LENGTH) {\r\n            let chunk = cache_buffer_.cut(CHUNK_BYTE_LENGTH);\r\n\r\n            // The pushed buffer may be so small that can't cut a ts chunk.\r\n            if (chunk) {\r\n                let packet = new Packet(chunk);\r\n\r\n                if (packet.valid()) {\r\n                    psi_.parse(packet);\r\n\r\n                    this.emit('data', packet);\r\n                } else {\r\n                    let errMsg = `Encounter invalid ts packet, packet_length(${chunk.length}), cache_length(${this.cache_buffer_.byteLength}), has_payload(${packet.has_payload}), data(${chunk})`;\r\n\r\n                    logger.error(errMsg);\r\n\r\n                    this.reset();\r\n\r\n                    ctx_.emit('error', muxErrorCode.TS_SYNC_BYTE, errMsg, {\r\n                        startByte: byteOffset,\r\n                        endByte: byteOffset + chunk.byteLength\r\n                    });\r\n                    break;\r\n                }\r\n\r\n                byteOffset += chunk.byteLength;\r\n            }\r\n        }\r\n\r\n        if (cache_buffer_.empty && done) {\r\n            // logger.log('mux packet done!');\r\n            this.emit('done');\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this.cache_buffer_.clear();\r\n\r\n        this.emit('reset');\r\n    }\r\n}\r\n"],"names":["Events","console","global","AVCStream"],"mappings":"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"}